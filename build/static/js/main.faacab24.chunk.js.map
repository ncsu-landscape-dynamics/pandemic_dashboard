{"version":3,"sources":["components/tooltip.js","App.js","index.js"],"names":["Tooltip","features","this","props","className","map","feature","i","key","layer","id","React","Component","mapboxgl","accessToken","stops","stopsSymbol","options","name","description","property","presenceProperty","myDeckLayer","MapboxLayer","coordinateSystem","COORDINATE_SYSTEM","LNGLAT_OFFSETS","type","ArcLayer","pickable","getWidth","getSourcePosition","d","START","getTargetPosition","END","getSourceColor","getTargetColor","transitions","auto_highlight","console","log","App","mapRef","createRef","handleViewportChange","viewport","setState","state","handleGeocoderViewportChange","transitionDuration","onViewportChange","width","height","etc","active","popupInfo","length","ReactDOM","render","createElement","tooltipContainer","unmountComponentAtNode","setFill","document","Map","container","current","style","center","zoom","pitch","minpitchZoom","maxBounds","on","addLayer","addSource","data","presence","source","filter","centroid_lat","properties","centroid_lon","interactive","layout","PitchToggle","bearing","minpitchzoom","_bearing","_pitch","_minpitchzoom","_map","_this","_btn","onclick","getPitch","getZoom","easeTo","_container","appendChild","parentNode","removeChild","undefined","addControl","MapboxGeocoder","placeholder","popup","Popup","closeButton","closeOnClick","e","getCanvas","cursor","prob_intro","queryRenderedFeatures","point","setLngLat","lngLat","setHTML","addTo","remove","setPaintProperty","presenceFeatures","layers","Fragment","ref","option","onChange","checked","stop","backgroundColor","toLocaleString","getElementById"],"mappings":"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","file":"static/js/main.faacab24.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Tooltip extends React.Component {\n\n  static propTypes = {\n    features: PropTypes.array.isRequired\n  };\n\n  render() {\n    const { features } = this.props;\n\n    const renderFeature = (feature, i) => {\n      return (\n        <div key={i}>\n          <strong className='mr3'>{feature.layer['source-layer']}:</strong>\n          <span className='color-gray-light'>{feature.layer.id}</span>\n        </div>\n      )\n    };\n\n    return (\n      <div className=\"flex-parent-inline flex-parent--center-cross flex-parent--column absolute bottom\">\n        <div className=\"flex-child px12 py12 bg-gray-dark color-white shadow-darken10 round txt-s w240 clip txt-truncate\">\n          {features.map(renderFeature)}\n        </div>\n        <span className=\"flex-child color-gray-dark triangle triangle--d\"></span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl'\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport data from './data/pandemic_output.json'\nimport presence from './data/presence_pandemic.json'\nimport Tooltip from './components/tooltip'\nimport ReactDOM from 'react-dom'\n// import {ArcLayer} from '@deck.gl/layers';\n// import {ArcLayer, ScatterplotLayer} from '@deck.gl/layers';\nimport {MapboxLayer} from '@deck.gl/mapbox';\n// import DeckGL, {ArcLayer} from 'deck.gl';\nimport {ArcLayer} from 'deck.gl';\n// import * as d3 from 'd3';\n// import turf, {polygon} from '@turf/turf';\n// import DeckGL, {ArcLayer, ScatterplotLayer} from 'deck.gl';\n// import {StaticMap} from 'react-map-gl';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\n// import arcData from './data/arcs.json'\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n// import {LineLayer} from '@deck.gl/layers';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw'\n\n// Color scale & legend agreed upon by team:\nvar stops =  [\n  [0.0, 'rgba(033,033,033, 0.005)'],\n  [0.001, 'rgba(255, 247, 236, 0.6)'],\n  [0.5, 'rgba(208,129,91, 0.6)'], \n  [1.0, 'rgba(127,0,0, 0.6)']\n// NOTE: ^ scale above is simplified version of full scale range:\n// [0.0, 'rgba(033,033,033, 0.005)'],\n// [0.001, 'rgba(255, 247, 236, 0.6)'],\n// [0.1, 'rgba(253,222,197, 0.6)'],\t\n// [0.2, 'rgba(246,197,165, 0.6)'],\t\t\t\n// [0.3, 'rgba(235,174,138, 0.6)'], \n// [0.4, 'rgba(222,151,113, 0.6)'],\t\n// [0.5, 'rgba(208,129,91, 0.6)'], \n// [0.6, 'rgba(193,106,71, 0.6)'],\t\t\n// [0.7, 'rgba(177,84,52, 0.6)'], \n// [0.8, 'rgba(161,62,34, 0.6)'],\t\n// [0.9, 'rgba(144,37,18, 0.6)'],\n// [1.0, 'rgba(127,0,0, 0.6)']\n]\n\nvar stopsSymbol = [\n  ['true', 1],\n  ['false', 0.0],\n]\n\n\nconst options = [{\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2000',\n  presenceProperty: 'Presence 2000',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2001',\n  presenceProperty: 'Presence 2001',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2002',\n  presenceProperty: 'Presence 2002',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2003',\n  presenceProperty: 'Presence 2003',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2004',\n  presenceProperty: 'Presence 2004',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2005',\n  presenceProperty: 'Presence 2005',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2006',\n  presenceProperty: 'Presence 2006',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2007',\n  presenceProperty: 'Presence 2007',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2008',\n  presenceProperty: 'Presence 2008',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2009',\n  presenceProperty: 'Presence 2009',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2010',\n  presenceProperty: 'Presence 2010',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2011',\n  presenceProperty: 'Presence 2011',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2012',\n  presenceProperty: 'Presence 2012',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2013',\n  presenceProperty: 'Presence 2013',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2014',\n  presenceProperty: 'Presence 2014',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2015',\n  presenceProperty: 'Presence 2015',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2016',\n  presenceProperty: 'Presence 2016',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2017',\n  presenceProperty: 'Presence 2017',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2018',\n  presenceProperty: 'Presence 2018',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2019',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2019',\n  presenceProperty: 'Presence 2019',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2020',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2020',\n  presenceProperty: 'Presence 2020',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2021',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2021',\n  presenceProperty: 'Presence 2021',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2022',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2022',\n  presenceProperty: 'Presence 2022',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2023',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2023',\n  presenceProperty: 'Presence 2023',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2024',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2024',\n  presenceProperty: 'Presence 2024',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2025',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2025',\n  presenceProperty: 'Presence 2025',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2026',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2026',\n  presenceProperty: 'Presence 2026',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2027',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2027',\n  presenceProperty: 'Presence 2027',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}, {\n  name: '2028',\n  description: 'Introduction Probability',\n  property: 'Agg Prob Intro 2028',\n  presenceProperty: 'Presence 2028',\n  stops: stops,\n  stopsSymbol: stopsSymbol,\n}\n]\n\n// migrate out - red\nvar SOURCE_COLOR = [35, 181, 184];\n// migrate in - blue\nvar TARGET_COLOR =  [166, 3, 3];\n\n// var RADIUS_SCALE = d3.scaleSqrt().domain([0, 8000]).range([1000, 20000]);\n// var WIDTH_SCALE = 400;\n\nconst myDeckLayer = new MapboxLayer({\n  coordinateSystem: COORDINATE_SYSTEM.LNGLAT_OFFSETS,\n  id: 'connectionsArcs',\n  type: ArcLayer,\n  pickable: true,\n    getWidth: 5,\n  // data: arcData,\n  // data: \n  // [\n  //     {\n  //       \"2000\": 2000,\n  //       \"START\": [\n  //         116.363625,\n  //         39.913818\n          \n  //       ],\n  //       \"END\": [\n  //         115.188919,\n  //         -8.409518\n        \n  //       ]\n  //     },\n  //     {\n  //       \"2001\": 2000,\n  //       \"START\": [\n  //         103.851959,\n  //         1.29027\n          \n  //       ],\n  //       \"END\": [\n  //         101.693207,,\n  //         3.140853\n  //       ]\n  //     },\n  //     {\n  //       \"2002\": 2002,\n  //       \"START\": [\n  //         103.851959,\n  //         1.29027\n  //       ],\n  //       \"END\": [\n  //         114.177216,\n  //         22.302711\n  //       ]\n  //     },\n  //     {\n  //       \"2003\": 2003,\n  //       \"START\": [ \n  //         100.523186,\n  //         13.736717\n  //       ],\n  //       \"END\": [ \n  //         101.693207,\n  //         3.140853\n  //       ]\n  //     },\n  //     {\n  //       \"2004\": 2004,\n  //       \"START\": [\n  //         116.363625,\n  //         39.913818\n  //       ],\n  //       \"END\": [\n  //         114.177216,\n  //         22.302711\n  //       ]\n  //     },\n  //     {\n  //       \"2005\": 2005,\n  //       \"START\": [\n  //         101.693207,\n  //         3.140853\n  //       ],\n  //       \"END\": [ \n  //         103.851959,\n  //         1.29027\n  //       ]\n  //     },\n  //     {\n  //       \"2006\": 2006,\n  //       \"START\": [   139.839478,\n  //         35.652832\n  //       ],\n  //       \"END\": [101.693207,\n  //         3.140853\n  //       ]\n  //     },\n  //     {\n  //       \"2007\": 2007,\n  //       \"START\": [\n  //         116.363625,\n  //         39.913818\n  //       ],\n  //       \"END\": [103.851959,\n  //         1.29027\n  //       ]\n  //     },\n  //     {\n  //       \"2008\": 2008,\n  //       \"START\": [   \n  //         114.177216,\n  //         22.302711\n  //       ],\n  //       \"END\": [ \n  //         101.693207,\n  //         3.140853\n  //       ]\n  //     },\n  //     {\n  //       \"2009\": 2009,\n  //       \"START\": [ 101.693207,\n  //         3.140853\n  //       ],\n  //       \"END\": [  114.177216,\n  //         22.302711\n  //       ]\n  //     },\n  //     {\n  //       \"2010\": 2010,\n  //       \"START\": [\n  //         100.523186,\n  //         13.736717\n  //       ],\n  //       \"END\": [\n  //         103.851959,\n  //         1.29027\n  //       ]\n  //     },\n  //     {\n  //       \"2011\": 2011,\n  //       \"START\": [\n  //         114.177216,\n  //         22.302711\n  //       ],\n  //       \"END\": [\n  //         116.363625,\n  //         39.913818\n  //       ]\n  //     },\n  //     {\n  //       \"2012\": 2012,\n  //       \"START\": [\n  //         100.523186,\n  //         13.736717\n  //       ],\n  //       \"END\": [\n  //         114.177216,\n  //         22.302711\n  //       ]\n  //     },\n  //     {\n  //       \"2013\": 2013,\n  //       \"START\": [\n  //         116.363625,\n  //         39.913818 \n  //       ],\n  //       \"END\": [\n  //         139.839478,\n  //         35.652832\n  //       ]\n  //     },\n  //     {\n  //       \"2014\": 2014,\n  //       \"START\": [\n  //         139.839478,\n  //         35.652832\n  //       ],\n  //       \"END\": [\n  //         115.188919,\n  //         -8.409518\n  //       ]\n  //     },\n  //     {\n  //       \"2015\": 2015,\n  //       \"START\": [\n  //         100.523186,\n  //         13.736717\n  //       ],\n  //       \"END\": [\n  //         115.188919,\n  //         -8.409518\n  //       ]\n  //     },\n  //     {\n  //       \"2016\": 2016,\n  //       \"START\": [\n  //         103.851959,\n  //         1.29027\n  //       ],\n  //       \"END\": [\n  //         114.177216,\n  //         22.302711\n  //       ]\n  //     },\n  //   ],\n  // layers: [layers],\n  // getSourceColor: d => [128, 0, 0, 0],\n  // getTargetColor: d => [255, 255, 255, 0],\n  // getFillColor: [255, 0, 0],\n  \n  getSourcePosition: d => d.START,\n  getTargetPosition: d => d.END,\n  getSourceColor: SOURCE_COLOR,\n  getTargetColor: TARGET_COLOR,\n//   updateTriggers: {\n//     getSourceColor: 0,\n//     getTargetColor: 2000\n//  },\n  // strokeWidth:20000,\n  // getStrokeWidth: WIDTH_SCALE,\n  // getSourceColor: d => [128, 0, 0, 0][d.quantile],\n  // getTargetColor: d => [255, 255, 255, 0][d.quantile],\n  // pickable: true,\n  transitions: {\n  // getFillColor: 3000,\n// getRadius: {\n//   duration: 3000,\n//   easing: d3.easeBackInOut,\n// },\n  },\n  auto_highlight: true\n});\n\nconsole.log(myDeckLayer)\n\n\n// const INITIAL_VIEW_STATE = {\n//   longitude: -122.41669,\n//   latitude: 37.7853,\n//   zoom: 13,\n//   pitch: 0,\n//   bearing: 0\n// };\n\n// // Data to be used by the LineLayer\n// const deckData = [\n//   {sourcePosition: [-122.41669, 37.7853], targetPosition: [-122.41669, 37.781]}\n// ];\n// var turfCentroid = require('turf-centroid');\n// var result = {\n//   \"type\": \"FeatureCollection\",\n//   \"features\": []\n// };\n\n// for (var i = 0; i < data.features.length; i++) {\n//   result.features.push(\n//       {\n//           \"type\": \"Feature\",\n//           \"properties\": {\"id\": data.features[i].properties.UN},\n//           \"geometry\": turfCentroid(data.features[i]).geometry\n//       }\n//   );\n// }\n// console.log(result)\nclass App extends React.Component {\n  // _onWebGLInitialized = (gl) => {\n  //   this.setState({gl});\n  // }\n\n  \n  \n\n\n  mapRef = React.createRef();\n\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n  };\n\n  handleGeocoderViewportChange = viewport => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\n    return this.handleViewportChange({\n      ...viewport,\n      ...geocoderDefaultOverrides\n    });\n  };\n\n\n  mapRef = React.createRef();\n  map;\n  tooltipContainer;\n\n  setTooltip(features) {\n    if (features.length) {\n      ReactDOM.render(\n        React.createElement(\n          Tooltip, {\n            features\n          }\n        ),\n        this.tooltipContainer\n      );\n    } else {\n      ReactDOM.unmountComponentAtNode(this.tooltipContainer);\n    }\n  }\n\n  constructor(props: Props) {\n    \n    super(props);\n    this.state = {\n      active: options[0],\n      // active: arcOptions[0] ,\n      viewport: {\n      },\n      popupInfo: null\n    };\n  }\n\n  onViewportChange = viewport => { \n    const {width, height, ...etc} = viewport\n    this.setState({viewport: etc})\n  } \n\n  componentDidUpdate() {\n    this.setFill();\n    // this.addLayer();\n  }\n\n\n  componentDidMount() {\n    // const layers = [\n    //   new LineLayer({id: 'line-layer', deckData})\n    // ];\n    // const mapRef = useRef()\n    this.tooltipContainer = document.createElement('div');\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax',\n      // style: 'mapbox://styles/mapbox/dark-v10',\n      center: [40, 40],\n      zoom: 1.2,\n      pitch: 0,\n      minpitchZoom: 1,\n      maxBounds: [ [-175, -80], [195, 86] ], // Sets bounds as max extent\n      });\n\n    //   const deck = new DeckGL({\n    //     gl: this.map.painter.context.gl,\n    //     layers: [\n    //         new ScatterplotLayer({\n    //             id: 'my-scatterplot',\n    //             data: [\n    //                 {position: [-74.5, 40], size: 100}\n    //             ],\n    //             getPosition: d => d.position,\n    //             getRadius: d => d.size,\n    //             getFillColor: [255, 0, 0]\n    //         })\n    //     ]\n    // });\n\n      /* Zoom */\n      // this.map.addControl(new ZoomControl(), 'top-right');\n      // /* Ruler */\n      // this.map.addControl(new RulerControl(), 'bottom-left');\n      // /* Inspect */\n      // this.map.addControl(new InspectControl(), 'bottom-left');\n      /* Compass */\n      // this.map.addControl(new CompassControl(), 'top-right');\n\n      // Load the data and layers once Mapbox map style loads\n      // this.map.on('style.load', () => {\n      //   json(arcData);\n      // });\n\n    this.map.on('load', () => {\n      // const deck = this._deck;\n      // this.map.addLayer(new MapboxLayer({id: 'my-scatterplot', deck}), 'waterway-label');\n\n      // add to mapbox\n    // map.addLayer(new MapboxLayer({id: 'my-scatterplot', deck}));\n\n    // // update the layer\n    // deck.setProps({\n    //     layers: [\n    //         new ScatterplotLayer({\n    //             id: 'my-scatterplot',\n    //             data: [\n    //                 {position: [-74.5, 40], size: 100}\n    //             ],\n    //             getPosition: d => d.position,\n    //             getRadius: d => d.size,\n    //             getFillColor: [0, 0, 255]\n    //         })\n    //     ]\n    // });\n      // this.map.loadImage(\n      //   'https://upload.wikimedia.org/wikipedia/commons/7/7c/201408_cat.png',\n      //   function(error, image) {\n      //   if (error) throw error;\n      //   map.addImage('cat', image);\n      // this.map.addLayer(myDeckLayer);\n      console.log(this.map.addLayer(myDeckLayer))\n          \n      // if (this.map.getLayer(\"countries\")) {\n      //   this.map.removeLayer(\"countries\");\n      // };\n      // if (this.map.getSource(\"countries\")) {\n      //   this.map.removeSource(\"countries\");\n      // };\n      // if (this.map.getLayer(\"presence\")) {\n      //   this.map.removeLayer(\"presence\");\n      // };\n      // if (this.map.getSource(\"presence\")) {\n      //   this.map.removeSource(\"presence\");\n      // };\n\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      this.map.addSource('presencedata', {\n        type: 'geojson',\n        presence\n      });\n// console.log(presenceData)\n      // this.map.addSource('arcLayer', {\n      //   type: 'ArcLayer',\n      //   arcData\n      // });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries',\n        filter: [\"all\",\n        [\"!=\", \"NAME\", \"China\"],\n        [\"!=\", \"NAME\", \"India\"],\n        [\"!=\", \"NAME\", \"Viet Nam\"],\n     ]\n      },'country-label'); \n\n      this.map.addLayer({\n        id: 'native-data',\n        type: 'fill',\n        source: 'countries',\n        filter: \n        [\"in\", \"NAME\", \"China\", \"India\", \"Viet Nam\"],\n      \n      },'country-label'); \n\n      // const { coordinates } = this.state.active;\n      // const polygon = polygon(\n      //   data.features[0].geometry.coordinates, \n      //   data.features[0].properties\n      //   // { name: 'poly1', population: 400}\n      //   );\n        console.log(data.features[0]);\n        const centroid_lat = data.features[0].properties.centroid_lat[0]\n        const centroid_lon = data.features[0].properties.centroid_lon[0]\n        console.log(centroid_lat)\n        console.log(centroid_lon)\n    // const  centroid  = turf.point([centroid_lat,centroid_lon])\n    // console.log(centroid)\n      // const points = turf.featureCollection(data.features[0])\n      // ;\n      // const coords = data.features[0].geometry.coordinates[0][0]\n      // const centroid = JSON.stringify(coords);\n      // JSON.stringify(centroid)\n      \n      // const points = turf.points([[centroid]])\n      \n      // var max_area_polygon;\n      // var max_area = 0 ;\n      \n      // for(poly in (data.features[0].coordinates[0])){                              \n      //     polygon = turf.polygon((data.features[0].geometry.coordinates)[poly])\n      //     area = turf.area(polygon); \n      \n      //     if(area > max_area){\n      //         max_area = area\n      //         max_area_polygon = polygon // polygon with the largest area\n      //     }\n      // }\n      // const center = turf.centerOfMass(max_area_polygon);\n      // console.log(center);\n\n      // polygonCenter({\n      //   let polygon = turfHelpers.multiPolygon([[centroid]])\n      //   let centroid = turf.centroid(polygon)\n      //   return centroid.geometry.coordinates\n      // });\n      // )\n      this.map.addLayer({\n        id: 'presence',\n        type: 'symbol',\n        source: 'countries',\n        // filter:\n        // [\"==\", \"$geometry.coordinates\", 1],\n        // sourceLayer: 'presencedata',\n        interactive: true,\n        layout: {\n          // \"icon-image\": \"SLF_Vector\",\n          \"icon-image\": \"pest_icon_outline_01\",\n          'icon-allow-overlap': false,\n          'icon-ignore-placement': true,\n          // 'icon-anchor': data.\n          'icon-size':0.70,\n          // 'icon-color':'#fff'\n        },\n      },'country-label'); \n    \n      // this.map.addLayer(arclayer, 'waterway-label');\n      //   this.map.addLayer(myDeckLayer, {\n      //     id: 'arcLayer',\n      //     type: 'ArcLayer',\n      //   });\n      //   if (this.map.getLayer(\"arcLayer\")) {\n      //     this.map.removeLayer(\"arcLayer\");\n      // }\n      // this.map.on('styledata', function () {\n      //   // Triggered when `setStyle` is called.\n      //   if (data) addLayer();\n      // });\n      // this.map.addControl(new mapboxgl.FullscreenControl());\n      //\n     \n    \n    // var myFeatures = this.map.queryRenderedFeatures(\n    // {layers:['countries','presence']\n    //     // layers: 'countries', 'presence'\n    //    // i'm confident there is data matching this filter \n    // }\n    // );\n   \n// console.log(myFeatures);\n    this.setFill();\n    });\n\n    // const {arcId } = this.state.active;\n    // console.log(arcId);\n\n    // Original ES6 Class— https://github.com/tobinbradley/mapbox-gl-pitch-toggle-control\n    // export default class PitchToggle {\n        class PitchToggle {\n          constructor({ bearing = -20, pitch = 70, minpitchzoom = null }) {\n            this._bearing = bearing;\n            this._pitch = pitch;\n            this._minpitchzoom = minpitchzoom;\n          }\n  \n          onAdd(map) {\n            this._map = map;\n            let _this = this;  \n            this._btn = document.createElement(\"button\");\n            this._btn.className = \"mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d\";\n            this._btn.type = \"button\";\n            this._btn[\"aria-label\"] = \"Toggle Pitch\";\n            this._btn.onclick = function() {\n              if (map.getPitch() === 0) {\n                let options = { pitch: _this._pitch, bearing: _this._bearing };\n                if (_this._minpitchzoom && map.getZoom() > _this._minpitchzoom) {\n                  options.zoom = _this._minpitchzoom;\n                }\n                map.easeTo(options);\n                _this._btn.className =\n                  \"mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-2d\";\n              } else {\n                map.easeTo({ pitch: 0, bearing: 0 });\n                _this._btn.className =\n                  \"mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d\";\n              }\n            };\n  \n            this._container = document.createElement(\"div\");\n            this._container.className = \"mapboxgl-ctrl-group mapboxgl-ctrl\";\n            this._container.appendChild(this._btn);\n  \n            return this._container;\n          }\n  \n          onRemove() {\n            this._container.parentNode.removeChild(this._container);\n            this._map = undefined;\n          }\n        }\n  \n  \n        /* Add Controls to the Map */\n        // this.map.addControl(new mapboxgl.NavigationControl(), \"top-left\");\n        this.map.addControl(new MapboxGeocoder({\n          accessToken: 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw',\n          mapboxgl: mapboxgl,\n          placeholder: 'Search for a Location'\n        }), 'top-right');\n        this.map.addControl(new PitchToggle({ minpitchzoom: 16 }), \"top-right\");\n  \n\n        // const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n        //   offset: [-120, 0]\n        // }).setLngLat([0,0]).addTo(this.map);\n    \n        var popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false\n          });\n    \n          this.map.on('mouseenter', 'countries', (e) => {\n            this.map.getCanvas().style.cursor =  'pointer';\n          });\n          // console.log(data)\n          const { property } = this.state.active;\n          const prob_intro = data.features[0].properties[property]\n          console.log(prob_intro)\n          this.map.on('click', 'countries', (e) => {\n            const features = this.map.queryRenderedFeatures(e.point, {\n          });\n          const { property } = this.state.active;\n          const prob_intro = features[0].properties[property]\n          this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n          popup \n          .setLngLat(e.lngLat)\n           .setHTML(`<b><u>Country Information</b></u><ul><li><b>Name: </b>${features[0].properties[\"NAME\"]}</li><li><b>Introduction Probability: </b>${prob_intro}</li></ul>`)\n          .addTo(this.map);\n        });\n\n       \n\n        // const markerEl = document.createElement('div');\n        // markerEl.innerHTML = '🐞';\n        // var presenceMarker = new mapboxgl.Marker(markerEl, { offset: [5,-5] })\n        // presence_data.features.forEach((marker) => {\n        //     presenceMarker\n        //       .setLngLat(marker.geometry.coordinates)\n        //       .addTo(this.map);\n        //         markerEl.addEventListener('click', () => {\n        //           this.map.flyTo({\n        //               center: marker.geometry.coordinates,\n        //               zoom: 3,\n        //           });\n        //         });\n        // });\n        \n  \n    this.map.on('mouseleave', 'countries', (e) => {\n      this.map.getCanvas().style.cursor =  '';\n      popup.remove();\n    });\n\n   \n  }\n  \n  setFill() {\n    const { property, stops, presenceProperty } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    },\n    )\n    this.map.setPaintProperty('countries', 'fill-outline-color', {\n      property,\n      stops\n    },\n    )\n    this.map.setPaintProperty('presence', 'icon-opacity', {\n        property: presenceProperty,\n        type: \"categorical\",\n           stops: \n          //  stopsSymbol\n           [\n            ['true', 1],\n            ['false', 0.0],\n           ]\n          },\n    \n    )\n    this.map.setPaintProperty('native-data', 'fill-color', \n      '#737373'\n    );\n    this.map.setPaintProperty('native-data', \"fill-pattern\", \n    // 'diagonal'); \n    'diagonal_lines'); \n    // 'noun_stripes_2098710');\n   \n    // this.map.setPaintProperty('countries', 'fill-outline-color', {\n    // stops\n    // // '#7F7F7F',\n    // }\n    // )\n    var presenceFeatures = this.map.queryRenderedFeatures ( { layers: ['presence'] })\n  console.log(presenceFeatures)\n  // relatedFeatures[0].geometry.coordinates[0]\n  }\n  // addLayer() {\n  //   const { arcId } = this.state.active;\n  //   this.map.addLayer('arcLayer' , {\n  //     arcId\n  //   }\n  //   )\n  // }\n\nfeatures () {   \n  this.mapRef.current.queryRenderedFeatures( { layers: ['countries','presence'] })\n  }\n\n  render() {\n    // const {gl} = this.state;\n    // const myDeckLayer = new MapboxLayer({\n    //   coordinateSystem: COORDINATE_SYSTEM.LNGLAT_OFFSETS,\n    //   id: 'connectionsArcs',\n    //   type: ArcLayer,\n    //   data: arcData,\n    //   // layers: [layers],\n    //   getSourceColor: d => [128, 0, 0, 0],\n    //   getTargetColor: d => [255, 255, 255, 0],\n    //   // getFillColor: [255, 0, 0],\n    //   strokeWidth:0.1,\n    //   getSourcePosition: d => d.START,\n    //   getTargetPosition: d => d.END,\n    //   pickable: true,\n    //   auto_highlight: true\n    // });\n\n    // const layers = [\n    //   new ScatterplotLayer({\n    //     coordinateSystem: COORDINATE_SYSTEM.LNGLAT_OFFSETS,\n    //   id: 'my-scatterplot',\n    //   type: ArcLayer,\n    //   data: arcData,\n    //   // layers: [layers],\n    //   getSourceColor: d => [128, 0, 0, 0],\n    //   getTargetColor: d => [255, 255, 255, 0],\n    //   // getFillColor: [255, 0, 0],\n    //   strokeWidth:0.1,\n    //   getSourcePosition: d => d.START,\n    //   getTargetPosition: d => d.END,\n    //   pickable: true,\n    //   auto_highlight: true\n\n    //     // id: 'my-scatterplot',\n    //     // data: [\n    //     //   {position: [-74.5, 40], size: 10000}\n    //     // ],\n    //     // getPosition: d => d.position,\n    //     // getRadius: d => d.size,\n    //     // getColor: [255, 0, 0]\n    //   })\n    // ];\n    const { \n      viewport,\n    } = this.state\n    const { name, description, stops, property } = this.state.active;\n    // const { name, description, stops, property, presenceProperty , stopsSymbol} = this.state.active;\n    const renderLegendKeys = (stop, i) => {\n    return ( \n        <div key={i} className='txt-xs '>\n          <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n          <span className='px12 py12' >{`${stop[0].toLocaleString()}`}</span>\n        </div>\n      );\n    }\n\n   \n    const renderOptions = (option, i) => {\n      return (\n        <label key={i} className=\"toggle-container w36 maxw60 pa24\">\n          <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n          <div  className=\"toggle txt-xs color-white toggle--gray  toggle--active-darken100 maxw60 w50 pl6 pr6\">{option.name}</div>\n        </label>\n      );\n    }\n  \n    \n    return (\n      <React.Fragment>\n      \n\n      <div>\n      {/* <DeckGL\n      initialViewState={INITIAL_VIEW_STATE}\n      controller={true}\n      layers={layers} />; */}\n      {/* <DeckGL\n        ref={ref => {\n          // save a reference to the Deck instance\n          this._deck = ref && ref.deck;\n        }}\n        layers={layers}\n        initialViewState={INITIAL_VIEW_STATE}\n        controller={true}\n        onWebGLInitialized={this._onWebGLInitialized}\n      >\n        {gl && (\n          <StaticMap\n            ref={ref => {\n              // save a reference to the mapboxgl.Map instance\n              this._map = ref && ref.getMap();\n            }}\n            gl={gl}\n            // mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            mapboxApiAccessToken=\"pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw\"\n            onLoad={this._onMapLoad}\n          />\n        )}\n      </DeckGL> */}\n        <div ref={this.mapRef} \n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        // mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        // onViewportChange={viewport}\n        // mapboxApiAccessToken={MAPBOX_TOKEN}\n        // queryRenderedFeatures={features} \n        className=\"absolute top right left bottom align-middle grid\" />\n        <label className=\" align-middle top  txt-s mb30 mt3 ml18 ctxt-bold pa0 color-white absolute bg-transparent\" ><b>Select Year:</b></label>\n        <div className=\"toggle-group grid-2 grid mt24 pl3 pr3 align-middle top ctxt-bold  color-white absolute border border--2 border--white bg-transparent shadow-darken10  \">\n        {options.map(renderOptions)} \n        </div>\n        <div  className=\" bg-transparent px3  grid-3 color-white absolute align-middle bottom w100 left border--white round border border--2 round shadow-darken10  txt-xs\">\n          <div className=' color-gray-light px3 txt-xs'>\n            <h2 className=\"txt-bold txt-xs block color-white px0 \">{name}</h2>\n            <p className='txt-xs color-white px0 py0'>{description}</p>\n            {/* <p className='txt-xs color-white px0 py0'>{presenceProperty}</p> */}\n          </div>\n          {stops.map(renderLegendKeys)}\n          {/* {stopsSymbol.map(renderLegendKeys)} */}\n        </div>\n      </div>\n      </React.Fragment>\n    );//absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App';\n\nReactDOM.render( <App /> , document.getElementById(\"root\"))\n"],"sourceRoot":""}