{"version":3,"sources":["logo.svg","components/tooltip.js","control-panel.js","map-style.js","utils.js","App.js","index.js"],"names":["module","exports","React","Component","ControlPanel","settings","this","props","className","year","href","target","key","type","value","min","max","step","onChange","evt","PureComponent","dataLayer","id","paint","property","stops","updatePercentiles","featureCollection","accessor","features","scale","scaleQuantile","domain","map","range","f","properties","percentile","mapboxgl","accessToken","options","name","description","propertyPresence","App","mapRef","_loadData","data","setState","income","state","_updateSettings","_onViewportChange","viewport","_onHover","event","srcEvent","offsetX","offsetY","hoveredFeature","find","layer","x","y","active","latitude","longitude","zoom","bearing","pitch","popupInfo","setFill","tooltipContainer","document","createElement","requestJson","error","response","Map","container","current","style","center","on","e","addSource","presence_data","addLayer","source","interactive","layout","Marker","offset","setLngLat","addTo","popup","Popup","closeButton","closeOnClick","pestMarker","console","log","getCanvas","cursor","queryRenderedFeatures","point","prob_intro","length","lngLat","setHTML","remove","left","top","height","position","width","mapStyle","onViewportChange","mapboxApiAccessToken","onHover","_renderTooltip","containerComponent","setPaintProperty","ref","option","i","checked","stop","backgroundColor","toLocaleString","ReactDOM","render","getElementById"],"mappings":"wl01UAAAA,EAAOC,QAAU,IAA0B,kC,iLCGNC,IAAMC,U,OCAtBC,E,uKACT,IAAD,OACAC,EAAYC,KAAKC,MAAjBF,SAEP,OACE,uBAAKG,UAAU,iBACb,iDACA,iFACuD,yBAAIH,EAASI,MADpE,wCAIA,yCACe,qBAAGC,KAAK,kBAAR,qBAEf,uBAAKF,UAAU,eACb,qBACEE,KAAK,0EACLC,OAAO,QAFT,qBAOF,2BAEA,uBAAKC,IAAK,OAAQJ,UAAU,SAC1B,qCACA,yBACEK,KAAK,QACLC,MAAOT,EAASI,KAChBM,IAAK,KACLC,IAAK,KACLC,KAAM,EACNC,SAAU,SAAAC,GAAG,OAAI,EAAKZ,MAAMW,SAAS,OAAQC,EAAIR,OAAOG,gB,GAhC1BM,iBCF7BC,EAAY,CACvBC,GAAI,OACJT,KAAM,OACNU,MAAO,CACL,aAAc,CACZC,SAAU,aACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,EAAG,aAGR,eAAgB,K,uBChBb,SAASC,EAAkBC,EAAmBC,GAAW,IACvDC,EAAYF,EAAZE,SACDC,EAAQC,cACXC,OAAOH,EAASI,IAAIL,IACpBM,MAAMA,YAAM,IACf,MAAO,CACLrB,KAAM,oBACNgB,SAAUA,EAASI,KAAI,SAAAE,GACrB,IAAMrB,EAAQc,EAASO,GACjBC,EAAU,2BACXD,EAAEC,YADS,IAEdtB,QACAuB,WAAYP,EAAMhB,KAEpB,OAAO,2BAAIqB,GAAX,IAAcC,mB,YCEpBE,IAASC,YAAc,6FACvB,IAGId,EAAS,CACX,CAAC,EAAG,wBACJ,CAAC,GAAK,wBACN,CAAC,GAAK,yBACN,CAAC,GAAK,yBACN,CAAC,GAAK,yBACN,CAAC,GAAK,yBACN,CAAC,GAAK,4BACN,CAAC,GAAK,wBACN,CAAC,GAAK,yBACN,CAAC,GAAK,yBACN,CAAC,EAAG,0BAGAe,EAAU,CAAC,CACfC,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVmB,iBAAkB,gBAClBlB,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,iCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GACN,CACDgB,KAAM,OACNC,YAAa,2BACblB,SAAU,kCACVC,MAAOA,GAC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","file":"static/js/main.28d339f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1094cb6d.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Tooltip extends React.Component {\n\n  static propTypes = {\n    features: PropTypes.array.isRequired\n  };\n\n  render() {\n    const { features } = this.props;\n\n    const renderFeature = (feature, i) => {\n      return (\n        <div key={i}>\n          <strong className='mr3'>{feature.layer['source-layer']}:</strong>\n          <span className='color-gray-light'>{feature.layer.id}</span>\n        </div>\n      )\n    };\n\n    return (\n      <div className=\"flex-parent-inline flex-parent--center-cross flex-parent--column absolute bottom\">\n        <div className=\"flex-child px12 py12 bg-gray-dark color-white shadow-darken10 round txt-s w240 clip txt-truncate\">\n          {features.map(renderFeature)}\n        </div>\n        <span className=\"flex-child color-gray-dark triangle triangle--d\"></span>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {PureComponent} from 'react';\n\nexport default class ControlPanel extends PureComponent {\n  render() {\n    const {settings} = this.props;\n\n    return (\n      <div className=\"control-panel\">\n        <h3>Interactive GeoJSON</h3>\n        <p>\n          Map showing median household income by state in year <b>{settings.year}</b>. Hover over a\n          state to see details.\n        </p>\n        <p>\n          Data source: <a href=\"www.census.gov\">US Census Bureau</a>\n        </p>\n        <div className=\"source-link\">\n          <a\n            href=\"https://github.com/visgl/react-map-gl/tree/5.2-release/examples/geojson\"\n            target=\"_new\"\n          >\n            View Code â†—\n          </a>\n        </div>\n        <hr />\n\n        <div key={'year'} className=\"input\">\n          <label>Year</label>\n          <input\n            type=\"range\"\n            value={settings.year}\n            min={1995}\n            max={2015}\n            step={1}\n            onChange={evt => this.props.onChange('year', evt.target.value)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// For more information on data-driven styles, see https://www.mapbox.com/help/gl-dds-ref/\nexport const dataLayer = {\n  id: 'data',\n  type: 'fill',\n  paint: {\n    'fill-color': {\n      property: 'percentile',\n      stops: [\n        [0, '#3288bd'],\n        [1, '#66c2a5'],\n        [2, '#abdda4'],\n        [3, '#e6f598'],\n        [4, '#ffffbf'],\n        [5, '#fee08b'],\n        [6, '#fdae61'],\n        [7, '#f46d43'],\n        [8, '#d53e4f']\n      ]\n    },\n    'fill-opacity': 0.8\n  }\n};\n","import {range} from 'd3-array';\nimport {scaleQuantile} from 'd3-scale';\n\nexport function updatePercentiles(featureCollection, accessor) {\n  const {features} = featureCollection;\n  const scale = scaleQuantile()\n    .domain(features.map(accessor))\n    .range(range(9));\n  return {\n    type: 'FeatureCollection',\n    features: features.map(f => {\n      const value = accessor(f);\n      const properties = {\n        ...f.properties,\n        value,\n        percentile: scale(value)\n      };\n      return {...f, properties};\n    })\n  };\n}\n","import * as React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl'\nimport data from './pandemic_output.json'\nimport presence_data from './presence_pandemic.json'\nimport Tooltip from './components/tooltip'\nimport ReactDOM from 'react-dom'\n\nimport {Component} from 'react';\nimport {render} from 'react-dom';\nimport MapGL, {Source, Layer} from 'react-map-gl';\nimport ControlPanel from './control-panel';\n\nimport {dataLayer} from './map-style.js';\nimport {updatePercentiles} from './utils';\nimport {json as requestJson} from 'd3-request';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n\n// var draw;\nvar stops =  [\n  [0, 'rgba(45,69,132, 0.4)'],\t\n  [0.1, 'rgba(77,30,129, 0.4)'],\t\n  [0.2, 'rgba(109,41,126, 0.4)'],\t\t\t\n  [0.3, 'rgba(141,52,123, 0.4)'], \n  [0.4, 'rgba(173,63,120, 0.4)'],\t\n  [0.5, 'rgba(205,74,118, 0.4)'], \n  [0.6, 'rgba(210,103,103\t, 0.4)'],\t\t\n  [0.7, 'rgba(216,132,89,0.7)'], \n  [0.8, 'rgba(222,161,75, 0.4)'],\t\n  [0.9, 'rgba(228,190,61, 0.4)'],\n  [1, 'rgba(240,249,33, 0.4)']\n]\n\nconst options = [{\n  name: '1993',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T0',\n  propertyPresence: 'Presence 1993',\n  stops: stops\n}, {\n  name: '1994',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T1',\n  stops: stops\n}, {\n  name: '1995',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T2',\n  stops: stops\n}, {\n  name: '1996',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T3',\n  stops: stops\n}, {\n  name: '1997',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T4',\n  stops: stops\n}, {\n  name: '1998',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T5',\n  stops: stops\n}, {\n  name: '1999',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T6',\n  stops: stops\n}, {\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T7',\n  stops: stops\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T8',\n  stops: stops\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T9',\n  stops: stops\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T10',\n  stops: stops\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T11',\n  stops: stops\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T12',\n  stops: stops\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T13',\n  stops: stops\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T14',\n  stops: stops\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T15',\n  stops: stops\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T16',\n  stops: stops\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T17',\n  stops: stops\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T18',\n  stops: stops\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T19',\n  stops: stops\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T20',\n  stops: stops\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T21',\n  stops: stops\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T22',\n  stops: stops\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T23',\n  stops: stops\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T24',\n  stops: stops\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T25',\n  propertyPresence: 'Presence 1993',\n  stops: stops\n}\n]\n\nconst markerList = [\n  {\n    name: \"title\",\n    info: \"icon\"\n  },\n  {\n    name: \"title\",\n    info: \"icon\"\n  },\n  {\n    name: \"title\",\n    info: \"icon\"\n  }\n];\n\n// const presence_options = [{\n//   name: '1993',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1994',\n//   description: 'Presence',\n//   property: 'Presence 1994'\n// }, {\n//   name: '1995',\n//   description: 'Presence',\n//   property: 'Presence 1995'\n// }, {\n//   name: '1996',\n//   description: 'Presence',\n//   property: 'Presence 1996'\n// }, {\n//   name: '1997',\n//   description: 'Presence',\n//   property: 'Presence 1997'\n// }, {\n//   name: '1998',\n//   description: 'Presence',\n//   property: 'Presence 1998'\n// }, {\n//   name: '1999',\n//   description: 'Presence',\n//   property: 'Presence 1999'\n// }, {\n//   name: '2000',\n//   description: 'Presence',\n//   property: 'Presence 2000'\n// }, {\n//   name: '2001',\n//   description: 'Presence',\n//   property: 'Presence 2001'\n// }, {\n//   name: '2002',\n//   description: 'Presence',\n//   property: 'Presence 2002'\n// }, {\n//   name: '2003',\n//   description: 'Presence',\n//   property: 'Presence 2003'\n// }, {\n//   name: '2004',\n//   description: 'Presence',\n//   property: 'Presence 2004'\n// }, {\n//   name: '2005',\n//   description: 'Presence',\n//   property: 'Presence 2005'\n// }, {\n//   name: '2006',\n//   description: 'Presence',\n//   property: 'Presence 2006'\n// }, {\n//   name: '2007',\n//   description: 'Presence',\n//   property: 'Presence 2007'\n// }, {\n//   name: '2008',\n//   description: 'Presence',\n//   property: 'Presence 2008'\n// }, {\n//   name: '2009',\n//   description: 'Presence',\n//   property: 'Presence 2009'\n// }, {\n//   name: '2010',\n//   description: 'Presence',\n//   property: 'Presence 2010'\n// }, {\n//   name: '2011',\n//   description: 'Presence',\n//   property: 'Presence 2011'\n// }, {\n//   name: '2012',\n//   description: 'Presence',\n//   property: 'Presence 2012'\n// }, {\n//   name: '2013',\n//   description: 'Presence',\n//   property: 'Presence 2013'\n// }, {\n//   name: '2014',\n//   description: 'Presence',\n//   property: 'Presence 2014'\n// }, {\n//   name: '2015',\n//   description: 'Presence',\n//   property: 'Presence 2015'\n// }, {\n//   name: '2016',\n//   description: 'Presence',\n//   property: 'Presence 2016'\n// }, {\n//   name: '2017',\n//   description: 'Presence',\n//   property: 'Presence 2017'\n// }, {\n//   name: '2018',\n//   description: 'Presence',\n//   property: 'Presence 2018'\n// }\n// ]\n\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nconst CITIES =  {\n  name: \"title\",\n  info: \"icon\"\n}\n\n\nclass App extends React.Component {\n  mapRef = React.createRef();\n  map;\n  tooltipContainer;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      active: options[0],\n      // active: options_presence[0],\n      year: null,\n      data: null,\n      hoveredFeature: null,\n      viewport: {\n        latitude: 40,\n        longitude: -100,\n        zoom: 3,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    };\n    // this.renderPopup = this.renderPopup.bind(this)\n    };\n\n// renderPopup(){\n//     return this.state.popupInfo && (\n//       <Popup tipSize={5}\n//         anchor=\"bottom-right\"\n//         longitude={this.state.popupInfo.state.longitude}\n//         latitude={this.state.popupInfo.state.latitude}\n//         onClose={() => this.setState({popupInfo: null})}\n//         closeOnClick={true}>\n//         <p>{}</p>\n//       </Popup>\n//     )\n//   }\n//   renderPopup(index) {\n//     return (\n//       this.state.popupInfo && (\n//         <Popup\n//           tipSize={5}\n//           anchor=\"bottom-right\"\n//           longitude={markerList[index].long}\n//           latitude={markerList[index].lat}\n//           onMouseLeave={() => this.setState({ popupInfo: null })}\n//           closeOnClick={true}\n//         >\n//           <p>\n//             <strong>{markerList[index].name}</strong>\n//             <br />\n//             Available beds:{markerList[index].info}\n//           </p>\n//         </Popup>\n//       )\n//     );\n//   }\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.tooltipContainer = document.createElement('div');\n\n    \n    requestJson(\n      'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/us-income.geojson',\n      (error, response) => {\n        if (!error) {\n          this.map._loadData(response);\n        }\n      }\n    );\n\n    \n    \n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax', // style: 'mapbox://styles/mapbox/dark-v10',\n      center: [12, 26],\n      zoom: 1.5,\n    });\n\n    this.map.on('load',  (e) => {\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      this.map.addSource('presence_data', {\n        type: 'geojson',\n        presence_data\n      });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      },'country-label'); \n\n      this.map.addLayer({\n        id: 'presence_data',\n        interactive: true,\n        type: \"symbol\",\n        source: {\n          \"type\": \"geojson\",\n          \"data\": presence_data\n        },\n        layout: {\n          'icon-image': \n          ['concat', ['get', 'icon'], '-15'],\n          'text-field': ['get', 'title'],\n          'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n          'text-offset': [0, 0.6],\n          'text-anchor': 'top'\n        }\n      }); \n      this.\n\n      this.setFill();\n      // const features = this.map.queryRenderedFeatures(e.point, {\n\n      // pestMarker \n      //   .setLngLat(e.lngLat)\n      //   .setHTML('<b><u>Country Information' + '</b></u>' +\n      //     '<ul>' +\n      //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n      //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n      //     '</ul>')\n      // .addTo(this.map);\n      // // });\n      // this.set\n    });\n    \n    const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n      offset: [-120, 0]\n    }).setLngLat([0,0]).addTo(this.map);\n\n    var popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n      });\n\n    var pestMarker = new mapboxgl.Marker({\n      offset: [-120, 0]\n    }).setLngLat([0,0]).addTo(this.map);\n    console.log(pestMarker);\n\n\n      this.map.on('mouseenter', 'countries', (e) => {\n        this.map.getCanvas().style.cursor =  'pointer';\n      });\n\n      this.map.on('click', 'countries', (e) => {\n        const features = this.map.queryRenderedFeatures(e.point, {\n       \n      });\n\n      const { name, description, stops, property } = this.state.active;\n\n      const prob_intro = features[0].properties[property];\n\n      this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n      popup \n      .setLngLat(e.lngLat)\n      .setHTML('<b><u>Country Information' + '</b></u>' +\n        '<ul>' +\n        '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n        '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n        '</ul>')\n    .addTo(this.map);\n    });\n\n    this.map.on('mouseleave', 'countries', (e) => {\n      this.map.getCanvas().style.cursor =  '';\n      popup.remove();\n    });\n\n  }\n\n  _loadData = data => {\n    this.setState({\n      data: updatePercentiles(data, f => f.properties.income[this.state.year])\n    });\n  };\n\n  _updateSettings = (name, value) => {\n    if (name === 'year') {\n      this.setState({year: value});\n\n      const {data} = this.state;\n      if (data) {\n        // trigger update\n        this.setState({\n          data: updatePercentiles(data, f => f.properties.income[value])\n        });\n      }\n    }\n  };\n\n  _onViewportChange = viewport => this.setState({viewport});\n\n  _onHover = event => {\n    const {\n      features,\n      srcEvent: {offsetX, offsetY}\n    } = event;\n    const hoveredFeature = features && features.find(f => f.layer.id === 'data');\n\n    this.setState({hoveredFeature, x: offsetX, y: offsetY});\n  };\n\n  _renderTooltip() {\n    const {hoveredFeature, x, y} = this.state;\n\n    return (\n      hoveredFeature && (\n        <div className=\"tooltip\" style={{left: x, top: y}}>\n          <div>State: {hoveredFeature.properties.name}</div>\n          <div>Median Household Income: {hoveredFeature.properties.value}</div>\n          <div>Percentile: {(hoveredFeature.properties.percentile / 8) * 100}</div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const {viewport, data} = this.state;\n\n    return (\n      <div style={{height: '100%', position: 'relative'}}>\n        <MapGL\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle=\"mapbox://styles/mapbox/light-v9\"\n          onViewportChange={this._onViewportChange}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          onHover={this._onHover}\n        >\n          <Source type=\"geojson\" data={data}>\n            <Layer {...dataLayer} />\n          </Source>\n          {this._renderTooltip()}\n        </MapGL>\n\n        <ControlPanel\n          containerComponent={this.props.containerComponent}\n          settings={this.state}\n          onChange={this._updateSettings}\n        />\n      </div>\n    );\n  }\n// }\n\n  setFill() {\n    const { property, stops } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    },\n    )\n    this.map.setPaintProperty('countries', 'fill-outline-color', {\n      property,\n      stops\n    })\n    // this.map.setTooltip('presence_data', '', {\n    //   property,\n    //   stops\n    // })  ;\n  }\n\n  // render() {\n  //   const {viewport} = this.state;\n  //   return (\n  //     <GeoJSONLayer\n  //       data={presence_data}\n  //       type=\"symbol\"\n  //       anchor=\"bottom-right\"\n  //       longitude={this.state.popupInfo.state.longitude}\n  //       latitude={this.state.popupInfo.state.latitude}\n  //       onClose={() => this.setState({popupInfo: null})}\n  //       closeOnClick={true}\n  //       symbolLayout={{\n  //         \"text-field\": \"{title}\",\n  //         \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n  //         \"text-offset\": [0, 0.6],\n  //         \"text-anchor\": \"top\"\n  //       }}/>\n  //   );\n  // }\n\n  render() {\n    const { name, description, stops, property } = this.state.active;\n    const renderLegendKeys = (stop, i) => {\n      return (\n        <div key={i} className='txt-s '>\n          <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n          <span >{`${stop[0].toLocaleString()}`}</span>\n        </div>\n      );\n    }\n\n   \n    const renderOptions = (option, i) => {\n      return (\n        <label key={i} className=\"toggle-container  right  left px3 py3\">\n          <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n          <div  className=\"toggle grid txt-s color-white right   left toggle--active-white\">{option.name}</div>\n        </label>\n      );\n    }\n\n    return (\n      <div>\n        <div ref={this.mapRef} className=\"absolute top right left bottom align-middle grid\" />\n        <label className=\"ctxt-bold color-white absolute mt6 ml12\" ><b>Select Year:</b></label>\n        <div  className=\"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \">\n          {options.map(renderOptions)}\n        </div>\n        <div  className=\" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \">\n          <div className='mb6 color-white'>\n            <h2 className=\"txt-bold txt-s block color-white\">{name}</h2>\n            <p className='txt-s color-white'>{description}</p>\n          </div>\n          {stops.map(renderLegendKeys)}\n        </div>\n      </div>\n    \n\n      // <MapGL\n      //   {...viewport}\n      //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      //   mapboxApiAccessToken={TOKEN} >\n      //   {markers}\n      //   {this.renderPopup()}\n      //   <div className=\"nav\" style={navStyle}>\n      //     <NavigationControl/>\n      //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n      //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n      //     </Marker>\n      //     </div>\n      //   </div>\n      // </MapGL>\n\n      );\n      \n  }\n}\n\nexport default App;\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl'\nimport data from './pandemic_output.json'\n\nimport App from './App';\n\nReactDOM.render( <App /> , document.getElementById(\"root\"))\n"],"sourceRoot":""}