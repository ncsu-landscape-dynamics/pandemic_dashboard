{"version":3,"sources":["logo.svg","components/tooltip.js","App.js","index.js"],"names":["module","exports","Tooltip","features","this","props","className","map","feature","i","key","layer","id","React","Component","mapboxgl","accessToken","stops","options","name","description","property","propertyPresence","myDeckLayer","MapboxLayer","coordinateSystem","COORDINATE_SYSTEM","LNGLAT_OFFSETS","type","ArcLayer","data","arcData","getSourceColor","d","getTargetColor","strokeWidth","getSourcePosition","START","getTargetPosition","END","pickable","auto_highlight","console","log","App","mapRef","createRef","handleViewportChange","viewport","setState","state","handleGeocoderViewportChange","transitionDuration","onViewportChange","width","height","etc","active","popupInfo","length","ReactDOM","render","createElement","tooltipContainer","unmountComponentAtNode","setFill","document","Map","container","current","style","center","zoom","pitch","on","addLayer","addSource","presence_data","source","interactive","layout","PitchToggle","bearing","minpitchzoom","_bearing","_pitch","_minpitchzoom","_map","_this","_btn","onclick","getPitch","getZoom","easeTo","_container","appendChild","parentNode","removeChild","undefined","MapboxGLButtonControl","title","eventHandler","_className","_title","_eventHandler","event","alert","target","addControl","MapboxGeocoder","placeholder","Marker","offset","setLngLat","addTo","popup","Popup","closeButton","closeOnClick","e","getCanvas","cursor","queryRenderedFeatures","point","prob_intro","properties","lngLat","setHTML","p","remove","setPaintProperty","ref","option","onChange","checked","stop","backgroundColor","toLocaleString","getElementById"],"mappings":"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","file":"static/js/main.349f8951.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1094cb6d.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Tooltip extends React.Component {\n\n  static propTypes = {\n    features: PropTypes.array.isRequired\n  };\n\n  render() {\n    const { features } = this.props;\n\n    const renderFeature = (feature, i) => {\n      return (\n        <div key={i}>\n          <strong className='mr3'>{feature.layer['source-layer']}:</strong>\n          <span className='color-gray-light'>{feature.layer.id}</span>\n        </div>\n      )\n    };\n\n    return (\n      <div className=\"flex-parent-inline flex-parent--center-cross flex-parent--column absolute bottom\">\n        <div className=\"flex-child px12 py12 bg-gray-dark color-white shadow-darken10 round txt-s w240 clip txt-truncate\">\n          {features.map(renderFeature)}\n        </div>\n        <span className=\"flex-child color-gray-dark triangle triangle--d\"></span>\n      </div>\n    );\n  }\n}\n","import React, {useState, useRef, useCallback, Component }  from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl'\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport MapGL, { NavigationControl, Marker, Popup } from \"react-map-gl\";\nimport { render } from \"react-dom\";\nimport { Icon } from \"semantic-ui-react\";\nimport data from './pandemic_output.json'\nimport presence_data from './presence_pandemic.json'\nimport Tooltip from './components/tooltip'\nimport ReactDOM from 'react-dom'\nimport ReactMapboxGl from 'react-mapbox-gl';\nimport DeckGL from '@deck.gl/react';\nimport {ScatterplotLayer, GeoJsonLayer, ArcLayer} from '@deck.gl/layers';\nimport {StaticMap} from 'react-map-gl';\nimport {MapboxLayer} from '@deck.gl/mapbox';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport  \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport StylesControl from 'mapbox-gl-controls/lib/styles';\nimport CompassControl from 'mapbox-gl-controls/lib/compass';\nimport RulerControl from 'mapbox-gl-controls/lib/ruler';\nimport ZoomControl from 'mapbox-gl-controls/lib/zoom';\nimport LanguageControl from 'mapbox-gl-controls/lib/language';\nimport InspectControl from 'mapbox-gl-controls/lib/inspect';\nimport TooltipControl from 'mapbox-gl-controls/lib/tooltip';\nimport arcData from './arcs.json'\nimport { json } from 'd3-request';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw'\n\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw'\n\nvar stops =  [\n  [0, 'rgba(45,69,132, 0.4)'],\t\n  [0.1, 'rgba(77,30,129, 0.4)'],\t\n  [0.2, 'rgba(109,41,126, 0.4)'],\t\t\t\n  [0.3, 'rgba(141,52,123, 0.4)'], \n  [0.4, 'rgba(173,63,120, 0.4)'],\t\n  [0.5, 'rgba(205,74,118, 0.4)'], \n  [0.6, 'rgba(210,103,103\t, 0.4)'],\t\t\n  [0.7, 'rgba(216,132,89,0.7)'], \n  [0.8, 'rgba(222,161,75, 0.4)'],\t\n  [0.9, 'rgba(228,190,61, 0.4)'],\n  [1, 'rgba(240,249,33, 0.4)']\n]\n\n\nconst options = [{\n  name: '1993',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T0',\n  stops: stops\n}, {\n  name: '1994',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T1',\n  stops: stops\n}, {\n  name: '1995',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T2',\n  stops: stops\n}, {\n  name: '1996',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T3',\n  stops: stops\n}, {\n  name: '1997',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T4',\n  stops: stops\n}, {\n  name: '1998',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T5',\n  stops: stops\n}, {\n  name: '1999',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T6',\n  stops: stops\n}, {\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T7',\n  stops: stops\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T8',\n  stops: stops\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T9',\n  stops: stops\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T10',\n  stops: stops\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T11',\n  stops: stops\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T12',\n  stops: stops\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T13',\n  stops: stops\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T14',\n  stops: stops\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T15',\n  stops: stops\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T16',\n  stops: stops\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T17',\n  stops: stops\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T18',\n  stops: stops\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T19',\n  stops: stops\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T20',\n  stops: stops\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T21',\n  stops: stops\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T22',\n  stops: stops\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T23',\n  stops: stops\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T24',\n  stops: stops\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T25',\n  propertyPresence: 'Presence 1993',\n  stops: stops\n}\n]\n\nconst markerList = [{\n  name: '1993',\n  description: 'Presence',\n  property: 'Presence 1993'\n}, {\n  name: '1994',\n  description: 'Presence',\n  property: 'Presence 1994'\n}, {\n  name: '1995',\n  description: 'Presence',\n  property: 'Presence 1995'\n}, {\n  name: '1996',\n  description: 'Presence',\n  property: 'Presence 1996'\n}, {\n  name: '1997',\n  description: 'Presence',\n  property: 'Presence 1997'\n}, {\n  name: '1998',\n  description: 'Presence',\n  property: 'Presence 1998'\n}, {\n  name: '1999',\n  description: 'Presence',\n  property: 'Presence 1999'\n}, {\n  name: '2000',\n  description: 'Presence',\n  property: 'Presence 2000'\n}, {\n  name: '2001',\n  description: 'Presence',\n  property: 'Presence 2001'\n}, {\n  name: '2002',\n  description: 'Presence',\n  property: 'Presence 2002'\n}, {\n  name: '2003',\n  description: 'Presence',\n  property: 'Presence 2003'\n}, {\n  name: '2004',\n  description: 'Presence',\n  property: 'Presence 2004'\n}, {\n  name: '2005',\n  description: 'Presence',\n  property: 'Presence 2005'\n}, {\n  name: '2006',\n  description: 'Presence',\n  property: 'Presence 2006'\n}, {\n  name: '2007',\n  description: 'Presence',\n  property: 'Presence 2007'\n}, {\n  name: '2008',\n  description: 'Presence',\n  property: 'Presence 2008'\n}, {\n  name: '2009',\n  description: 'Presence',\n  property: 'Presence 2009'\n}, {\n  name: '2010',\n  description: 'Presence',\n  property: 'Presence 2010'\n}, {\n  name: '2011',\n  description: 'Presence',\n  property: 'Presence 2011'\n}, {\n  name: '2012',\n  description: 'Presence',\n  property: 'Presence 2012'\n}, {\n  name: '2013',\n  description: 'Presence',\n  property: 'Presence 2013'\n}, {\n  name: '2014',\n  description: 'Presence',\n  property: 'Presence 2014'\n}, {\n  name: '2015',\n  description: 'Presence',\n  property: 'Presence 2015'\n}, {\n  name: '2016',\n  description: 'Presence',\n  property: 'Presence 2016'\n}, {\n  name: '2017',\n  description: 'Presence',\n  property: 'Presence 2017'\n}, {\n  name: '2018',\n  description: 'Presence',\n  property: 'Presence 2018'\n}\n]\n\n// console.log(arcData);\n\n// var arcDataString = JSON.stringify(arcData);\n// var arcData_Array = JSON.parse(arcDataString);\n// console.log(arcData_Array);\n\nconst myDeckLayer = new MapboxLayer({\n  coordinateSystem: COORDINATE_SYSTEM.LNGLAT_OFFSETS,\n  id: 'my-scatterplot',\n  type: ArcLayer,\n  data: arcData,\n  getSourceColor: d => [144,238,144],\n  getTargetColor: d => [0, 128, 200],\n   // getSourceColor: d => [255,127,80],\n  // getTargetColor: d => [240,230,140],\n  // getFillColor: [255, 0, 0],\n  strokeWidth:0.1,\n  getSourcePosition: d => d.START,\n  getTargetPosition: d => d.END,\n  pickable: true,\n  auto_highlight: true\n});\n  \n// // });\n// const myDeckLayer =  new ArcLayer({\n//   id: 'arcs',\n//   data: \n//        {\n//          inbound: 72633,\n//          outbound: 74735,\n//          from: {\n//            name: '19th St. Oakland (19TH)',\n//            coordinates: [-122.269029, 37.80787]\n//          },\n//          to: {\n//            name: '12th St. Oakland City Center (12TH)',\n//            coordinates: [-122.271604, 37.803664]\n//        },\n//   // dataTransform: d => d.features.filter(f => f.properties.scalerank < 4),\n//   // Styles\n//   getSourcePosition: d.coordinates\n//   getTargetPosition: f => f.geometry.coordinates,\n//   getSourceColor: [0, 128, 200],\n//   getTargetColor: [200, 0, 80],\n//   getWidth: 1\n// })\n// const myDeckLayer =  new ArcLayer({\n//   id: 'arcs',\n//   data: AIR_PORTS,\n//   dataTransform: d => d.features.filter(f => f.properties.scalerank < 4),\n//   // Styles\n//   getSourcePosition: f => [-0.4531566, 51.4709959], // London\n//   getTargetPosition: f => f.geometry.coordinates,\n//   getSourceColor: [0, 128, 200],\n//   getTargetColor: [200, 0, 80],\n//   getWidth: 1\n// })\n\nconsole.log(myDeckLayer);\n\n\nclass App extends React.Component {\n  mapRef = React.createRef();\n\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n  };\n\n  handleGeocoderViewportChange = viewport => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\n    return this.handleViewportChange({\n      ...viewport,\n      ...geocoderDefaultOverrides\n    });\n  };\n\n\n  mapRef = React.createRef();\n  map;\n  tooltipContainer;\n\n  setTooltip(features) {\n    if (features.length) {\n      ReactDOM.render(\n        React.createElement(\n          Tooltip, {\n            features\n          }\n        ),\n        this.tooltipContainer\n      );\n    } else {\n      ReactDOM.unmountComponentAtNode(this.tooltipContainer);\n    }\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // width: 0, \n      // height: 0 ,\n      active: options[0],\n      viewport: {\n        // latitude: 17.44212,\n        // longitude: 78.391384,\n        // zoom: 15,\n        // bearing: 0,\n        // pitch: 0,\n        // width: 0,\n        // height: 0\n      },\n      popupInfo: null\n    };\n  }\n\n  onViewportChange = viewport => { \n    const {width, height, ...etc} = viewport\n    this.setState({viewport: etc})\n  } \n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.tooltipContainer = document.createElement('div');\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax',\n      // style: 'mapbox://styles/mapbox/dark-v10',\n      center: [20, 40],\n      zoom: 1.45,\n      pitch: 80\n      });\n          /* Zoom */\n      // this.map.addControl(new ZoomControl(), 'top-right');\n      // /* Ruler */\n      // this.map.addControl(new RulerControl(), 'bottom-left');\n      // /* Inspect */\n      // this.map.addControl(new InspectControl(), 'bottom-left');\n      /* Compass */\n      // this.map.addControl(new CompassControl(), 'top-right');\n\n    this.map.on('load', () => {\n      this.map.addLayer(myDeckLayer);\n      // this.map.addLayer({\n      //           id: 'my-arc',\n      //           type: 'ArcLayer',\n      //           data: arcData,\n      //           getSourcePosition: d => d.START,\n      //           getTargetPosition: d => d.END,\n      //           getSourceColor: d => [64, 255, 0],\n      //           getTargetColor: d => [0, 128, 200]\n      //       // });\n      \n      //       //Add the deck.gl arc layer to the map \n      //       // .addLayer(arclayer, 'waterway-label')\n      // });\n      // if (this.map.getLayer(\"countries\")) {\n      //   this.map.removeLayer(\"countries\");\n      // };\n\n      // if (this.map.getSource(\"countries\")) {\n      //   this.map.removeSource(\"countries\");\n      // };\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      this.map.addSource('presence_data', {\n        type: 'geojson',\n        presence_data\n      });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      },'country-label'); \n\n      this.map.addLayer({\n        id: 'presence_data',\n        interactive: true,\n        type: \"symbol\",\n        source:  'presence_data',\n        layout: {\n          'icon-image': \n          ['concat', ['get', 'icon'], '-15'],\n          'text-field': ['get', 'title'],\n          'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n          'text-offset': [0, 0.6],\n          'text-anchor': 'top'\n        }\n      }); \n      // this.map.addLayer(arclayer, 'waterway-label');\n      this.setFill();\n      // this.map.on('styledata', function () {\n      //   // Triggered when `setStyle` is called.\n      //   if (data) addLayer();\n      // });\n      // this.map.addControl(new mapboxgl.FullscreenControl());\n      \n    //   presence_data.features.forEach((marker) => {\n    //     const markerEl = document.createElement('div');\n    //     markerEl.innerHTML = '🦟';\n    //     new mapboxgl.Marker(markerEl, { offset: [5,-5] })\n    //         .setLngLat(marker.geometry.coordinates)\n    //         .addTo(this.map);\n    //     markerEl.addEventListener('click', () => {\n    //       this.map.flyTo({\n    //           center: marker.geometry.coordinates,\n    //           zoom: 11,\n    //       });\n    //     });\n    // });\n    });\n\n     // Original ES6 Class— https://github.com/tobinbradley/mapbox-gl-pitch-toggle-control\n      // export default class PitchToggle {\n        class PitchToggle {\n          constructor({ bearing = -20, pitch = 70, minpitchzoom = null }) {\n            this._bearing = bearing;\n            this._pitch = pitch;\n            this._minpitchzoom = minpitchzoom;\n          }\n  \n          onAdd(map) {\n            this._map = map;\n            let _this = this;\n  \n            this._btn = document.createElement(\"button\");\n            this._btn.className = \"mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d\";\n            this._btn.type = \"button\";\n            this._btn[\"aria-label\"] = \"Toggle Pitch\";\n            this._btn.onclick = function() {\n              if (map.getPitch() === 0) {\n                let options = { pitch: _this._pitch, bearing: _this._bearing };\n                if (_this._minpitchzoom && map.getZoom() > _this._minpitchzoom) {\n                  options.zoom = _this._minpitchzoom;\n                }\n                map.easeTo(options);\n                _this._btn.className =\n                  \"mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-2d\";\n              } else {\n                map.easeTo({ pitch: 0, bearing: 0 });\n                _this._btn.className =\n                  \"mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d\";\n              }\n            };\n  \n            this._container = document.createElement(\"div\");\n            this._container.className = \"mapboxgl-ctrl-group mapboxgl-ctrl\";\n            this._container.appendChild(this._btn);\n  \n            return this._container;\n          }\n  \n          onRemove() {\n            this._container.parentNode.removeChild(this._container);\n            this._map = undefined;\n          }\n        }\n  \n        /* Idea from Stack Overflow https://stackoverflow.com/a/51683226  */\n        class MapboxGLButtonControl {\n          constructor({\n            className = \"\",\n            title = \"\",\n            eventHandler = \"\"\n          }) {\n            this._className = className;\n            this._title = title;\n            this._eventHandler = eventHandler;\n          }\n  \n          onAdd(map) {\n            this._btn = document.createElement(\"button\");\n            this._btn.className = \"mapboxgl-ctrl-icon\" + \" \" + this._className;\n            this._btn.type = \"button\";\n            this._btn.title = this._title;\n            this._btn.onclick = this._eventHandler;\n  \n            this._container = document.createElement(\"div\");\n            this._container.className = \"mapboxgl-ctrl-group mapboxgl-ctrl\";\n            this._container.appendChild(this._btn);\n  \n            return this._container;\n          }\n  \n          onRemove() {\n            this._container.parentNode.removeChild(this._container);\n            this._map = undefined;\n          }\n        }\n  \n        /* Event Handlers */\n        function one(event) {\n          alert(\"Event handler when clicking on \\r\\n\" + event.target.className);\n          console.log(\"event number 1\", event);\n        }\n  \n        function two(event) {\n          alert(\"Event handler when clicking on \\r\\n\" + event.target.className);\n          console.log(\"event number 2\", event);\n        }\n  \n        function three(event) {\n          alert(\"Event handler when clicking on \\r\\n\" + event.target.className);\n          console.log(\"event number 3\", event);\n        }\n  \n        /* Instantiate new controls with custom event handlers */\n        const ctrlPoint = new MapboxGLButtonControl({\n          className: \"mapbox-gl-draw_point\",\n          title: \"Draw Point\",\n          eventHandler: one\n        });\n  \n        const ctrlLine = new MapboxGLButtonControl({\n          className: \"mapbox-gl-draw_line\",\n          title: \"Draw Line\",\n          eventHandler: two\n        });\n  \n        const ctrlPolygon = new MapboxGLButtonControl({\n          className: \"mapbox-gl-draw_polygon\",\n          title: \"Draw Polygon\",\n          eventHandler: three\n        });\n  \n        /* Add Controls to the Map */\n        // this.map.addControl(new mapboxgl.NavigationControl(), \"top-left\");\n        this.map.addControl(new MapboxGeocoder({\n          accessToken: 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw',\n          mapboxgl: mapboxgl,\n          placeholder: 'Search for a Location'\n        }), 'top-right');\n        this.map.addControl(new PitchToggle({ minpitchzoom: 11 }), \"top-right\");\n        \n        \n        // this.map.addControl(ctrlPoint, \"bottom-left\");\n        // this.map.addControl(ctrlLine, \"bottom-right\");\n        // this.map.addControl(ctrlPolygon, \"top-left\");\n  \n\n    const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n      offset: [-120, 0]\n    }).setLngLat([0,0]).addTo(this.map);\n\n    var popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n      });\n\n      this.map.on('mouseenter', 'countries', (e) => {\n        this.map.getCanvas().style.cursor =  'pointer';\n      });\n\n\n      this.map.on('click', 'countries', (e) => {\n        const features = this.map.queryRenderedFeatures(e.point, {\n      });\n      const { name, description, stops, property } = this.state.active;\n      const prob_intro = features[0].properties[property]\n      this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n      popup \n      .setLngLat(e.lngLat)\n       .setHTML('<b><u>Country Information' + '</b></u>' +\n          '<ul>' +\n          '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n          '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n          '</ul>')\n      .addTo(this.map);\n    });\n    //// with custom styles:\n      // this.map.addControl(new StylesControl({\n      //   styles: [\n      //     {\n      //       label: 'Streets',\n      //       styleName: 'Mapbox Streets',\n      //       styleUrl: 'mapbox://styles/mapbox/streets-v9',\n      //     }, {\n      //       label: 'Satellite',\n      //       styleName: 'Satellite',\n      //       styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n      //     },\n      //   ],\n      //   onChange: (style) => console.log(style),\n       \n      // }, \n      // // this.map.getSource('countries').setData(data)\n      // // this.map.addLayer('countries','country-label')\n      // ), 'top-right');\n\n     \n\n\n    this.map.on('click', 'presence_data', (p) => {\n      const presenceFeatures = this.map.queryRenderedFeatures(p.point, {\n    });\n    // console.log(presenceFeatures)\n  });\n    this.map.on('mouseleave', 'countries', (e) => {\n      this.map.getCanvas().style.cursor =  '';\n      popup.remove();\n    });\n\n   \n  }\n\n  setFill() {\n    const { property, stops } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    },\n    )\n    this.map.setPaintProperty('countries', 'fill-outline-color', {\n      property,\n      stops\n    },\n    )\n      // this.map.setTooltip('presence_data', '', {\n      //   property,\n      //   stops\n      // })  ;\n      ;    \n  }\n\n\n  render() {\n    const { \n      viewport,\n    } = this.state\n    const { name, description, stops, property } = this.state.active;\n    const renderLegendKeys = (stop, i) => {\n    return ( \n        <div key={i} className='txt-xs '>\n          <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n          <span className='px12 py12' >{`${stop[0].toLocaleString()}`}</span>\n        </div>\n      );\n    }\n\n   \n    const renderOptions = (option, i) => {\n      return (\n        <label key={i} className=\"toggle-container w36 maxw60 pa24\">\n          <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n          <div  className=\"toggle txt-xs color-white toggle--gray  toggle--active-darken100 maxw60 w50 pl6 pr6\">{option.name}</div>\n        </label>\n      );\n    }\n\n    return (\n      \n      <div>\n        <div ref={this.mapRef} width='100%' height='100%' className=\"absolute top right left bottom align-middle grid\" />\n        <label className=\" align-middle top  txt-s mb30 mt3 ml18 ctxt-bold pa0 color-white absolute bg-transparent shadow-darken50 \" ><b>Select Year:</b></label>\n        <div className=\"toggle-group grid-2 grid mt24 pl3 pr3 align-middle top ctxt-bold  color-white absolute border border--2 border--white bg-transparent shadow-darken10  \">\n        {options.map(renderOptions)} \n        </div>\n        <div  className=\" bg-transparent px3  grid-3 color-white absolute align-middle bottom w100 left border--white round border border--2 round shadow-darken10  txt-xs\">\n          <div className=' color-gray-light px3 txt-xs'>\n            <h2 className=\"txt-bold txt-xs block color-white px0 \">{name}</h2>\n            <p className='txt-xs color-white px0 py0'>{description}</p>\n          </div>\n          {stops.map(renderLegendKeys)}\n        </div>\n      </div>\n    );//absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl'\nimport data from './pandemic_output.json'\n\nimport App from './App';\n\nReactDOM.render( <App /> , document.getElementById(\"root\"))\n"],"sourceRoot":""}