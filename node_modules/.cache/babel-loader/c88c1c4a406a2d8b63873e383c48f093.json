{"ast":null,"code":"import sortFeatures from './sort_features';\nimport mapEventToBoundingBox from './map_event_to_bounding_box';\nimport * as Constants from '../constants';\nimport StringSet from './string_set';\nconst META_TYPES = [Constants.meta.FEATURE, Constants.meta.MIDPOINT, Constants.meta.VERTEX]; // Requires either event or bbox\n\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n  const box = event ? mapEventToBoundingBox(event, buffer) : bbox;\n  const queryParams = {};\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id);\n  const features = ctx.map.queryRenderedFeatures(box, queryParams).filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach(feature => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n  return sortFeatures(uniqueFeatures);\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-gl-draw/src/lib/features_at.js"],"names":["sortFeatures","mapEventToBoundingBox","Constants","StringSet","META_TYPES","meta","FEATURE","MIDPOINT","VERTEX","click","featuresAtClick","touch","featuresAtTouch","event","bbox","ctx","featuresAt","options","clickBuffer","touchBuffer","buffer","map","box","queryParams","styles","layers","s","id","features","queryRenderedFeatures","filter","feature","indexOf","properties","featureIds","uniqueFeatures","forEach","featureId","has","add","push"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,qBAAP,MAAkC,6BAAlC;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,UAAU,GAAG,CACjBF,SAAS,CAACG,IAAV,CAAeC,OADE,EAEjBJ,SAAS,CAACG,IAAV,CAAeE,QAFE,EAGjBL,SAAS,CAACG,IAAV,CAAeG,MAHE,CAAnB,C,CAMA;;AACA,eAAe;AACbC,EAAAA,KAAK,EAAEC,eADM;AAEbC,EAAAA,KAAK,EAAEC;AAFM,CAAf;;AAKA,SAASF,eAAT,CAAyBG,KAAzB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2C;AACzC,SAAOC,UAAU,CAACH,KAAD,EAAQC,IAAR,EAAcC,GAAd,EAAmBA,GAAG,CAACE,OAAJ,CAAYC,WAA/B,CAAjB;AACD;;AAED,SAASN,eAAT,CAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2C;AACzC,SAAOC,UAAU,CAACH,KAAD,EAAQC,IAAR,EAAcC,GAAd,EAAmBA,GAAG,CAACE,OAAJ,CAAYE,WAA/B,CAAjB;AACD;;AAED,SAASH,UAAT,CAAoBH,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCK,MAAtC,EAA8C;AAC5C,MAAIL,GAAG,CAACM,GAAJ,KAAY,IAAhB,EAAsB,OAAO,EAAP;AAEtB,QAAMC,GAAG,GAAIT,KAAD,GAAUZ,qBAAqB,CAACY,KAAD,EAAQO,MAAR,CAA/B,GAAiDN,IAA7D;AAEA,QAAMS,WAAW,GAAG,EAApB;AACA,MAAIR,GAAG,CAACE,OAAJ,CAAYO,MAAhB,EAAwBD,WAAW,CAACE,MAAZ,GAAqBV,GAAG,CAACE,OAAJ,CAAYO,MAAZ,CAAmBH,GAAnB,CAAuBK,CAAC,IAAIA,CAAC,CAACC,EAA9B,CAArB;AAExB,QAAMC,QAAQ,GAAGb,GAAG,CAACM,GAAJ,CAAQQ,qBAAR,CAA8BP,GAA9B,EAAmCC,WAAnC,EACdO,MADc,CACPC,OAAO,IAAI3B,UAAU,CAAC4B,OAAX,CAAmBD,OAAO,CAACE,UAAR,CAAmB5B,IAAtC,MAAgD,CAAC,CADrD,CAAjB;AAGA,QAAM6B,UAAU,GAAG,IAAI/B,SAAJ,EAAnB;AACA,QAAMgC,cAAc,GAAG,EAAvB;AACAP,EAAAA,QAAQ,CAACQ,OAAT,CAAkBL,OAAD,IAAa;AAC5B,UAAMM,SAAS,GAAGN,OAAO,CAACE,UAAR,CAAmBN,EAArC;AACA,QAAIO,UAAU,CAACI,GAAX,CAAeD,SAAf,CAAJ,EAA+B;AAC/BH,IAAAA,UAAU,CAACK,GAAX,CAAeF,SAAf;AACAF,IAAAA,cAAc,CAACK,IAAf,CAAoBT,OAApB;AACD,GALD;AAOA,SAAO/B,YAAY,CAACmC,cAAD,CAAnB;AACD","sourcesContent":["import sortFeatures from './sort_features';\nimport mapEventToBoundingBox from './map_event_to_bounding_box';\nimport * as Constants from '../constants';\nimport StringSet from './string_set';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n"]},"metadata":{},"sourceType":"module"}