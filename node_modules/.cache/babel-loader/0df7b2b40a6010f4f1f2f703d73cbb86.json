{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { load } from '@loaders.gl/core';\n\nvar Resource = function () {\n  function Resource(id, data, context) {\n    _classCallCheck(this, Resource);\n\n    this.id = id;\n    this.context = context;\n    this._loadCount = 0;\n    this._subscribers = new Set();\n    this.setData(data);\n  }\n\n  _createClass(Resource, [{\n    key: \"subscribe\",\n    value: function subscribe(consumer) {\n      this._subscribers.add(consumer);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(consumer) {\n      this._subscribers[\"delete\"](consumer);\n    }\n  }, {\n    key: \"inUse\",\n    value: function inUse() {\n      return this._subscribers.size > 0;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {}\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this = this;\n\n      return this.isLoaded ? this._error ? Promise.reject(this._error) : this._content : this._loader.then(function () {\n        return _this.getData();\n      });\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data, forceUpdate) {\n      var _this2 = this;\n\n      if (data === this._data && !forceUpdate) {\n        return;\n      }\n\n      this._data = data;\n      var loadCount = ++this._loadCount;\n      var loader = data;\n\n      if (typeof data === 'string') {\n        loader = load(data);\n      }\n\n      if (loader instanceof Promise) {\n        this.isLoaded = false;\n        this._loader = loader.then(function (result) {\n          if (_this2._loadCount === loadCount) {\n            _this2.isLoaded = true;\n            _this2._error = null;\n            _this2._content = result;\n          }\n        })[\"catch\"](function (error) {\n          if (_this2._loadCount === loadCount) {\n            _this2.isLoaded = true;\n            _this2._error = error || true;\n          }\n        });\n      } else {\n        this.isLoaded = true;\n        this._error = null;\n        this._content = data;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._subscribers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var subscriber = _step.value;\n          subscriber.onChange(this.getData());\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Resource;\n}();\n\nexport { Resource as default };","map":{"version":3,"sources":["../../../../src/lib/resource/resource.js"],"names":["Resource","consumer","Promise","data","forceUpdate","loadCount","loader","load","error","subscriber"],"mappings":"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","sourcesContent":["import {load} from '@loaders.gl/core';\n\nexport default class Resource {\n  constructor(id, data, context) {\n    this.id = id;\n    this.context = context;\n\n    this._loadCount = 0;\n    this._subscribers = new Set();\n\n    this.setData(data);\n  }\n\n  // consumer: {onChange: Function}\n  subscribe(consumer) {\n    this._subscribers.add(consumer);\n  }\n\n  unsubscribe(consumer) {\n    this._subscribers.delete(consumer);\n  }\n\n  inUse() {\n    return this._subscribers.size > 0;\n  }\n\n  delete() {\n    // Remove any resources created\n  }\n\n  getData() {\n    return this.isLoaded\n      ? this._error\n        ? Promise.reject(this._error)\n        : this._content\n      : this._loader.then(() => this.getData());\n  }\n\n  setData(data, forceUpdate) {\n    if (data === this._data && !forceUpdate) {\n      return;\n    }\n    this._data = data;\n    const loadCount = ++this._loadCount;\n\n    let loader = data;\n    if (typeof data === 'string') {\n      loader = load(data);\n    }\n    if (loader instanceof Promise) {\n      this.isLoaded = false;\n      this._loader = loader\n        .then(result => {\n          // check if source has changed\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = null;\n            this._content = result;\n          }\n        })\n        .catch(error => {\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = error || true;\n          }\n        });\n    } else {\n      this.isLoaded = true;\n      this._error = null;\n      this._content = data;\n    }\n\n    for (const subscriber of this._subscribers) {\n      subscriber.onChange(this.getData());\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}