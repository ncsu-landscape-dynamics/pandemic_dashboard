{"ast":null,"code":"/**\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseFlatten = require('lodash._baseflatten'),\n    createWrapper = require('lodash._createwrapper'),\n    functions = require('lodash.functions'),\n    restParam = require('lodash.restparam');\n/** Used to compose bitmasks for wrapper metadata. */\n\n\nvar BIND_FLAG = 1;\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method. Method names may be specified as individual arguments or as arrays\n * of method names. If no method names are provided all enumerable function\n * properties, own and inherited, of `object` are bound.\n *\n * **Note:** This method does not set the `length` property of bound functions.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} [methodNames] The object method names to bind,\n *  specified as individual method names or arrays of method names.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'onClick': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view);\n * jQuery('#docs').on('click', view.onClick);\n * // => logs 'clicked docs' when the element is clicked\n */\n\nvar bindAll = restParam(function (object, methodNames) {\n  methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n  var index = -1,\n      length = methodNames.length;\n\n  while (++index < length) {\n    var key = methodNames[index];\n    object[key] = createWrapper(object[key], BIND_FLAG, object);\n  }\n\n  return object;\n});\nmodule.exports = bindAll;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/lodash.bindall/index.js"],"names":["baseFlatten","require","createWrapper","functions","restParam","BIND_FLAG","bindAll","object","methodNames","length","index","key","module","exports"],"mappings":"AAAA;;;;;;;;AAQA,IAAIA,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAAzB;AAAA,IACIC,aAAa,GAAGD,OAAO,CAAC,uBAAD,CAD3B;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAFvB;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAHvB;AAKA;;;AACA,IAAII,SAAS,GAAG,CAAhB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,IAAIC,OAAO,GAAGF,SAAS,CAAC,UAASG,MAAT,EAAiBC,WAAjB,EAA8B;AACpDA,EAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,GAAqBT,WAAW,CAACQ,WAAD,CAAhC,GAAgDL,SAAS,CAACI,MAAD,CAAvE;AAEA,MAAIG,KAAK,GAAG,CAAC,CAAb;AAAA,MACID,MAAM,GAAGD,WAAW,CAACC,MADzB;;AAGA,SAAO,EAAEC,KAAF,GAAUD,MAAjB,EAAyB;AACvB,QAAIE,GAAG,GAAGH,WAAW,CAACE,KAAD,CAArB;AACAH,IAAAA,MAAM,CAACI,GAAD,CAAN,GAAcT,aAAa,CAACK,MAAM,CAACI,GAAD,CAAP,EAAcN,SAAd,EAAyBE,MAAzB,CAA3B;AACD;;AACD,SAAOA,MAAP;AACD,CAXsB,CAAvB;AAaAK,MAAM,CAACC,OAAP,GAAiBP,OAAjB","sourcesContent":["/**\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseFlatten = require('lodash._baseflatten'),\n    createWrapper = require('lodash._createwrapper'),\n    functions = require('lodash.functions'),\n    restParam = require('lodash.restparam');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1;\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method. Method names may be specified as individual arguments or as arrays\n * of method names. If no method names are provided all enumerable function\n * properties, own and inherited, of `object` are bound.\n *\n * **Note:** This method does not set the `length` property of bound functions.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} [methodNames] The object method names to bind,\n *  specified as individual method names or arrays of method names.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'onClick': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view);\n * jQuery('#docs').on('click', view.onClick);\n * // => logs 'clicked docs' when the element is clicked\n */\nvar bindAll = restParam(function(object, methodNames) {\n  methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n  var index = -1,\n      length = methodNames.length;\n\n  while (++index < length) {\n    var key = methodNames[index];\n    object[key] = createWrapper(object[key], BIND_FLAG, object);\n  }\n  return object;\n});\n\nmodule.exports = bindAll;\n"]},"metadata":{},"sourceType":"script"}