{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\n\nvar v = require('@mapbox/fusspot');\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n\n    return 'Blob or ArrayBuffer';\n  }\n\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n\n  try {\n    var date = new Date(value);\n\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js"],"names":["xtend","require","v","file","value","window","global","Blob","ArrayBuffer","pipe","undefined","assertShape","validatorObj","apiName","assert","strictShape","date","msg","Date","getTime","isNaN","e","coordinates","tuple","number","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,iBAAD,CAAf;;AAEA,SAASE,IAAT,CAAcC,KAAd,EAAqB;AACnB;AACA;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAID,KAAK,YAAYE,MAAM,CAACC,IAAxB,IAAgCH,KAAK,YAAYE,MAAM,CAACE,WAA5D,EAAyE;AACvE;AACD;;AACD,WAAO,qBAAP;AACD;;AACD,MAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,IAAN,KAAeC,SAAhD,EAA2D;AACzD;AACD;;AACD,SAAO,6BAAP;AACD;;AAED,SAASC,WAAT,CAAqBC,YAArB,EAAmCC,OAAnC,EAA4C;AAC1C,SAAOX,CAAC,CAACY,MAAF,CAASZ,CAAC,CAACa,WAAF,CAAcH,YAAd,CAAT,EAAsCC,OAAtC,CAAP;AACD;;AAED,SAASG,IAAT,CAAcZ,KAAd,EAAqB;AACnB,MAAIa,GAAG,GAAG,MAAV;;AACA,MAAI,OAAOb,KAAP,KAAiB,SAArB,EAAgC;AAC9B,WAAOa,GAAP;AACD;;AACD,MAAI;AACF,QAAID,IAAI,GAAG,IAAIE,IAAJ,CAASd,KAAT,CAAX;;AACA,QAAIY,IAAI,CAACG,OAAL,IAAgBC,KAAK,CAACJ,IAAI,CAACG,OAAL,EAAD,CAAzB,EAA2C;AACzC,aAAOF,GAAP;AACD;AACF,GALD,CAKE,OAAOI,CAAP,EAAU;AACV,WAAOJ,GAAP;AACD;AACF;;AAED,SAASK,WAAT,CAAqBlB,KAArB,EAA4B;AAC1B,SAAOF,CAAC,CAACqB,KAAF,CAAQrB,CAAC,CAACsB,MAAV,EAAkBtB,CAAC,CAACsB,MAApB,EAA4BpB,KAA5B,CAAP;AACD;;AAEDqB,MAAM,CAACC,OAAP,GAAiB1B,KAAK,CAACE,CAAD,EAAI;AACxBC,EAAAA,IAAI,EAAEA,IADkB;AAExBa,EAAAA,IAAI,EAAEA,IAFkB;AAGxBM,EAAAA,WAAW,EAAEA,WAHW;AAIxBX,EAAAA,WAAW,EAAEA;AAJW,CAAJ,CAAtB","sourcesContent":["'use strict';\n\nvar xtend = require('xtend');\nvar v = require('@mapbox/fusspot');\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n    return 'Blob or ArrayBuffer';\n  }\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n  try {\n    var date = new Date(value);\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});\n"]},"metadata":{},"sourceType":"script"}