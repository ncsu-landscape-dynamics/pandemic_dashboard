{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { loadLibrary, global } from '@loaders.gl/loader-utils';\nvar loadDecoderPromise;\nvar loadEncoderPromise;\nexport function loadDracoDecoderModule(_x) {\n  return _loadDracoDecoderModule.apply(this, arguments);\n}\n\nfunction _loadDracoDecoderModule() {\n  _loadDracoDecoderModule = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(options) {\n    var modules;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            modules = options.modules || {};\n\n            if (!modules.draco3d) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              draco: modules.draco3d.createDecoderModule()\n            });\n\n          case 3:\n            loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n            _context.next = 6;\n            return loadDecoderPromise;\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadDracoDecoderModule.apply(this, arguments);\n}\n\nexport function loadDracoEncoderModule(_x2) {\n  return _loadDracoEncoderModule.apply(this, arguments);\n}\n\nfunction _loadDracoEncoderModule() {\n  _loadDracoEncoderModule = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(options) {\n    var modules;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            modules = options.modules || {};\n\n            if (!modules.draco3d) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              draco: modules.draco3d.createEncoderModule()\n            });\n\n          case 3:\n            loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n            _context2.next = 6;\n            return loadEncoderPromise;\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadDracoEncoderModule.apply(this, arguments);\n}\n\nfunction loadDracoDecoder(_x3) {\n  return _loadDracoDecoder.apply(this, arguments);\n}\n\nfunction _loadDracoDecoder() {\n  _loadDracoDecoder = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(options) {\n    var DracoDecoderModule, wasmBinary, _yield$Promise$all, _yield$Promise$all2;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = options.draco && options.draco.decoderType;\n            _context3.next = _context3.t0 === 'js' ? 3 : _context3.t0 === 'wasm' ? 7 : 7;\n            break;\n\n          case 3:\n            _context3.next = 5;\n            return loadLibrary('draco_decoder.js', 'draco', options);\n\n          case 5:\n            DracoDecoderModule = _context3.sent;\n            return _context3.abrupt(\"break\", 21);\n\n          case 7:\n            _context3.t1 = Promise;\n            _context3.next = 10;\n            return loadLibrary('draco_wasm_wrapper.js', 'draco', options);\n\n          case 10:\n            _context3.t2 = _context3.sent;\n            _context3.next = 13;\n            return loadLibrary('draco_decoder.wasm', 'draco', options);\n\n          case 13:\n            _context3.t3 = _context3.sent;\n            _context3.t4 = [_context3.t2, _context3.t3];\n            _context3.next = 17;\n            return _context3.t1.all.call(_context3.t1, _context3.t4);\n\n          case 17:\n            _yield$Promise$all = _context3.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            DracoDecoderModule = _yield$Promise$all2[0];\n            wasmBinary = _yield$Promise$all2[1];\n\n          case 21:\n            DracoDecoderModule = DracoDecoderModule || global.DracoDecoderModule;\n            _context3.next = 24;\n            return initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n\n          case 24:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loadDracoDecoder.apply(this, arguments);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  var options = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise(function (resolve) {\n    DracoDecoderModule(_objectSpread(_objectSpread({}, options), {}, {\n      onModuleLoaded: function onModuleLoaded(draco) {\n        return resolve({\n          draco: draco\n        });\n      }\n    }));\n  });\n}\n\nfunction loadDracoEncoder(_x4) {\n  return _loadDracoEncoder.apply(this, arguments);\n}\n\nfunction _loadDracoEncoder() {\n  _loadDracoEncoder = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(options) {\n    var DracoEncoderModule;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return loadLibrary('draco_encoder.js', 'draco', options);\n\n          case 2:\n            DracoEncoderModule = _context4.sent;\n            DracoEncoderModule = DracoEncoderModule || global.DracoEncoderModule;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              DracoEncoderModule({\n                onModuleLoaded: function onModuleLoaded(draco) {\n                  return resolve({\n                    draco: draco\n                  });\n                }\n              });\n            }));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _loadDracoEncoder.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/lib/draco-module-loader.js"],"names":["modules","options","draco","loadDecoderPromise","loadDracoDecoder","loadEncoderPromise","loadDracoEncoder","DracoDecoderModule","loadLibrary","wasmBinary","global","initializeDracoDecoder","onModuleLoaded","resolve","DracoEncoderModule"],"mappings":"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","sourcesContent":["// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary, global} from '@loaders.gl/loader-utils';\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    return {\n      draco: modules.draco3d.createDecoderModule()\n    };\n  }\n\n  // If not, dynamically load the WASM script from our CDN\n  loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    return {\n      draco: modules.draco3d.createEncoderModule()\n    };\n  }\n\n  // If not, dynamically load the WASM script from our CDN\n  loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary('draco_decoder.js', 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary('draco_wasm_wrapper.js', 'draco', options),\n        await loadLibrary('draco_decoder.wasm', 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || global.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise(resolve => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: draco => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary('draco_encoder.js', 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || global.DracoEncoderModule;\n\n  return new Promise(resolve => {\n    DracoEncoderModule({\n      onModuleLoaded: draco => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}