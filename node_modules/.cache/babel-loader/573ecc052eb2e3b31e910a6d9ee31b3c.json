{"ast":null,"code":"import events from './events';\nimport Store from './store';\nimport ui from './ui';\nimport * as Constants from './constants';\nimport xtend from 'xtend';\nexport default function (ctx) {\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n      return this;\n    },\n\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n\n    onAdd(map) {\n      if (process.env.NODE_ENV !== 'test') {\n        // Monkey patch to resolve breaking change to `fire` introduced by\n        // mapbox-gl-js. See mapbox/mapbox-gl-draw/issues/766.\n        const _fire = map.fire;\n\n        map.fire = function (type, event) {\n          // eslint-disable-next-line\n          let args = arguments;\n\n          if (_fire.length === 1 && arguments.length !== 1) {\n            args = [xtend({}, {\n              type\n            }, event)];\n          }\n\n          return _fire.apply(map, args);\n        };\n      }\n\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable(); // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => {\n          if (map.loaded()) setup.connect();\n        }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      }); // hot features style\n\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n      ctx.options.styles.forEach(style => {\n        ctx.map.addLayer(style);\n      });\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach(style => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n\n  };\n  ctx.setup = setup;\n  return setup;\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-gl-draw/src/setup.js"],"names":["events","Store","ui","Constants","xtend","ctx","controlContainer","mapLoadedInterval","setup","onRemove","map","off","connect","clearInterval","removeLayers","store","restoreMapConfig","removeButtons","removeEventListeners","clearMapClasses","container","parentNode","removeChild","addLayers","storeMapConfig","addEventListeners","onAdd","process","env","NODE_ENV","_fire","fire","type","event","args","arguments","length","apply","getContainer","addButtons","options","boxSelect","boxZoom","disable","dragPan","enable","loaded","on","setInterval","start","addSource","sources","COLD","data","geojsonTypes","FEATURE_COLLECTION","features","HOT","styles","forEach","style","addLayer","setDirty","render","getLayer","id","removeLayer","getSource","removeSource"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,UAASC,GAAT,EAAc;AAE3B,MAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAIC,iBAAiB,GAAG,IAAxB;AAEA,QAAMC,KAAK,GAAG;AACZC,IAAAA,QAAQ,GAAG;AACT;AACAJ,MAAAA,GAAG,CAACK,GAAJ,CAAQC,GAAR,CAAY,MAAZ,EAAoBH,KAAK,CAACI,OAA1B;AACAC,MAAAA,aAAa,CAACN,iBAAD,CAAb;AAEAC,MAAAA,KAAK,CAACM,YAAN;AACAT,MAAAA,GAAG,CAACU,KAAJ,CAAUC,gBAAV;AACAX,MAAAA,GAAG,CAACH,EAAJ,CAAOe,aAAP;AACAZ,MAAAA,GAAG,CAACL,MAAJ,CAAWkB,oBAAX;AACAb,MAAAA,GAAG,CAACH,EAAJ,CAAOiB,eAAP;AACAd,MAAAA,GAAG,CAACK,GAAJ,GAAU,IAAV;AACAL,MAAAA,GAAG,CAACe,SAAJ,GAAgB,IAAhB;AACAf,MAAAA,GAAG,CAACU,KAAJ,GAAY,IAAZ;AAEA,UAAIT,gBAAgB,IAAIA,gBAAgB,CAACe,UAAzC,EAAqDf,gBAAgB,CAACe,UAAjB,CAA4BC,WAA5B,CAAwChB,gBAAxC;AACrDA,MAAAA,gBAAgB,GAAG,IAAnB;AAEA,aAAO,IAAP;AACD,KAnBW;;AAoBZM,IAAAA,OAAO,GAAG;AACRP,MAAAA,GAAG,CAACK,GAAJ,CAAQC,GAAR,CAAY,MAAZ,EAAoBH,KAAK,CAACI,OAA1B;AACAC,MAAAA,aAAa,CAACN,iBAAD,CAAb;AACAC,MAAAA,KAAK,CAACe,SAAN;AACAlB,MAAAA,GAAG,CAACU,KAAJ,CAAUS,cAAV;AACAnB,MAAAA,GAAG,CAACL,MAAJ,CAAWyB,iBAAX;AACD,KA1BW;;AA2BZC,IAAAA,KAAK,CAAChB,GAAD,EAAM;AACT,UAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC;AACA;AACA,cAAMC,KAAK,GAAGpB,GAAG,CAACqB,IAAlB;;AACArB,QAAAA,GAAG,CAACqB,IAAJ,GAAW,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC/B;AACA,cAAIC,IAAI,GAAGC,SAAX;;AAEA,cAAIL,KAAK,CAACM,MAAN,KAAiB,CAAjB,IAAsBD,SAAS,CAACC,MAAV,KAAqB,CAA/C,EAAkD;AAChDF,YAAAA,IAAI,GAAG,CAAC9B,KAAK,CAAC,EAAD,EAAK;AAAE4B,cAAAA;AAAF,aAAL,EAAeC,KAAf,CAAN,CAAP;AACD;;AAED,iBAAOH,KAAK,CAACO,KAAN,CAAY3B,GAAZ,EAAiBwB,IAAjB,CAAP;AACD,SATD;AAUD;;AAED7B,MAAAA,GAAG,CAACK,GAAJ,GAAUA,GAAV;AACAL,MAAAA,GAAG,CAACL,MAAJ,GAAaA,MAAM,CAACK,GAAD,CAAnB;AACAA,MAAAA,GAAG,CAACH,EAAJ,GAASA,EAAE,CAACG,GAAD,CAAX;AACAA,MAAAA,GAAG,CAACe,SAAJ,GAAgBV,GAAG,CAAC4B,YAAJ,EAAhB;AACAjC,MAAAA,GAAG,CAACU,KAAJ,GAAY,IAAId,KAAJ,CAAUI,GAAV,CAAZ;AAGAC,MAAAA,gBAAgB,GAAGD,GAAG,CAACH,EAAJ,CAAOqC,UAAP,EAAnB;;AAEA,UAAIlC,GAAG,CAACmC,OAAJ,CAAYC,SAAhB,EAA2B;AACzB/B,QAAAA,GAAG,CAACgC,OAAJ,CAAYC,OAAZ,GADyB,CAEzB;AACA;;AACAjC,QAAAA,GAAG,CAACkC,OAAJ,CAAYD,OAAZ;AACAjC,QAAAA,GAAG,CAACkC,OAAJ,CAAYC,MAAZ;AACD;;AAED,UAAInC,GAAG,CAACoC,MAAJ,EAAJ,EAAkB;AAChBtC,QAAAA,KAAK,CAACI,OAAN;AACD,OAFD,MAEO;AACLF,QAAAA,GAAG,CAACqC,EAAJ,CAAO,MAAP,EAAevC,KAAK,CAACI,OAArB;AACAL,QAAAA,iBAAiB,GAAGyC,WAAW,CAAC,MAAM;AAAE,cAAItC,GAAG,CAACoC,MAAJ,EAAJ,EAAkBtC,KAAK,CAACI,OAAN;AAAkB,SAA7C,EAA+C,EAA/C,CAA/B;AACD;;AAEDP,MAAAA,GAAG,CAACL,MAAJ,CAAWiD,KAAX;AACA,aAAO3C,gBAAP;AACD,KAtEW;;AAuEZiB,IAAAA,SAAS,GAAG;AACV;AACAlB,MAAAA,GAAG,CAACK,GAAJ,CAAQwC,SAAR,CAAkB/C,SAAS,CAACgD,OAAV,CAAkBC,IAApC,EAA0C;AACxCC,QAAAA,IAAI,EAAE;AACJrB,UAAAA,IAAI,EAAE7B,SAAS,CAACmD,YAAV,CAAuBC,kBADzB;AAEJC,UAAAA,QAAQ,EAAE;AAFN,SADkC;AAKxCxB,QAAAA,IAAI,EAAE;AALkC,OAA1C,EAFU,CAUV;;AACA3B,MAAAA,GAAG,CAACK,GAAJ,CAAQwC,SAAR,CAAkB/C,SAAS,CAACgD,OAAV,CAAkBM,GAApC,EAAyC;AACvCJ,QAAAA,IAAI,EAAE;AACJrB,UAAAA,IAAI,EAAE7B,SAAS,CAACmD,YAAV,CAAuBC,kBADzB;AAEJC,UAAAA,QAAQ,EAAE;AAFN,SADiC;AAKvCxB,QAAAA,IAAI,EAAE;AALiC,OAAzC;AAQA3B,MAAAA,GAAG,CAACmC,OAAJ,CAAYkB,MAAZ,CAAmBC,OAAnB,CAA4BC,KAAD,IAAW;AACpCvD,QAAAA,GAAG,CAACK,GAAJ,CAAQmD,QAAR,CAAiBD,KAAjB;AACD,OAFD;AAIAvD,MAAAA,GAAG,CAACU,KAAJ,CAAU+C,QAAV,CAAmB,IAAnB;AACAzD,MAAAA,GAAG,CAACU,KAAJ,CAAUgD,MAAV;AACD,KAhGW;;AAiGZ;AACA;AACAjD,IAAAA,YAAY,GAAG;AACbT,MAAAA,GAAG,CAACmC,OAAJ,CAAYkB,MAAZ,CAAmBC,OAAnB,CAA4BC,KAAD,IAAW;AACpC,YAAIvD,GAAG,CAACK,GAAJ,CAAQsD,QAAR,CAAiBJ,KAAK,CAACK,EAAvB,CAAJ,EAAgC;AAC9B5D,UAAAA,GAAG,CAACK,GAAJ,CAAQwD,WAAR,CAAoBN,KAAK,CAACK,EAA1B;AACD;AACF,OAJD;;AAMA,UAAI5D,GAAG,CAACK,GAAJ,CAAQyD,SAAR,CAAkBhE,SAAS,CAACgD,OAAV,CAAkBC,IAApC,CAAJ,EAA+C;AAC7C/C,QAAAA,GAAG,CAACK,GAAJ,CAAQ0D,YAAR,CAAqBjE,SAAS,CAACgD,OAAV,CAAkBC,IAAvC;AACD;;AAED,UAAI/C,GAAG,CAACK,GAAJ,CAAQyD,SAAR,CAAkBhE,SAAS,CAACgD,OAAV,CAAkBM,GAApC,CAAJ,EAA8C;AAC5CpD,QAAAA,GAAG,CAACK,GAAJ,CAAQ0D,YAAR,CAAqBjE,SAAS,CAACgD,OAAV,CAAkBM,GAAvC;AACD;AACF;;AAjHW,GAAd;AAoHApD,EAAAA,GAAG,CAACG,KAAJ,GAAYA,KAAZ;AAEA,SAAOA,KAAP;AACD","sourcesContent":["import events from './events';\nimport Store from './store';\nimport ui from './ui';\nimport * as Constants from './constants';\nimport xtend from 'xtend';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      if (process.env.NODE_ENV !== 'test') {\n        // Monkey patch to resolve breaking change to `fire` introduced by\n        // mapbox-gl-js. See mapbox/mapbox-gl-draw/issues/766.\n        const _fire = map.fire;\n        map.fire = function(type, event) {\n          // eslint-disable-next-line\n          let args = arguments;\n\n          if (_fire.length === 1 && arguments.length !== 1) {\n            args = [xtend({}, { type }, event)];\n          }\n\n          return _fire.apply(map, args);\n        };\n      }\n\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n"]},"metadata":{},"sourceType":"module"}