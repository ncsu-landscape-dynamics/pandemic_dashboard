{"ast":null,"code":"import * as Constants from '../constants';\nexport default function (parent, startVertex, endVertex, map) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates; // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX || startCoord[1] < Constants.LAT_RENDERED_MIN || endCoord[1] > Constants.LAT_RENDERED_MAX || endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const ptA = map.project([startCoord[0], startCoord[1]]);\n  const ptB = map.project([endCoord[0], endCoord[1]]);\n  const mid = map.unproject([(ptA.x + ptB.x) / 2, (ptA.y + ptB.y) / 2]);\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js"],"names":["Constants","parent","startVertex","endVertex","map","startCoord","geometry","coordinates","endCoord","LAT_RENDERED_MAX","LAT_RENDERED_MIN","ptA","project","ptB","mid","unproject","x","y","type","geojsonTypes","FEATURE","properties","meta","MIDPOINT","lng","lat","coord_path","POINT"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,cAA3B;AAEA,eAAe,UAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,EAAyCC,GAAzC,EAA8C;AAC3D,QAAMC,UAAU,GAAGH,WAAW,CAACI,QAAZ,CAAqBC,WAAxC;AACA,QAAMC,QAAQ,GAAGL,SAAS,CAACG,QAAV,CAAmBC,WAApC,CAF2D,CAI3D;AACA;;AACA,MAAIF,UAAU,CAAC,CAAD,CAAV,GAAgBL,SAAS,CAACS,gBAA1B,IACFJ,UAAU,CAAC,CAAD,CAAV,GAAgBL,SAAS,CAACU,gBADxB,IAEFF,QAAQ,CAAC,CAAD,CAAR,GAAcR,SAAS,CAACS,gBAFtB,IAGFD,QAAQ,CAAC,CAAD,CAAR,GAAcR,SAAS,CAACU,gBAH1B,EAG4C;AAC1C,WAAO,IAAP;AACD;;AAED,QAAMC,GAAG,GAAGP,GAAG,CAACQ,OAAJ,CAAY,CAAEP,UAAU,CAAC,CAAD,CAAZ,EAAiBA,UAAU,CAAC,CAAD,CAA3B,CAAZ,CAAZ;AACA,QAAMQ,GAAG,GAAGT,GAAG,CAACQ,OAAJ,CAAY,CAAEJ,QAAQ,CAAC,CAAD,CAAV,EAAeA,QAAQ,CAAC,CAAD,CAAvB,CAAZ,CAAZ;AACA,QAAMM,GAAG,GAAGV,GAAG,CAACW,SAAJ,CAAc,CAAE,CAACJ,GAAG,CAACK,CAAJ,GAAQH,GAAG,CAACG,CAAb,IAAkB,CAApB,EAAuB,CAACL,GAAG,CAACM,CAAJ,GAAQJ,GAAG,CAACI,CAAb,IAAkB,CAAzC,CAAd,CAAZ;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAElB,SAAS,CAACmB,YAAV,CAAuBC,OADxB;AAELC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAEtB,SAAS,CAACsB,IAAV,CAAeC,QADX;AAEVtB,MAAAA,MAFU;AAGVuB,MAAAA,GAAG,EAAEV,GAAG,CAACU,GAHC;AAIVC,MAAAA,GAAG,EAAEX,GAAG,CAACW,GAJC;AAKVC,MAAAA,UAAU,EAAEvB,SAAS,CAACkB,UAAV,CAAqBK;AALvB,KAFP;AASLpB,IAAAA,QAAQ,EAAE;AACRY,MAAAA,IAAI,EAAElB,SAAS,CAACmB,YAAV,CAAuBQ,KADrB;AAERpB,MAAAA,WAAW,EAAE,CAACO,GAAG,CAACU,GAAL,EAAUV,GAAG,CAACW,GAAd;AAFL;AATL,GAAP;AAcD","sourcesContent":["import * as Constants from '../constants';\n\nexport default function(parent, startVertex, endVertex, map) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const ptA = map.project([ startCoord[0], startCoord[1] ]);\n  const ptB = map.project([ endCoord[0], endCoord[1] ]);\n  const mid = map.unproject([ (ptA.x + ptB.x) / 2, (ptA.y + ptB.y) / 2 ]);\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}