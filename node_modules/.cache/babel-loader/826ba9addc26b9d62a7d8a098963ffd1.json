{"ast":null,"code":"import xtend from 'xtend';\nimport * as Constants from './constants';\nimport styles from './lib/theme';\nimport modes from './modes/index';\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false\n};\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map(style => {\n    if (style.source) return style;\n    return xtend(style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: sourceBucket === 'hot' ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function (options = {}) {\n  let withDefaults = xtend(options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = xtend(hideControls, options.controls);\n  } else {\n    withDefaults.controls = xtend(showControls, options.controls);\n  }\n\n  withDefaults = xtend(defaultOptions, withDefaults); // Layers with a shared source should be adjacent for performance reasons\n\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n  return withDefaults;\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-gl-draw/src/options.js"],"names":["xtend","Constants","styles","modes","defaultOptions","defaultMode","SIMPLE_SELECT","keybindings","touchEnabled","clickBuffer","touchBuffer","boxSelect","displayControlsDefault","controls","userProperties","showControls","point","line_string","polygon","trash","combine_features","uncombine_features","hideControls","addSources","sourceBucket","map","style","source","id","sources","HOT","COLD","options","withDefaults","concat"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,WAAW,EAAEJ,SAAS,CAACE,KAAV,CAAgBG,aADR;AAErBC,EAAAA,WAAW,EAAE,IAFQ;AAGrBC,EAAAA,YAAY,EAAE,IAHO;AAIrBC,EAAAA,WAAW,EAAE,CAJQ;AAKrBC,EAAAA,WAAW,EAAE,EALQ;AAMrBC,EAAAA,SAAS,EAAE,IANU;AAOrBC,EAAAA,sBAAsB,EAAE,IAPH;AAQrBV,EAAAA,MARqB;AASrBC,EAAAA,KATqB;AAUrBU,EAAAA,QAAQ,EAAE,EAVW;AAWrBC,EAAAA,cAAc,EAAE;AAXK,CAAvB;AAcA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE,IAJY;AAKnBC,EAAAA,gBAAgB,EAAE,IALC;AAMnBC,EAAAA,kBAAkB,EAAE;AAND,CAArB;AASA,MAAMC,YAAY,GAAG;AACnBN,EAAAA,KAAK,EAAE,KADY;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE,KAJY;AAKnBC,EAAAA,gBAAgB,EAAE,KALC;AAMnBC,EAAAA,kBAAkB,EAAE;AAND,CAArB;;AASA,SAASE,UAAT,CAAoBrB,MAApB,EAA4BsB,YAA5B,EAA0C;AACxC,SAAOtB,MAAM,CAACuB,GAAP,CAAYC,KAAD,IAAW;AAC3B,QAAIA,KAAK,CAACC,MAAV,EAAkB,OAAOD,KAAP;AAClB,WAAO1B,KAAK,CAAC0B,KAAD,EAAQ;AAClBE,MAAAA,EAAE,EAAG,GAAEF,KAAK,CAACE,EAAG,IAAGJ,YAAa,EADd;AAElBG,MAAAA,MAAM,EAAGH,YAAY,KAAK,KAAlB,GAA2BvB,SAAS,CAAC4B,OAAV,CAAkBC,GAA7C,GAAmD7B,SAAS,CAAC4B,OAAV,CAAkBE;AAF3D,KAAR,CAAZ;AAID,GANM,CAAP;AAOD;;AAED,eAAe,UAASC,OAAO,GAAG,EAAnB,EAAuB;AACpC,MAAIC,YAAY,GAAGjC,KAAK,CAACgC,OAAD,CAAxB;;AAEA,MAAI,CAACA,OAAO,CAACnB,QAAb,EAAuB;AACrBoB,IAAAA,YAAY,CAACpB,QAAb,GAAwB,EAAxB;AACD;;AAED,MAAImB,OAAO,CAACpB,sBAAR,KAAmC,KAAvC,EAA8C;AAC5CqB,IAAAA,YAAY,CAACpB,QAAb,GAAwBb,KAAK,CAACsB,YAAD,EAAeU,OAAO,CAACnB,QAAvB,CAA7B;AACD,GAFD,MAEO;AACLoB,IAAAA,YAAY,CAACpB,QAAb,GAAwBb,KAAK,CAACe,YAAD,EAAeiB,OAAO,CAACnB,QAAvB,CAA7B;AACD;;AAEDoB,EAAAA,YAAY,GAAGjC,KAAK,CAACI,cAAD,EAAiB6B,YAAjB,CAApB,CAboC,CAepC;;AACAA,EAAAA,YAAY,CAAC/B,MAAb,GAAsBqB,UAAU,CAACU,YAAY,CAAC/B,MAAd,EAAsB,MAAtB,CAAV,CAAwCgC,MAAxC,CAA+CX,UAAU,CAACU,YAAY,CAAC/B,MAAd,EAAsB,KAAtB,CAAzD,CAAtB;AAEA,SAAO+B,YAAP;AACD","sourcesContent":["import xtend from 'xtend';\nimport * as Constants from './constants';\n\nimport styles from './lib/theme';\nimport modes from './modes/index';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return xtend(style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: (sourceBucket === 'hot') ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = xtend(options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = xtend(hideControls, options.controls);\n  } else {\n    withDefaults.controls = xtend(showControls, options.controls);\n  }\n\n  withDefaults = xtend(defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n\n  return withDefaults;\n}\n"]},"metadata":{},"sourceType":"module"}