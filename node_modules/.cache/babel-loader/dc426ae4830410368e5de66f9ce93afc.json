{"ast":null,"code":"'use strict';\n\nvar parseToken = require('@mapbox/parse-mapbox-token');\n\nvar MapiRequest = require('./mapi-request');\n\nvar constants = require('../constants');\n/**\n * A low-level Mapbox API client. Use it to create service clients\n * that share the same configuration.\n *\n * Services and `MapiRequest`s use the underlying `MapiClient` to\n * determine how to create, send, and abort requests in a way\n * that is appropriate to the configuration and environment\n * (Node or the browser).\n *\n * @class MapiClient\n * @property {string} accessToken - The Mapbox access token assigned\n *   to this client.\n * @property {string} [origin] - The origin\n *   to use for API requests. Defaults to https://api.mapbox.com.\n */\n\n\nfunction MapiClient(options) {\n  if (!options || !options.accessToken) {\n    throw new Error('Cannot create a client without an access token');\n  } // Try parsing the access token to determine right away if it's valid.\n\n\n  parseToken(options.accessToken);\n  this.accessToken = options.accessToken;\n  this.origin = options.origin || constants.API_ORIGIN;\n}\n\nMapiClient.prototype.createRequest = function createRequest(requestOptions) {\n  return new MapiRequest(this, requestOptions);\n};\n\nmodule.exports = MapiClient;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js"],"names":["parseToken","require","MapiRequest","constants","MapiClient","options","accessToken","Error","origin","API_ORIGIN","prototype","createRequest","requestOptions","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,4BAAD,CAAxB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,cAAD,CAAvB;AAEA;;;;;;;;;;;;;;;;;AAgBA,SAASG,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAACC,WAAzB,EAAsC;AACpC,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD,GAH0B,CAI3B;;;AACAP,EAAAA,UAAU,CAACK,OAAO,CAACC,WAAT,CAAV;AAEA,OAAKA,WAAL,GAAmBD,OAAO,CAACC,WAA3B;AACA,OAAKE,MAAL,GAAcH,OAAO,CAACG,MAAR,IAAkBL,SAAS,CAACM,UAA1C;AACD;;AAEDL,UAAU,CAACM,SAAX,CAAqBC,aAArB,GAAqC,SAASA,aAAT,CAAuBC,cAAvB,EAAuC;AAC1E,SAAO,IAAIV,WAAJ,CAAgB,IAAhB,EAAsBU,cAAtB,CAAP;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBV,UAAjB","sourcesContent":["'use strict';\n\nvar parseToken = require('@mapbox/parse-mapbox-token');\nvar MapiRequest = require('./mapi-request');\nvar constants = require('../constants');\n\n/**\n * A low-level Mapbox API client. Use it to create service clients\n * that share the same configuration.\n *\n * Services and `MapiRequest`s use the underlying `MapiClient` to\n * determine how to create, send, and abort requests in a way\n * that is appropriate to the configuration and environment\n * (Node or the browser).\n *\n * @class MapiClient\n * @property {string} accessToken - The Mapbox access token assigned\n *   to this client.\n * @property {string} [origin] - The origin\n *   to use for API requests. Defaults to https://api.mapbox.com.\n */\n\nfunction MapiClient(options) {\n  if (!options || !options.accessToken) {\n    throw new Error('Cannot create a client without an access token');\n  }\n  // Try parsing the access token to determine right away if it's valid.\n  parseToken(options.accessToken);\n\n  this.accessToken = options.accessToken;\n  this.origin = options.origin || constants.API_ORIGIN;\n}\n\nMapiClient.prototype.createRequest = function createRequest(requestOptions) {\n  return new MapiRequest(this, requestOptions);\n};\n\nmodule.exports = MapiClient;\n"]},"metadata":{},"sourceType":"script"}