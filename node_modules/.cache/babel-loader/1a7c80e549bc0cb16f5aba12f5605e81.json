{"ast":null,"code":"'use strict';\n\nvar trim = require('trim');\n\nvar compose = require('./compose');\n\nvar NUMBER_REGEX = /^-?\\d+(\\.\\d+)?$/;\nmodule.exports = {\n  translate: compose(function (value) {\n    return 'translate(' + value + ')';\n  }, defaultUnit('px'), comma),\n  translate3d: compose(function (value) {\n    return 'translate3d(' + value + ')';\n  }, defaultUnit('px'), comma),\n  translateX: compose(function (x) {\n    return 'translateX(' + x + ')';\n  }, defaultUnit('px')),\n  translateY: compose(function (y) {\n    return 'translateY(' + y + ')';\n  }, defaultUnit('px')),\n  translateZ: compose(function (z) {\n    return 'translateZ(' + z + ')';\n  }, defaultUnit('px')),\n  scale: compose(function (value) {\n    return 'scale(' + value + ')';\n  }, comma),\n  scale3d: compose(function (value) {\n    return 'scale3d(' + value + ')';\n  }, comma),\n  scaleX: function (value) {\n    return 'scaleX(' + value + ')';\n  },\n  scaleY: function (value) {\n    return 'scaleY(' + value + ')';\n  },\n  scaleZ: function (value) {\n    return 'scaleZ(' + value + ')';\n  },\n  rotate: compose(function (value) {\n    return 'rotate(' + value + ')';\n  }, defaultUnit('deg'), comma),\n  rotate3d: compose(function (value) {\n    return 'rotate3d(' + value + ')';\n  }, comma),\n  rotateX: compose(function (value) {\n    return 'rotateX(' + value + ')';\n  }, defaultUnit('deg')),\n  rotateY: compose(function (value) {\n    return 'rotateY(' + value + ')';\n  }, defaultUnit('deg')),\n  rotateZ: compose(function (value) {\n    return 'rotateZ(' + value + ')';\n  }, defaultUnit('deg')),\n  skew: compose(function (value) {\n    return 'skew(' + value + ')';\n  }, defaultUnit('deg'), comma),\n  skewX: compose(function (value) {\n    return 'skewX(' + value + ')';\n  }, defaultUnit('deg')),\n  skewY: compose(function (value) {\n    return 'skewY(' + value + ')';\n  }, defaultUnit('deg')),\n  matrix: compose(function (value) {\n    return 'matrix(' + value + ')';\n  }, comma),\n  matrix3d: compose(function (value) {\n    return 'matrix3d(' + value + ')';\n  }, comma),\n  perspective: compose(function (value) {\n    return 'perspective(' + value + ')';\n  }, defaultUnit('px'))\n};\n\nfunction comma(value) {\n  if (!/,/.test(value)) {\n    value = value.split(' ').join(',');\n  }\n\n  return value;\n}\n\nfunction defaultUnit(unit) {\n  return function (value) {\n    return value.split(',').map(function (v) {\n      v = trim(v);\n\n      if (NUMBER_REGEX.test(v)) {\n        v += unit;\n      }\n\n      return v;\n    }).join(',');\n  };\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/dom-transform/lib/properties.js"],"names":["trim","require","compose","NUMBER_REGEX","module","exports","translate","value","defaultUnit","comma","translate3d","translateX","x","translateY","y","translateZ","z","scale","scale3d","scaleX","scaleY","scaleZ","rotate","rotate3d","rotateX","rotateY","rotateZ","skew","skewX","skewY","matrix","matrix3d","perspective","test","split","join","unit","map","v"],"mappings":"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","sourcesContent":["'use strict';\n\nvar trim = require('trim');\nvar compose = require('./compose');\n\nvar NUMBER_REGEX = /^-?\\d+(\\.\\d+)?$/;\n\nmodule.exports = {\n  translate: compose(function(value) {\n    return 'translate(' + value + ')';\n  }, defaultUnit('px'), comma),\n\n  translate3d: compose(function(value) {\n    return 'translate3d(' + value + ')';\n  }, defaultUnit('px'), comma),\n\n  translateX: compose(function(x) {\n    return 'translateX(' + x + ')';\n  }, defaultUnit('px')),\n\n  translateY: compose(function(y) {\n    return 'translateY(' + y + ')';\n  }, defaultUnit('px')),\n\n  translateZ: compose(function(z) {\n    return 'translateZ(' + z + ')';\n  }, defaultUnit('px')),\n\n\n  scale: compose(function(value) {\n    return 'scale(' + value + ')';\n  }, comma),\n\n  scale3d: compose(function(value) {\n    return 'scale3d(' + value + ')';\n  }, comma),\n\n  scaleX: function(value) {\n    return 'scaleX(' + value + ')';\n  },\n\n  scaleY: function(value) {\n    return 'scaleY(' + value + ')';\n  },\n\n  scaleZ: function(value) {\n    return 'scaleZ(' + value + ')';\n  },\n\n\n  rotate: compose(function(value) {\n    return 'rotate(' + value + ')';\n  }, defaultUnit('deg'), comma),\n\n  rotate3d: compose(function(value) {\n    return 'rotate3d(' + value + ')';\n  }, comma),\n\n  rotateX: compose(function(value) {\n    return 'rotateX(' + value + ')';\n  }, defaultUnit('deg')),\n\n  rotateY: compose(function(value) {\n    return 'rotateY(' + value + ')';\n  }, defaultUnit('deg')),\n\n  rotateZ: compose(function(value) {\n    return 'rotateZ(' + value + ')';\n  }, defaultUnit('deg')),\n\n\n  skew: compose(function(value) {\n    return 'skew(' + value + ')';\n  }, defaultUnit('deg'), comma),\n\n  skewX: compose(function(value) {\n    return 'skewX(' + value + ')';\n  }, defaultUnit('deg')),\n\n  skewY: compose(function(value) {\n    return 'skewY(' + value + ')';\n  }, defaultUnit('deg')),\n\n\n  matrix: compose(function(value) {\n    return 'matrix(' + value + ')';\n  }, comma),\n\n  matrix3d: compose(function(value) {\n    return 'matrix3d(' + value + ')';\n  }, comma),\n\n\n  perspective: compose(function(value) {\n    return 'perspective(' + value + ')';\n  }, defaultUnit('px')),\n};\n\n\nfunction comma(value) {\n  if (!/,/.test(value)) {\n    value = value.split(' ').join(',');\n  }\n\n  return value;\n}\n\n\nfunction defaultUnit(unit) {\n  return function(value) {\n    return value.split(',').map(function(v) {\n      v = trim(v);\n\n      if (NUMBER_REGEX.test(v)) {\n        v += unit;\n      }\n\n      return v;\n    }).join(',');\n  };\n}\n"]},"metadata":{},"sourceType":"script"}