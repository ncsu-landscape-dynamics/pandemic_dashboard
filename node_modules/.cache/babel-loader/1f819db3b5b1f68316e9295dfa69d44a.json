{"ast":null,"code":"// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// import mapboxgl from 'mapbox-gl'\n// import data from './pandemic_output.json'\n// import presence_data from './presence_pandemic.json'\n// import Tooltip from './components/tooltip'\n// import ReactDOM from 'react-dom'\n// import {Component} from 'react';\n// import {render} from 'react-dom';\n// import MapGL, {Source, Layer} from 'react-map-gl';\n// import ControlPanel from './control-panel';\n// import {dataLayer} from './map-style.js';\n// import {updatePercentiles} from './utils';\n// import {json as requestJson} from 'd3-request';\n// mapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n// const MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n// // var draw;\n// var stops =  [\n//   [0, 'rgba(45,69,132, 0.4)'],\t\n//   [0.1, 'rgba(77,30,129, 0.4)'],\t\n//   [0.2, 'rgba(109,41,126, 0.4)'],\t\t\t\n//   [0.3, 'rgba(141,52,123, 0.4)'], \n//   [0.4, 'rgba(173,63,120, 0.4)'],\t\n//   [0.5, 'rgba(205,74,118, 0.4)'], \n//   [0.6, 'rgba(210,103,103\t, 0.4)'],\t\t\n//   [0.7, 'rgba(216,132,89,0.7)'], \n//   [0.8, 'rgba(222,161,75, 0.4)'],\t\n//   [0.9, 'rgba(228,190,61, 0.4)'],\n//   [1, 'rgba(240,249,33, 0.4)']\n// ]\n// const options = [{\n//   name: '1993',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T0',\n//   propertyPresence: 'Presence 1993',\n//   stops: stops\n// }, {\n//   name: '1994',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T1',\n//   stops: stops\n// }, {\n//   name: '1995',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T2',\n//   stops: stops\n// }, {\n//   name: '1996',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T3',\n//   stops: stops\n// }, {\n//   name: '1997',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T4',\n//   stops: stops\n// }, {\n//   name: '1998',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T5',\n//   stops: stops\n// }, {\n//   name: '1999',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T6',\n//   stops: stops\n// }, {\n//   name: '2000',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T7',\n//   stops: stops\n// }, {\n//   name: '2001',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T8',\n//   stops: stops\n// }, {\n//   name: '2002',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T9',\n//   stops: stops\n// }, {\n//   name: '2003',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T10',\n//   stops: stops\n// }, {\n//   name: '2004',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T11',\n//   stops: stops\n// }, {\n//   name: '2005',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T12',\n//   stops: stops\n// }, {\n//   name: '2006',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T13',\n//   stops: stops\n// }, {\n//   name: '2007',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T14',\n//   stops: stops\n// }, {\n//   name: '2008',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T15',\n//   stops: stops\n// }, {\n//   name: '2009',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T16',\n//   stops: stops\n// }, {\n//   name: '2010',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T17',\n//   stops: stops\n// }, {\n//   name: '2011',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T18',\n//   stops: stops\n// }, {\n//   name: '2012',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T19',\n//   stops: stops\n// }, {\n//   name: '2013',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T20',\n//   stops: stops\n// }, {\n//   name: '2014',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T21',\n//   stops: stops\n// }, {\n//   name: '2015',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T22',\n//   stops: stops\n// }, {\n//   name: '2016',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T23',\n//   stops: stops\n// }, {\n//   name: '2017',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T24',\n//   stops: stops\n// }, {\n//   name: '2018',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T25',\n//   propertyPresence: 'Presence 1993',\n//   stops: stops\n// }\n// ]\n// const markerList = [\n//   {\n//     name: \"title\",\n//     info: \"icon\"\n//   },\n//   {\n//     name: \"title\",\n//     info: \"icon\"\n//   },\n//   {\n//     name: \"title\",\n//     info: \"icon\"\n//   }\n// ];\n// // const presence_options = [{\n// //   name: '1993',\n// //   description: 'Presence',\n// //   property: 'Presence 1993'\n// // }, {\n// //   name: '1994',\n// //   description: 'Presence',\n// //   property: 'Presence 1994'\n// // }, {\n// //   name: '1995',\n// //   description: 'Presence',\n// //   property: 'Presence 1995'\n// // }, {\n// //   name: '1996',\n// //   description: 'Presence',\n// //   property: 'Presence 1996'\n// // }, {\n// //   name: '1997',\n// //   description: 'Presence',\n// //   property: 'Presence 1997'\n// // }, {\n// //   name: '1998',\n// //   description: 'Presence',\n// //   property: 'Presence 1998'\n// // }, {\n// //   name: '1999',\n// //   description: 'Presence',\n// //   property: 'Presence 1999'\n// // }, {\n// //   name: '2000',\n// //   description: 'Presence',\n// //   property: 'Presence 2000'\n// // }, {\n// //   name: '2001',\n// //   description: 'Presence',\n// //   property: 'Presence 2001'\n// // }, {\n// //   name: '2002',\n// //   description: 'Presence',\n// //   property: 'Presence 2002'\n// // }, {\n// //   name: '2003',\n// //   description: 'Presence',\n// //   property: 'Presence 2003'\n// // }, {\n// //   name: '2004',\n// //   description: 'Presence',\n// //   property: 'Presence 2004'\n// // }, {\n// //   name: '2005',\n// //   description: 'Presence',\n// //   property: 'Presence 2005'\n// // }, {\n// //   name: '2006',\n// //   description: 'Presence',\n// //   property: 'Presence 2006'\n// // }, {\n// //   name: '2007',\n// //   description: 'Presence',\n// //   property: 'Presence 2007'\n// // }, {\n// //   name: '2008',\n// //   description: 'Presence',\n// //   property: 'Presence 2008'\n// // }, {\n// //   name: '2009',\n// //   description: 'Presence',\n// //   property: 'Presence 2009'\n// // }, {\n// //   name: '2010',\n// //   description: 'Presence',\n// //   property: 'Presence 2010'\n// // }, {\n// //   name: '2011',\n// //   description: 'Presence',\n// //   property: 'Presence 2011'\n// // }, {\n// //   name: '2012',\n// //   description: 'Presence',\n// //   property: 'Presence 2012'\n// // }, {\n// //   name: '2013',\n// //   description: 'Presence',\n// //   property: 'Presence 2013'\n// // }, {\n// //   name: '2014',\n// //   description: 'Presence',\n// //   property: 'Presence 2014'\n// // }, {\n// //   name: '2015',\n// //   description: 'Presence',\n// //   property: 'Presence 2015'\n// // }, {\n// //   name: '2016',\n// //   description: 'Presence',\n// //   property: 'Presence 2016'\n// // }, {\n// //   name: '2017',\n// //   description: 'Presence',\n// //   property: 'Presence 2017'\n// // }, {\n// //   name: '2018',\n// //   description: 'Presence',\n// //   property: 'Presence 2018'\n// // }\n// // ]\n// const navStyle = {\n//   position: 'absolute',\n//   top: 0,\n//   left: 0,\n//   padding: '10px'\n// };\n// const CITIES =  {\n//   name: \"title\",\n//   info: \"icon\"\n// }\n// class App extends React.Component {\n//   mapRef = React.createRef();\n//   map;\n//   tooltipContainer;\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       active: options[0],\n//       // active: options_presence[0],\n//       year: 1993,\n//       data: null,\n//       hoveredFeature: null,\n//       viewport: {\n//         latitude: 40,\n//         longitude: -100,\n//         zoom: 3,\n//         bearing: 0,\n//         pitch: 0\n//       },\n//       // popupInfo: null\n//     };\n//     // this.renderPopup = this.renderPopup.bind(this)\n//     };\n//   componentDidUpdate() {\n//     this.setFill();\n//   }\n//   componentDidMount() {\n//     this.tooltipContainer = document.createElement('div');\n//     requestJson(\n//       'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/us-income.geojson',\n//       (error, response) => {\n//         if (!error) {\n//           this._loadData(response);\n//         }\n//       }\n//     );\n//     this.map = new mapboxgl.Map({\n//       container: this.mapRef.current,\n//       style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax', // style: 'mapbox://styles/mapbox/dark-v10',\n//       center: [12, 26],\n//       zoom: 1.5,\n//     });\n//     this.map.on('load',  (e) => {\n//       this.map.addSource('countries', {\n//         type: 'geojson',\n//         data\n//       });\n//       this.map.addSource('presence_data', {\n//         type: 'geojson',\n//         presence_data\n//       });\n//       this.map.addLayer({\n//         id: 'countries',\n//         type: 'fill',\n//         source: 'countries'\n//       },'country-label'); \n//       this.map.addLayer({\n//         id: 'presence_data',\n//         interactive: true,\n//         type: \"symbol\",\n//         source: {\n//           \"type\": \"geojson\",\n//           \"data\": presence_data\n//         },\n//         layout: {\n//           'icon-image': \n//           ['concat', ['get', 'icon'], '-15'],\n//           'text-field': ['get', 'title'],\n//           'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n//           'text-offset': [0, 0.6],\n//           'text-anchor': 'top'\n//         }\n//       }); \n//       // this.\n//       this.map.on('styledata', function() {\n//         this.addLayer();\n//       });\n//       this.setFill();\n//       // const features = this.map.queryRenderedFeatures(e.point, {\n//       // pestMarker \n//       //   .setLngLat(e.lngLat)\n//       //   .setHTML('<b><u>Country Information' + '</b></u>' +\n//       //     '<ul>' +\n//       //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//       //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//       //     '</ul>')\n//       // .addTo(this.map);\n//       // // });\n//       // this.set\n//     });\n//     const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n//       offset: [-120, 0]\n//     }).setLngLat([0,0]).addTo(this.map);\n//     var popup = new mapboxgl.Popup({\n//       closeButton: false,\n//       closeOnClick: false\n//       });\n//     var pestMarker = new mapboxgl.Marker({\n//       offset: [-120, 0]\n//     }).setLngLat([0,0]).addTo(this.map);\n//     console.log(pestMarker);\n//       this.map.on('mouseenter', 'countries', (e) => {\n//         this.map.getCanvas().style.cursor =  'pointer';\n//       });\n//       this.map.on('click', 'countries', (e) => {\n//         const features = this.map.queryRenderedFeatures(e.point, {\n//       });\n//       const { name, description, stops, property } = this.state.active;\n//       const prob_intro = features[0].properties[property];\n//       this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n//       popup \n//       .setLngLat(e.lngLat)\n//       .setHTML('<b><u>Country Information' + '</b></u>' +\n//         '<ul>' +\n//         '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//         '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//         '</ul>')\n//     .addTo(this.map);\n//     });\n//     this.map.on('mouseleave', 'countries', (e) => {\n//       this.map.getCanvas().style.cursor =  '';\n//       popup.remove();\n//     });\n//   }\n//   _loadData = data => {\n//     this.map.setState({\n//       data: updatePercentiles(data, f => f.properties.income[this.state.year])\n//     });\n//   };\n//   _updateSettings = (name, value) => {\n//     if (name === 'year') {\n//       this.map.setState({year: value});\n//       const {data} = this.state;\n//       if (data) {\n//         // trigger update\n//         this.setState({\n//           data: updatePercentiles(data, f => f.properties.income[value])\n//         });\n//       }\n//     }\n//   };\n//   _onViewportChange = viewport => this.setState({viewport});\n//   _onHover = event => {\n//     const {\n//       features,\n//       srcEvent: {offsetX, offsetY}\n//     } = event;\n//     const hoveredFeature = features && features.find(f => f.layer.id === 'data');\n//     this.setState({hoveredFeature, x: offsetX, y: offsetY});\n//   };\n//   _renderTooltip() {\n//     const {hoveredFeature, x, y} = this.state;\n//     return (\n//       hoveredFeature && (\n//         <div className=\"tooltip\" style={{left: x, top: y}}>\n//           <div>State: {hoveredFeature.properties.name}</div>\n//           <div>Median Household Income: {hoveredFeature.properties.value}</div>\n//           <div>Percentile: {(hoveredFeature.properties.percentile / 8) * 100}</div>\n//         </div>\n//       )\n//     );\n//   }\n//   render() {\n//     const {viewport, data} = this.state;\n//     return (\n//       <div style={{height: '100%', position: 'relative'}}>\n//         <MapGL\n//           {...viewport}\n//           width=\"100%\"\n//           height=\"100%\"\n//           mapStyle=\"mapbox://styles/mapbox/light-v9\"\n//           onViewportChange={this._onViewportChange}\n//           mapboxApiAccessToken={MAPBOX_TOKEN}\n//           onHover={this._onHover}\n//         >\n//           <Source type=\"geojson\" data={data}>\n//             <Layer {...dataLayer} />\n//           </Source>\n//           {this._renderTooltip()}\n//         </MapGL>\n//         <ControlPanel\n//           containerComponent={this.props.containerComponent}\n//           settings={this.state}\n//           onChange={this._updateSettings}\n//         />\n//       </div>\n//     );\n//   }\n//   render() {\n//     const {viewport, data} = this.state;\n//     return (\n//       <div style={{height: '100%', position: 'relative'}}>\n//         <MapGL\n//           {...viewport}\n//           width=\"100%\"\n//           height=\"100%\"\n//           mapStyle=\"mapbox://styles/mapbox/light-v9\"\n//           onViewportChange={this._onViewportChange}\n//           mapboxApiAccessToken={MAPBOX_TOKEN}\n//           onHover={this._onHover}\n//         >\n//           <Source type=\"geojson\" data={data}>\n//             <Layer {...dataLayer} />\n//           </Source>\n//           {this._renderTooltip()}\n//         </MapGL>\n//         <ControlPanel\n//           containerComponent={this.props.containerComponent}\n//           settings={this.state}\n//           onChange={this._updateSettings}\n//         />\n//       </div>\n//     );\n//   }\n// // }\n//   setFill() {\n//     const { property, stops } = this.state.active;\n//     this.map.setPaintProperty('countries', 'fill-color', {\n//       property,\n//       stops\n//     },\n//     )\n//     this.map.setPaintProperty('countries', 'fill-outline-color', {\n//       property,\n//       stops\n//     })\n//     // this.map.setTooltip('presence_data', '', {\n//     //   property,\n//     //   stops\n//     // })  ;\n//   }\n//   // render() {\n//   //   const {viewport} = this.state;\n//   //   return (\n//   //     <GeoJSONLayer\n//   //       data={presence_data}\n//   //       type=\"symbol\"\n//   //       anchor=\"bottom-right\"\n//   //       longitude={this.state.popupInfo.state.longitude}\n//   //       latitude={this.state.popupInfo.state.latitude}\n//   //       onClose={() => this.setState({popupInfo: null})}\n//   //       closeOnClick={true}\n//   //       symbolLayout={{\n//   //         \"text-field\": \"{title}\",\n//   //         \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n//   //         \"text-offset\": [0, 0.6],\n//   //         \"text-anchor\": \"top\"\n//   //       }}/>\n//   //   );\n//   // }\n//   render() {\n//     const { name, description, stops, property } = this.state.active;\n//     const renderLegendKeys = (stop, i) => {\n//       return (\n//         <div key={i} className='txt-s '>\n//           <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n//           <span >{`${stop[0].toLocaleString()}`}</span>\n//         </div>\n//       );\n//     }\n//     const renderOptions = (option, i) => {\n//       return (\n//         <label key={i} className=\"toggle-container  right  left px3 py3\">\n//           <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n//           <div  className=\"toggle grid txt-s color-white right   left toggle--active-white\">{option.name}</div>\n//         </label>\n//       );\n//     }\n//     return (\n//       <div>\n//         <div ref={this.mapRef} className=\"absolute top right left bottom align-middle grid\" />\n//         <label className=\"ctxt-bold color-white absolute mt6 ml12\" ><b>Select Year:</b></label>\n//         <div  className=\"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \">\n//           {options.map(renderOptions)}\n//         </div>\n//         <div  className=\" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \">\n//           <div className='mb6 color-white'>\n//             <h2 className=\"txt-bold txt-s block color-white\">{name}</h2>\n//             <p className='txt-s color-white'>{description}</p>\n//           </div>\n//           {stops.map(renderLegendKeys)}\n//         </div>\n//       </div>\n//       // <MapGL\n//       //   {...viewport}\n//       //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n//       //   mapboxApiAccessToken={TOKEN} >\n//       //   {markers}\n//       //   {this.renderPopup()}\n//       //   <div className=\"nav\" style={navStyle}>\n//       //     <NavigationControl/>\n//       //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n//       //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n//       //     </Marker>\n//       //     </div>\n//       //   </div>\n//       // </MapGL>\n//       );\n//   }\n// }\n// export default App;\n// export function renderToDom(container) {\n//   render(<App />, container);\n// }","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/src/App.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// import mapboxgl from 'mapbox-gl'\n// import data from './pandemic_output.json'\n// import presence_data from './presence_pandemic.json'\n// import Tooltip from './components/tooltip'\n// import ReactDOM from 'react-dom'\n\n// import {Component} from 'react';\n// import {render} from 'react-dom';\n// import MapGL, {Source, Layer} from 'react-map-gl';\n// import ControlPanel from './control-panel';\n\n// import {dataLayer} from './map-style.js';\n// import {updatePercentiles} from './utils';\n// import {json as requestJson} from 'd3-request';\n\n\n// mapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n// const MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n\n// // var draw;\n// var stops =  [\n//   [0, 'rgba(45,69,132, 0.4)'],\t\n//   [0.1, 'rgba(77,30,129, 0.4)'],\t\n//   [0.2, 'rgba(109,41,126, 0.4)'],\t\t\t\n//   [0.3, 'rgba(141,52,123, 0.4)'], \n//   [0.4, 'rgba(173,63,120, 0.4)'],\t\n//   [0.5, 'rgba(205,74,118, 0.4)'], \n//   [0.6, 'rgba(210,103,103\t, 0.4)'],\t\t\n//   [0.7, 'rgba(216,132,89,0.7)'], \n//   [0.8, 'rgba(222,161,75, 0.4)'],\t\n//   [0.9, 'rgba(228,190,61, 0.4)'],\n//   [1, 'rgba(240,249,33, 0.4)']\n// ]\n\n// const options = [{\n//   name: '1993',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T0',\n//   propertyPresence: 'Presence 1993',\n//   stops: stops\n// }, {\n//   name: '1994',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T1',\n//   stops: stops\n// }, {\n//   name: '1995',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T2',\n//   stops: stops\n// }, {\n//   name: '1996',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T3',\n//   stops: stops\n// }, {\n//   name: '1997',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T4',\n//   stops: stops\n// }, {\n//   name: '1998',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T5',\n//   stops: stops\n// }, {\n//   name: '1999',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T6',\n//   stops: stops\n// }, {\n//   name: '2000',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T7',\n//   stops: stops\n// }, {\n//   name: '2001',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T8',\n//   stops: stops\n// }, {\n//   name: '2002',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T9',\n//   stops: stops\n// }, {\n//   name: '2003',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T10',\n//   stops: stops\n// }, {\n//   name: '2004',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T11',\n//   stops: stops\n// }, {\n//   name: '2005',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T12',\n//   stops: stops\n// }, {\n//   name: '2006',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T13',\n//   stops: stops\n// }, {\n//   name: '2007',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T14',\n//   stops: stops\n// }, {\n//   name: '2008',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T15',\n//   stops: stops\n// }, {\n//   name: '2009',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T16',\n//   stops: stops\n// }, {\n//   name: '2010',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T17',\n//   stops: stops\n// }, {\n//   name: '2011',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T18',\n//   stops: stops\n// }, {\n//   name: '2012',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T19',\n//   stops: stops\n// }, {\n//   name: '2013',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T20',\n//   stops: stops\n// }, {\n//   name: '2014',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T21',\n//   stops: stops\n// }, {\n//   name: '2015',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T22',\n//   stops: stops\n// }, {\n//   name: '2016',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T23',\n//   stops: stops\n// }, {\n//   name: '2017',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T24',\n//   stops: stops\n// }, {\n//   name: '2018',\n//   description: 'Introduction Probability',\n//   property: 'Probability of introduction T25',\n//   propertyPresence: 'Presence 1993',\n//   stops: stops\n// }\n// ]\n\n// const markerList = [\n//   {\n//     name: \"title\",\n//     info: \"icon\"\n//   },\n//   {\n//     name: \"title\",\n//     info: \"icon\"\n//   },\n//   {\n//     name: \"title\",\n//     info: \"icon\"\n//   }\n// ];\n\n// // const presence_options = [{\n// //   name: '1993',\n// //   description: 'Presence',\n// //   property: 'Presence 1993'\n// // }, {\n// //   name: '1994',\n// //   description: 'Presence',\n// //   property: 'Presence 1994'\n// // }, {\n// //   name: '1995',\n// //   description: 'Presence',\n// //   property: 'Presence 1995'\n// // }, {\n// //   name: '1996',\n// //   description: 'Presence',\n// //   property: 'Presence 1996'\n// // }, {\n// //   name: '1997',\n// //   description: 'Presence',\n// //   property: 'Presence 1997'\n// // }, {\n// //   name: '1998',\n// //   description: 'Presence',\n// //   property: 'Presence 1998'\n// // }, {\n// //   name: '1999',\n// //   description: 'Presence',\n// //   property: 'Presence 1999'\n// // }, {\n// //   name: '2000',\n// //   description: 'Presence',\n// //   property: 'Presence 2000'\n// // }, {\n// //   name: '2001',\n// //   description: 'Presence',\n// //   property: 'Presence 2001'\n// // }, {\n// //   name: '2002',\n// //   description: 'Presence',\n// //   property: 'Presence 2002'\n// // }, {\n// //   name: '2003',\n// //   description: 'Presence',\n// //   property: 'Presence 2003'\n// // }, {\n// //   name: '2004',\n// //   description: 'Presence',\n// //   property: 'Presence 2004'\n// // }, {\n// //   name: '2005',\n// //   description: 'Presence',\n// //   property: 'Presence 2005'\n// // }, {\n// //   name: '2006',\n// //   description: 'Presence',\n// //   property: 'Presence 2006'\n// // }, {\n// //   name: '2007',\n// //   description: 'Presence',\n// //   property: 'Presence 2007'\n// // }, {\n// //   name: '2008',\n// //   description: 'Presence',\n// //   property: 'Presence 2008'\n// // }, {\n// //   name: '2009',\n// //   description: 'Presence',\n// //   property: 'Presence 2009'\n// // }, {\n// //   name: '2010',\n// //   description: 'Presence',\n// //   property: 'Presence 2010'\n// // }, {\n// //   name: '2011',\n// //   description: 'Presence',\n// //   property: 'Presence 2011'\n// // }, {\n// //   name: '2012',\n// //   description: 'Presence',\n// //   property: 'Presence 2012'\n// // }, {\n// //   name: '2013',\n// //   description: 'Presence',\n// //   property: 'Presence 2013'\n// // }, {\n// //   name: '2014',\n// //   description: 'Presence',\n// //   property: 'Presence 2014'\n// // }, {\n// //   name: '2015',\n// //   description: 'Presence',\n// //   property: 'Presence 2015'\n// // }, {\n// //   name: '2016',\n// //   description: 'Presence',\n// //   property: 'Presence 2016'\n// // }, {\n// //   name: '2017',\n// //   description: 'Presence',\n// //   property: 'Presence 2017'\n// // }, {\n// //   name: '2018',\n// //   description: 'Presence',\n// //   property: 'Presence 2018'\n// // }\n// // ]\n\n\n// const navStyle = {\n//   position: 'absolute',\n//   top: 0,\n//   left: 0,\n//   padding: '10px'\n// };\n\n// const CITIES =  {\n//   name: \"title\",\n//   info: \"icon\"\n// }\n\n\n// class App extends React.Component {\n//   mapRef = React.createRef();\n//   map;\n//   tooltipContainer;\n\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       active: options[0],\n//       // active: options_presence[0],\n//       year: 1993,\n//       data: null,\n//       hoveredFeature: null,\n//       viewport: {\n//         latitude: 40,\n//         longitude: -100,\n//         zoom: 3,\n//         bearing: 0,\n//         pitch: 0\n//       },\n//       // popupInfo: null\n//     };\n//     // this.renderPopup = this.renderPopup.bind(this)\n//     };\n\n\n//   componentDidUpdate() {\n//     this.setFill();\n//   }\n\n//   componentDidMount() {\n//     this.tooltipContainer = document.createElement('div');\n\n//     requestJson(\n//       'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/us-income.geojson',\n//       (error, response) => {\n//         if (!error) {\n//           this._loadData(response);\n//         }\n//       }\n//     );\n  \n//     this.map = new mapboxgl.Map({\n//       container: this.mapRef.current,\n//       style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax', // style: 'mapbox://styles/mapbox/dark-v10',\n//       center: [12, 26],\n//       zoom: 1.5,\n//     });\n\n//     this.map.on('load',  (e) => {\n//       this.map.addSource('countries', {\n//         type: 'geojson',\n//         data\n//       });\n\n//       this.map.addSource('presence_data', {\n//         type: 'geojson',\n//         presence_data\n//       });\n\n//       this.map.addLayer({\n//         id: 'countries',\n//         type: 'fill',\n//         source: 'countries'\n//       },'country-label'); \n\n//       this.map.addLayer({\n//         id: 'presence_data',\n//         interactive: true,\n//         type: \"symbol\",\n//         source: {\n//           \"type\": \"geojson\",\n//           \"data\": presence_data\n//         },\n//         layout: {\n//           'icon-image': \n//           ['concat', ['get', 'icon'], '-15'],\n//           'text-field': ['get', 'title'],\n//           'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n//           'text-offset': [0, 0.6],\n//           'text-anchor': 'top'\n//         }\n//       }); \n//       // this.\n//       this.map.on('styledata', function() {\n//         this.addLayer();\n//       });\n\n//       this.setFill();\n//       // const features = this.map.queryRenderedFeatures(e.point, {\n\n//       // pestMarker \n//       //   .setLngLat(e.lngLat)\n//       //   .setHTML('<b><u>Country Information' + '</b></u>' +\n//       //     '<ul>' +\n//       //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//       //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//       //     '</ul>')\n//       // .addTo(this.map);\n//       // // });\n//       // this.set\n//     });\n    \n//     const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n//       offset: [-120, 0]\n//     }).setLngLat([0,0]).addTo(this.map);\n\n//     var popup = new mapboxgl.Popup({\n//       closeButton: false,\n//       closeOnClick: false\n//       });\n\n//     var pestMarker = new mapboxgl.Marker({\n//       offset: [-120, 0]\n//     }).setLngLat([0,0]).addTo(this.map);\n//     console.log(pestMarker);\n\n\n//       this.map.on('mouseenter', 'countries', (e) => {\n//         this.map.getCanvas().style.cursor =  'pointer';\n//       });\n\n//       this.map.on('click', 'countries', (e) => {\n//         const features = this.map.queryRenderedFeatures(e.point, {\n       \n//       });\n\n//       const { name, description, stops, property } = this.state.active;\n\n//       const prob_intro = features[0].properties[property];\n\n//       this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n//       popup \n//       .setLngLat(e.lngLat)\n//       .setHTML('<b><u>Country Information' + '</b></u>' +\n//         '<ul>' +\n//         '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//         '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//         '</ul>')\n//     .addTo(this.map);\n//     });\n\n//     this.map.on('mouseleave', 'countries', (e) => {\n//       this.map.getCanvas().style.cursor =  '';\n//       popup.remove();\n//     });\n\n//   }\n\n\n//   _loadData = data => {\n//     this.map.setState({\n//       data: updatePercentiles(data, f => f.properties.income[this.state.year])\n//     });\n//   };\n\n//   _updateSettings = (name, value) => {\n//     if (name === 'year') {\n//       this.map.setState({year: value});\n\n//       const {data} = this.state;\n//       if (data) {\n//         // trigger update\n//         this.setState({\n//           data: updatePercentiles(data, f => f.properties.income[value])\n//         });\n//       }\n//     }\n//   };\n\n//   _onViewportChange = viewport => this.setState({viewport});\n\n//   _onHover = event => {\n//     const {\n//       features,\n//       srcEvent: {offsetX, offsetY}\n//     } = event;\n//     const hoveredFeature = features && features.find(f => f.layer.id === 'data');\n\n//     this.setState({hoveredFeature, x: offsetX, y: offsetY});\n//   };\n\n//   _renderTooltip() {\n//     const {hoveredFeature, x, y} = this.state;\n\n//     return (\n//       hoveredFeature && (\n//         <div className=\"tooltip\" style={{left: x, top: y}}>\n//           <div>State: {hoveredFeature.properties.name}</div>\n//           <div>Median Household Income: {hoveredFeature.properties.value}</div>\n//           <div>Percentile: {(hoveredFeature.properties.percentile / 8) * 100}</div>\n//         </div>\n//       )\n//     );\n//   }\n\n//   render() {\n//     const {viewport, data} = this.state;\n\n//     return (\n//       <div style={{height: '100%', position: 'relative'}}>\n//         <MapGL\n//           {...viewport}\n//           width=\"100%\"\n//           height=\"100%\"\n//           mapStyle=\"mapbox://styles/mapbox/light-v9\"\n//           onViewportChange={this._onViewportChange}\n//           mapboxApiAccessToken={MAPBOX_TOKEN}\n//           onHover={this._onHover}\n//         >\n//           <Source type=\"geojson\" data={data}>\n//             <Layer {...dataLayer} />\n//           </Source>\n//           {this._renderTooltip()}\n//         </MapGL>\n\n//         <ControlPanel\n//           containerComponent={this.props.containerComponent}\n//           settings={this.state}\n//           onChange={this._updateSettings}\n//         />\n//       </div>\n//     );\n//   }\n\n \n\n//   render() {\n//     const {viewport, data} = this.state;\n\n//     return (\n//       <div style={{height: '100%', position: 'relative'}}>\n//         <MapGL\n//           {...viewport}\n//           width=\"100%\"\n//           height=\"100%\"\n//           mapStyle=\"mapbox://styles/mapbox/light-v9\"\n//           onViewportChange={this._onViewportChange}\n//           mapboxApiAccessToken={MAPBOX_TOKEN}\n//           onHover={this._onHover}\n//         >\n//           <Source type=\"geojson\" data={data}>\n//             <Layer {...dataLayer} />\n//           </Source>\n//           {this._renderTooltip()}\n//         </MapGL>\n\n//         <ControlPanel\n//           containerComponent={this.props.containerComponent}\n//           settings={this.state}\n//           onChange={this._updateSettings}\n//         />\n//       </div>\n//     );\n//   }\n// // }\n\n//   setFill() {\n//     const { property, stops } = this.state.active;\n//     this.map.setPaintProperty('countries', 'fill-color', {\n//       property,\n//       stops\n//     },\n//     )\n//     this.map.setPaintProperty('countries', 'fill-outline-color', {\n//       property,\n//       stops\n//     })\n//     // this.map.setTooltip('presence_data', '', {\n//     //   property,\n//     //   stops\n//     // })  ;\n//   }\n\n//   // render() {\n//   //   const {viewport} = this.state;\n//   //   return (\n//   //     <GeoJSONLayer\n//   //       data={presence_data}\n//   //       type=\"symbol\"\n//   //       anchor=\"bottom-right\"\n//   //       longitude={this.state.popupInfo.state.longitude}\n//   //       latitude={this.state.popupInfo.state.latitude}\n//   //       onClose={() => this.setState({popupInfo: null})}\n//   //       closeOnClick={true}\n//   //       symbolLayout={{\n//   //         \"text-field\": \"{title}\",\n//   //         \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n//   //         \"text-offset\": [0, 0.6],\n//   //         \"text-anchor\": \"top\"\n//   //       }}/>\n//   //   );\n//   // }\n\n//   render() {\n//     const { name, description, stops, property } = this.state.active;\n//     const renderLegendKeys = (stop, i) => {\n//       return (\n//         <div key={i} className='txt-s '>\n//           <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n//           <span >{`${stop[0].toLocaleString()}`}</span>\n//         </div>\n//       );\n//     }\n\n   \n//     const renderOptions = (option, i) => {\n//       return (\n//         <label key={i} className=\"toggle-container  right  left px3 py3\">\n//           <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n//           <div  className=\"toggle grid txt-s color-white right   left toggle--active-white\">{option.name}</div>\n//         </label>\n//       );\n//     }\n\n//     return (\n//       <div>\n//         <div ref={this.mapRef} className=\"absolute top right left bottom align-middle grid\" />\n//         <label className=\"ctxt-bold color-white absolute mt6 ml12\" ><b>Select Year:</b></label>\n//         <div  className=\"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \">\n//           {options.map(renderOptions)}\n//         </div>\n//         <div  className=\" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \">\n//           <div className='mb6 color-white'>\n//             <h2 className=\"txt-bold txt-s block color-white\">{name}</h2>\n//             <p className='txt-s color-white'>{description}</p>\n//           </div>\n//           {stops.map(renderLegendKeys)}\n//         </div>\n//       </div>\n    \n\n//       // <MapGL\n//       //   {...viewport}\n//       //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n//       //   mapboxApiAccessToken={TOKEN} >\n//       //   {markers}\n//       //   {this.renderPopup()}\n//       //   <div className=\"nav\" style={navStyle}>\n//       //     <NavigationControl/>\n//       //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n//       //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n//       //     </Marker>\n//       //     </div>\n//       //   </div>\n//       // </MapGL>\n\n//       );\n      \n//   }\n// }\n\n// export default App;\n// export function renderToDom(container) {\n//   render(<App />, container);\n// }\n"]},"metadata":{},"sourceType":"module"}