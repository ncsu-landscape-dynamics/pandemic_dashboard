{"ast":null,"code":"/**\n * lodash 3.1.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\n\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\n\n\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n\n  return result;\n}\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\n\n\nvar getLength = baseProperty('length');\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\n\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = baseFlatten;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/lodash._baseflatten/index.js"],"names":["isArguments","require","isArray","isObjectLike","value","MAX_SAFE_INTEGER","arrayPush","array","values","index","length","offset","baseFlatten","isDeep","isStrict","result","isArrayLike","baseProperty","key","object","undefined","getLength","isLength","module","exports"],"mappings":"AAAA;;;;;;;;AAQA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAAzB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CADrB;AAGA;;;;;;;;;AAOA,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO,CAAC,CAACA,KAAF,IAAW,OAAOA,KAAP,IAAgB,QAAlC;AACD;AAED;;;;;;AAIA,IAAIC,gBAAgB,GAAG,gBAAvB;AAEA;;;;;;;;;AAQA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGF,MAAM,CAACE,MADpB;AAAA,MAEIC,MAAM,GAAGJ,KAAK,CAACG,MAFnB;;AAIA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvBH,IAAAA,KAAK,CAACI,MAAM,GAAGF,KAAV,CAAL,GAAwBD,MAAM,CAACC,KAAD,CAA9B;AACD;;AACD,SAAOF,KAAP;AACD;AAED;;;;;;;;;;;;;AAWA,SAASK,WAAT,CAAqBL,KAArB,EAA4BM,MAA5B,EAAoCC,QAApC,EAA8CC,MAA9C,EAAsD;AACpDA,EAAAA,MAAM,KAAKA,MAAM,GAAG,EAAd,CAAN;AAEA,MAAIN,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGH,KAAK,CAACG,MADnB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIN,KAAK,GAAGG,KAAK,CAACE,KAAD,CAAjB;;AACA,QAAIN,YAAY,CAACC,KAAD,CAAZ,IAAuBY,WAAW,CAACZ,KAAD,CAAlC,KACCU,QAAQ,IAAIZ,OAAO,CAACE,KAAD,CAAnB,IAA8BJ,WAAW,CAACI,KAAD,CAD1C,CAAJ,EACwD;AACtD,UAAIS,MAAJ,EAAY;AACV;AACAD,QAAAA,WAAW,CAACR,KAAD,EAAQS,MAAR,EAAgBC,QAAhB,EAA0BC,MAA1B,CAAX;AACD,OAHD,MAGO;AACLT,QAAAA,SAAS,CAACS,MAAD,EAASX,KAAT,CAAT;AACD;AACF,KARD,MAQO,IAAI,CAACU,QAAL,EAAe;AACpBC,MAAAA,MAAM,CAACA,MAAM,CAACL,MAAR,CAAN,GAAwBN,KAAxB;AACD;AACF;;AACD,SAAOW,MAAP;AACD;AAED;;;;;;;;;AAOA,SAASE,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAO,UAASC,MAAT,EAAiB;AACtB,WAAOA,MAAM,IAAI,IAAV,GAAiBC,SAAjB,GAA6BD,MAAM,CAACD,GAAD,CAA1C;AACD,GAFD;AAGD;AAED;;;;;;;;;;;;AAUA,IAAIG,SAAS,GAAGJ,YAAY,CAAC,QAAD,CAA5B;AAEA;;;;;;;;AAOA,SAASD,WAAT,CAAqBZ,KAArB,EAA4B;AAC1B,SAAOA,KAAK,IAAI,IAAT,IAAiBkB,QAAQ,CAACD,SAAS,CAACjB,KAAD,CAAV,CAAhC;AACD;AAED;;;;;;;;;;;AASA,SAASkB,QAAT,CAAkBlB,KAAlB,EAAyB;AACvB,SAAO,OAAOA,KAAP,IAAgB,QAAhB,IAA4BA,KAAK,GAAG,CAAC,CAArC,IAA0CA,KAAK,GAAG,CAAR,IAAa,CAAvD,IAA4DA,KAAK,IAAIC,gBAA5E;AACD;;AAEDkB,MAAM,CAACC,OAAP,GAAiBZ,WAAjB","sourcesContent":["/**\n * lodash 3.1.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    if (isObjectLike(value) && isArrayLike(value) &&\n        (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = baseFlatten;\n"]},"metadata":{},"sourceType":"script"}