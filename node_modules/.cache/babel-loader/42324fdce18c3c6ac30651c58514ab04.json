{"ast":null,"code":"'use strict';\n\nvar bindAll = require('lodash.bindall');\n\nvar transform = require('dom-transform');\n\nvar tinycolor = require('tinycolor2');\n\nvar Emitter = require('component-emitter');\n\nvar isNumber = require('is-number');\n\nvar clamp = require('./src/utils/maths/clamp');\n/**\n * Creates a new Colorpicker\n * @param {Object} options\n * @param {String|Number|Object} options.color The default color that the colorpicker will display. Default is #FFFFFF. It can be a hexadecimal number or an hex String.\n * @param {String|Number|Object} options.background The background color of the colorpicker. Default is transparent. It can be a hexadecimal number or an hex String.\n * @param {DomElement} options.el A dom node to add the colorpicker to. You can also use `colorPicker.appendTo(domNode)` afterwards if you prefer.\n * @param {Number} options.width Desired width of the color picker. Default is 175.\n * @param {Number} options.height Desired height of the color picker. Default is 150.\n */\n\n\nfunction SimpleColorPicker(options) {\n  // options\n  options = options || {}; // properties\n\n  this.color = null;\n  this.width = 0;\n  this.height = 0;\n  this.hue = 0;\n  this.choosing = false;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n  this.huePosition = 0;\n  this.saturationWidth = 0;\n  this.maxHue = 0;\n  this.inputIsNumber = false; // bind methods to scope (only if needed)\n\n  bindAll(this, '_onSaturationMouseMove', '_onSaturationMouseDown', '_onSaturationMouseUp', '_onHueMouseDown', '_onHueMouseUp', '_onHueMouseMove'); // create dom\n\n  this.$el = document.createElement('div');\n  this.$el.className = 'Scp';\n  this.$el.innerHTML = ['<div class=\"Scp-saturation\">', '<div class=\"Scp-brightness\"></div>', '<div class=\"Scp-sbSelector\"></div>', '</div>', '<div class=\"Scp-hue\">', '<div class=\"Scp-hSelector\"></div>', '</div>'].join('\\n'); // dom accessors\n\n  this.$saturation = this.$el.querySelector('.Scp-saturation');\n  this.$hue = this.$el.querySelector('.Scp-hue');\n  this.$sbSelector = this.$el.querySelector('.Scp-sbSelector');\n  this.$hSelector = this.$el.querySelector('.Scp-hSelector'); // event listeners\n\n  this.$saturation.addEventListener('mousedown', this._onSaturationMouseDown);\n  this.$saturation.addEventListener('touchstart', this._onSaturationMouseDown);\n  this.$hue.addEventListener('mousedown', this._onHueMouseDown);\n  this.$hue.addEventListener('touchstart', this._onHueMouseDown); // some styling and DOMing from options\n\n  if (options.el) {\n    this.appendTo(options.el);\n  }\n\n  if (options.background) {\n    this.setBackgroundColor(options.background);\n  }\n\n  this.setSize(options.width || 175, options.height || 150);\n  this.setColor(options.color);\n  return this;\n}\n\nEmitter(SimpleColorPicker.prototype);\n/* =============================================================================\n  Public API\n============================================================================= */\n\n/**\n * Add the colorPicker instance to a domElement.\n * @param  {domElement} domElement\n * @return {colorPicker} returns itself for chaining purpose\n */\n\nSimpleColorPicker.prototype.appendTo = function (domElement) {\n  domElement.appendChild(this.$el);\n  return this;\n};\n/**\n * Removes colorpicker from is parent and kill all listeners.\n * Call this method for proper destroy.\n */\n\n\nSimpleColorPicker.prototype.remove = function () {\n  this.$saturation.removeEventListener('mousedown', this._onSaturationMouseDown);\n  this.$saturation.removeEventListener('touchstart', this._onSaturationMouseDown);\n  this.$hue.removeEventListener('mousedown', this._onHueMouseDown);\n  this.$hue.removeEventListener('touchstart', this._onHueMouseDown);\n\n  this._onSaturationMouseUp();\n\n  this._onHueMouseUp();\n\n  this.off();\n\n  if (this.$el.parentNode) {\n    this.$el.parentNode.removeChild(this.$el);\n  }\n};\n/**\n * Manually set the current color of the colorpicker. This is the method\n * used on instantiation to convert `color` option to actual color for\n * the colorpicker. Param can be a hexadecimal number or an hex String.\n * @param {String|Number} color hex color desired\n */\n\n\nSimpleColorPicker.prototype.setColor = function (color) {\n  if (isNumber(color)) {\n    this.inputIsNumber = true;\n    color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n  } else {\n    this.inputIsNumber = false;\n  }\n\n  this.color = tinycolor(color);\n  var hsvColor = this.color.toHsv();\n\n  if (!isNaN(hsvColor.h)) {\n    this.hue = hsvColor.h;\n  }\n\n  this._moveSelectorTo(this.saturationWidth * hsvColor.s, (1 - hsvColor.v) * this.height);\n\n  this._moveHueTo((1 - this.hue / 360) * this.height);\n\n  this._updateHue();\n\n  return this;\n};\n/**\n * Set size of the color picker for a given width and height. Note that\n * a padding of 5px will be added if you chose to use the background option\n * of the constructor.\n * @param {Number} width\n * @param {Number} height\n */\n\n\nSimpleColorPicker.prototype.setSize = function (width, height) {\n  this.width = width;\n  this.height = height;\n  this.$el.style.width = this.width + 'px';\n  this.$el.style.height = this.height + 'px';\n  this.saturationWidth = this.width - 25;\n  this.maxHue = this.height - 2;\n  return this;\n};\n/**\n * Set the background color of the colorpicker. It also adds a 5px padding\n * for design purpose.\n * @param {String|Number} color hex color desired for background\n */\n\n\nSimpleColorPicker.prototype.setBackgroundColor = function (color) {\n  if (isNumber(color)) {\n    color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n  }\n\n  this.$el.style.padding = '5px';\n  this.$el.style.background = tinycolor(color).toHexString();\n};\n/**\n * Removes background of the colorpicker if previously set. It's no use\n * calling this method if you didn't set the background option on start\n * or if you didn't call setBackgroundColor previously.\n */\n\n\nSimpleColorPicker.prototype.setNoBackground = function () {\n  this.$el.style.padding = '0px';\n  this.$el.style.background = 'none';\n};\n/**\n * Registers callback to the update event of the colorpicker.\n * ColorPicker inherits from [component/emitter](https://github.com/component/emitter)\n * so you could do the same thing by calling `colorPicker.on('update');`\n * @param  {Function} callback\n * @return {colorPicker} returns itself for chaining purpose\n */\n\n\nSimpleColorPicker.prototype.onChange = function (callback) {\n  this.on('update', callback);\n  this.emit('update', this.getHexString());\n  return this;\n};\n/* =============================================================================\n  Color getters\n============================================================================= */\n\n/**\n * Main color getter, will return a formatted color string depending on input\n * or a number depending on the last setColor call.\n * @return {Number|String}\n */\n\n\nSimpleColorPicker.prototype.getColor = function () {\n  if (this.inputIsNumber) {\n    return this.getHexNumber();\n  }\n\n  return this.color.toString();\n};\n/**\n * Returns color as css hex string (ex: '#FF0000').\n * @return {String}\n */\n\n\nSimpleColorPicker.prototype.getHexString = function () {\n  return this.color.toHexString().toUpperCase();\n};\n/**\n * Returns color as number (ex: 0xFF0000).\n * @return {Number}\n */\n\n\nSimpleColorPicker.prototype.getHexNumber = function () {\n  return parseInt(this.color.toHex(), 16);\n};\n/**\n * Returns color as {r: 255, g: 0, b: 0} object.\n * @return {Object}\n */\n\n\nSimpleColorPicker.prototype.getRGB = function () {\n  return this.color.toRgb();\n};\n/**\n * Returns color as {h: 100, s: 1, v: 1} object.\n * @return {Object}\n */\n\n\nSimpleColorPicker.prototype.getHSV = function () {\n  return this.color.toHsv();\n};\n/**\n * Returns true if color is perceived as dark\n * @return {Boolean}\n */\n\n\nSimpleColorPicker.prototype.isDark = function () {\n  return this.color.isDark();\n};\n/**\n * Returns true if color is perceived as light\n * @return {Boolean}\n */\n\n\nSimpleColorPicker.prototype.isLight = function () {\n  return this.color.isLight();\n};\n/* =============================================================================\n  \"Private\" Methods LOL silly javascript\n============================================================================= */\n\n\nSimpleColorPicker.prototype._moveSelectorTo = function (x, y) {\n  this.position.x = clamp(x, 0, this.saturationWidth);\n  this.position.y = clamp(y, 0, this.height);\n  transform(this.$sbSelector, {\n    x: this.position.x,\n    y: this.position.y\n  });\n};\n\nSimpleColorPicker.prototype._updateColorFromPosition = function () {\n  this.color = tinycolor({\n    h: this.hue,\n    s: this.position.x / this.saturationWidth,\n    v: 1 - this.position.y / this.height\n  });\n\n  this._updateColor();\n};\n\nSimpleColorPicker.prototype._moveHueTo = function (y) {\n  this.huePosition = clamp(y, 0, this.maxHue);\n  transform(this.$hSelector, {\n    y: this.huePosition\n  });\n};\n\nSimpleColorPicker.prototype._updateHueFromPosition = function () {\n  var hsvColor = this.color.toHsv();\n  this.hue = 360 * (1 - this.huePosition / this.maxHue);\n  this.color = tinycolor({\n    h: this.hue,\n    s: hsvColor.s,\n    v: hsvColor.v\n  });\n\n  this._updateHue();\n};\n\nSimpleColorPicker.prototype._updateHue = function () {\n  var hueColor = tinycolor({\n    h: this.hue,\n    s: 1,\n    v: 1\n  });\n  this.$saturation.style.background = 'linear-gradient(to right, #fff 0%, ' + hueColor.toHexString() + ' 100%)';\n\n  this._updateColor();\n};\n\nSimpleColorPicker.prototype._updateColor = function () {\n  this.$sbSelector.style.background = this.color.toHexString();\n  this.$sbSelector.style.borderColor = this.color.isDark() ? '#FFF' : '#000';\n  this.emit('update', this.color.toHexString());\n};\n/* =============================================================================\n  Events handlers\n============================================================================= */\n\n\nSimpleColorPicker.prototype._onSaturationMouseDown = function (e) {\n  this.choosing = true;\n  var sbOffset = this.$saturation.getBoundingClientRect();\n  var xPos = e.type.indexOf('touch') === 0 ? e.touches[0].clientX : e.clientX;\n  var yPos = e.type.indexOf('touch') === 0 ? e.touches[0].clientY : e.clientY;\n\n  this._moveSelectorTo(xPos - sbOffset.left, yPos - sbOffset.top);\n\n  this._updateColorFromPosition();\n\n  window.addEventListener('mouseup', this._onSaturationMouseUp);\n  window.addEventListener('touchend', this._onSaturationMouseUp);\n  window.addEventListener('mousemove', this._onSaturationMouseMove);\n  window.addEventListener('touchmove', this._onSaturationMouseMove);\n  e.preventDefault();\n};\n\nSimpleColorPicker.prototype._onSaturationMouseMove = function (e) {\n  var sbOffset = this.$saturation.getBoundingClientRect();\n  var xPos = e.type.indexOf('touch') === 0 ? e.touches[0].clientX : e.clientX;\n  var yPos = e.type.indexOf('touch') === 0 ? e.touches[0].clientY : e.clientY;\n\n  this._moveSelectorTo(xPos - sbOffset.left, yPos - sbOffset.top);\n\n  this._updateColorFromPosition();\n};\n\nSimpleColorPicker.prototype._onSaturationMouseUp = function () {\n  this.choosing = false;\n  window.removeEventListener('mouseup', this._onSaturationMouseUp);\n  window.removeEventListener('touchend', this._onSaturationMouseUp);\n  window.removeEventListener('mousemove', this._onSaturationMouseMove);\n  window.removeEventListener('touchmove', this._onSaturationMouseMove);\n};\n\nSimpleColorPicker.prototype._onHueMouseDown = function (e) {\n  this.choosing = true;\n  var hOffset = this.$hue.getBoundingClientRect();\n  var yPos = e.type.indexOf('touch') === 0 ? e.touches[0].clientY : e.clientY;\n\n  this._moveHueTo(yPos - hOffset.top);\n\n  this._updateHueFromPosition();\n\n  window.addEventListener('mouseup', this._onHueMouseUp);\n  window.addEventListener('touchend', this._onHueMouseUp);\n  window.addEventListener('mousemove', this._onHueMouseMove);\n  window.addEventListener('touchmove', this._onHueMouseMove);\n  e.preventDefault();\n};\n\nSimpleColorPicker.prototype._onHueMouseMove = function (e) {\n  var hOffset = this.$hue.getBoundingClientRect();\n  var yPos = e.type.indexOf('touch') === 0 ? e.touches[0].clientY : e.clientY;\n\n  this._moveHueTo(yPos - hOffset.top);\n\n  this._updateHueFromPosition();\n};\n\nSimpleColorPicker.prototype._onHueMouseUp = function () {\n  this.choosing = false;\n  window.removeEventListener('mouseup', this._onHueMouseUp);\n  window.removeEventListener('touchend', this._onHueMouseUp);\n  window.removeEventListener('mousemove', this._onHueMouseMove);\n  window.removeEventListener('touchmove', this._onHueMouseMove);\n};\n\nmodule.exports = SimpleColorPicker;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/simple-color-picker/index.js"],"names":["bindAll","require","transform","tinycolor","Emitter","isNumber","clamp","SimpleColorPicker","options","color","width","height","hue","choosing","position","x","y","huePosition","saturationWidth","maxHue","inputIsNumber","$el","document","createElement","className","innerHTML","join","$saturation","querySelector","$hue","$sbSelector","$hSelector","addEventListener","_onSaturationMouseDown","_onHueMouseDown","el","appendTo","background","setBackgroundColor","setSize","setColor","prototype","domElement","appendChild","remove","removeEventListener","_onSaturationMouseUp","_onHueMouseUp","off","parentNode","removeChild","toString","substr","hsvColor","toHsv","isNaN","h","_moveSelectorTo","s","v","_moveHueTo","_updateHue","style","padding","toHexString","setNoBackground","onChange","callback","on","emit","getHexString","getColor","getHexNumber","toUpperCase","parseInt","toHex","getRGB","toRgb","getHSV","isDark","isLight","_updateColorFromPosition","_updateColor","_updateHueFromPosition","hueColor","borderColor","e","sbOffset","getBoundingClientRect","xPos","type","indexOf","touches","clientX","yPos","clientY","left","top","window","_onSaturationMouseMove","preventDefault","hOffset","_onHueMouseMove","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar bindAll = require('lodash.bindall');\nvar transform = require('dom-transform');\nvar tinycolor = require('tinycolor2');\nvar Emitter = require('component-emitter');\nvar isNumber = require('is-number');\nvar clamp = require('./src/utils/maths/clamp');\n\n/**\n * Creates a new Colorpicker\n * @param {Object} options\n * @param {String|Number|Object} options.color The default color that the colorpicker will display. Default is #FFFFFF. It can be a hexadecimal number or an hex String.\n * @param {String|Number|Object} options.background The background color of the colorpicker. Default is transparent. It can be a hexadecimal number or an hex String.\n * @param {DomElement} options.el A dom node to add the colorpicker to. You can also use `colorPicker.appendTo(domNode)` afterwards if you prefer.\n * @param {Number} options.width Desired width of the color picker. Default is 175.\n * @param {Number} options.height Desired height of the color picker. Default is 150.\n */\nfunction SimpleColorPicker(options) {\n  // options\n  options = options || {};\n\n  // properties\n  this.color = null;\n  this.width = 0;\n  this.height = 0;\n  this.hue = 0;\n  this.choosing = false;\n  this.position = {x: 0, y: 0};\n  this.huePosition = 0;\n  this.saturationWidth = 0;\n  this.maxHue = 0;\n  this.inputIsNumber = false;\n\n  // bind methods to scope (only if needed)\n  bindAll(this, '_onSaturationMouseMove', '_onSaturationMouseDown', '_onSaturationMouseUp', '_onHueMouseDown', '_onHueMouseUp', '_onHueMouseMove');\n\n  // create dom\n  this.$el = document.createElement('div');\n  this.$el.className = 'Scp';\n  this.$el.innerHTML = [\n    '<div class=\"Scp-saturation\">',\n      '<div class=\"Scp-brightness\"></div>',\n      '<div class=\"Scp-sbSelector\"></div>',\n    '</div>',\n    '<div class=\"Scp-hue\">',\n      '<div class=\"Scp-hSelector\"></div>',\n    '</div>'\n  ].join('\\n');\n\n  // dom accessors\n  this.$saturation = this.$el.querySelector('.Scp-saturation');\n  this.$hue = this.$el.querySelector('.Scp-hue');\n  this.$sbSelector = this.$el.querySelector('.Scp-sbSelector');\n  this.$hSelector = this.$el.querySelector('.Scp-hSelector');\n\n  // event listeners\n  this.$saturation.addEventListener('mousedown', this._onSaturationMouseDown);\n  this.$saturation.addEventListener('touchstart', this._onSaturationMouseDown);\n  this.$hue.addEventListener('mousedown', this._onHueMouseDown);\n  this.$hue.addEventListener('touchstart', this._onHueMouseDown);\n\n  // some styling and DOMing from options\n  if (options.el) {\n    this.appendTo(options.el);\n  }\n  if (options.background) {\n    this.setBackgroundColor(options.background);\n  }\n  this.setSize(options.width || 175, options.height || 150);\n  this.setColor(options.color);\n\n  return this;\n}\n\nEmitter(SimpleColorPicker.prototype);\n\n/* =============================================================================\n  Public API\n============================================================================= */\n/**\n * Add the colorPicker instance to a domElement.\n * @param  {domElement} domElement\n * @return {colorPicker} returns itself for chaining purpose\n */\nSimpleColorPicker.prototype.appendTo = function(domElement) {\n  domElement.appendChild(this.$el);\n  return this;\n};\n\n/**\n * Removes colorpicker from is parent and kill all listeners.\n * Call this method for proper destroy.\n */\nSimpleColorPicker.prototype.remove = function() {\n  this.$saturation.removeEventListener('mousedown', this._onSaturationMouseDown);\n  this.$saturation.removeEventListener('touchstart', this._onSaturationMouseDown);\n  this.$hue.removeEventListener('mousedown', this._onHueMouseDown);\n  this.$hue.removeEventListener('touchstart', this._onHueMouseDown);\n  this._onSaturationMouseUp();\n  this._onHueMouseUp();\n  this.off();\n  if (this.$el.parentNode) {\n    this.$el.parentNode.removeChild(this.$el);\n  }\n};\n\n/**\n * Manually set the current color of the colorpicker. This is the method\n * used on instantiation to convert `color` option to actual color for\n * the colorpicker. Param can be a hexadecimal number or an hex String.\n * @param {String|Number} color hex color desired\n */\nSimpleColorPicker.prototype.setColor = function(color) {\n  if(isNumber(color)) {\n    this.inputIsNumber = true;\n    color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n  }\n  else {\n    this.inputIsNumber = false;\n  }\n  this.color = tinycolor(color);\n\n  var hsvColor = this.color.toHsv();\n\n  if(!isNaN(hsvColor.h)) {\n    this.hue = hsvColor.h;\n  }\n\n  this._moveSelectorTo(this.saturationWidth * hsvColor.s, (1 - hsvColor.v) * this.height);\n  this._moveHueTo((1 - (this.hue / 360)) * this.height);\n\n  this._updateHue();\n  return this;\n};\n\n/**\n * Set size of the color picker for a given width and height. Note that\n * a padding of 5px will be added if you chose to use the background option\n * of the constructor.\n * @param {Number} width\n * @param {Number} height\n */\nSimpleColorPicker.prototype.setSize = function(width, height) {\n  this.width = width;\n  this.height = height;\n  this.$el.style.width = this.width + 'px';\n  this.$el.style.height = this.height + 'px';\n  this.saturationWidth = this.width - 25;\n  this.maxHue = this.height - 2;\n  return this;\n};\n\n/**\n * Set the background color of the colorpicker. It also adds a 5px padding\n * for design purpose.\n * @param {String|Number} color hex color desired for background\n */\nSimpleColorPicker.prototype.setBackgroundColor = function(color) {\n  if(isNumber(color)) {\n    color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\n  }\n  this.$el.style.padding = '5px';\n  this.$el.style.background = tinycolor(color).toHexString();\n};\n\n/**\n * Removes background of the colorpicker if previously set. It's no use\n * calling this method if you didn't set the background option on start\n * or if you didn't call setBackgroundColor previously.\n */\nSimpleColorPicker.prototype.setNoBackground = function() {\n  this.$el.style.padding = '0px';\n  this.$el.style.background = 'none';\n};\n\n/**\n * Registers callback to the update event of the colorpicker.\n * ColorPicker inherits from [component/emitter](https://github.com/component/emitter)\n * so you could do the same thing by calling `colorPicker.on('update');`\n * @param  {Function} callback\n * @return {colorPicker} returns itself for chaining purpose\n */\nSimpleColorPicker.prototype.onChange = function(callback) {\n  this.on('update', callback);\n  this.emit('update', this.getHexString());\n  return this;\n};\n\n/* =============================================================================\n  Color getters\n============================================================================= */\n/**\n * Main color getter, will return a formatted color string depending on input\n * or a number depending on the last setColor call.\n * @return {Number|String}\n */\nSimpleColorPicker.prototype.getColor = function() {\n  if(this.inputIsNumber) {\n    return this.getHexNumber();\n  }\n  return this.color.toString();\n};\n\n/**\n * Returns color as css hex string (ex: '#FF0000').\n * @return {String}\n */\nSimpleColorPicker.prototype.getHexString = function() {\n  return this.color.toHexString().toUpperCase();\n};\n\n/**\n * Returns color as number (ex: 0xFF0000).\n * @return {Number}\n */\nSimpleColorPicker.prototype.getHexNumber = function() {\n  return parseInt(this.color.toHex(), 16);\n};\n\n/**\n * Returns color as {r: 255, g: 0, b: 0} object.\n * @return {Object}\n */\nSimpleColorPicker.prototype.getRGB = function() {\n  return this.color.toRgb();\n};\n\n/**\n * Returns color as {h: 100, s: 1, v: 1} object.\n * @return {Object}\n */\nSimpleColorPicker.prototype.getHSV = function() {\n  return this.color.toHsv();\n};\n\n/**\n * Returns true if color is perceived as dark\n * @return {Boolean}\n */\nSimpleColorPicker.prototype.isDark = function() {\n  return this.color.isDark();\n};\n\n/**\n * Returns true if color is perceived as light\n * @return {Boolean}\n */\nSimpleColorPicker.prototype.isLight = function() {\n  return this.color.isLight();\n};\n\n/* =============================================================================\n  \"Private\" Methods LOL silly javascript\n============================================================================= */\nSimpleColorPicker.prototype._moveSelectorTo = function(x, y) {\n  this.position.x = clamp(x, 0, this.saturationWidth);\n  this.position.y = clamp(y, 0, this.height);\n\n  transform(this.$sbSelector, {\n    x: this.position.x,\n    y: this.position.y\n  });\n\n};\n\nSimpleColorPicker.prototype._updateColorFromPosition = function() {\n  this.color = tinycolor({h: this.hue, s: this.position.x / this.saturationWidth, v: 1 - (this.position.y / this.height)});\n  this._updateColor();\n};\n\nSimpleColorPicker.prototype._moveHueTo = function(y) {\n  this.huePosition = clamp(y, 0, this.maxHue);\n\n  transform(this.$hSelector, {\n    y: this.huePosition\n  });\n\n};\n\nSimpleColorPicker.prototype._updateHueFromPosition = function() {\n  var hsvColor = this.color.toHsv();\n  this.hue = 360 * (1 - (this.huePosition / this.maxHue));\n  this.color = tinycolor({h: this.hue, s: hsvColor.s, v: hsvColor.v});\n  this._updateHue();\n};\n\nSimpleColorPicker.prototype._updateHue = function() {\n  var hueColor = tinycolor({h: this.hue, s: 1, v: 1});\n  this.$saturation.style.background = 'linear-gradient(to right, #fff 0%, ' + hueColor.toHexString() + ' 100%)';\n  this._updateColor();\n};\n\nSimpleColorPicker.prototype._updateColor = function() {\n  this.$sbSelector.style.background = this.color.toHexString();\n  this.$sbSelector.style.borderColor = this.color.isDark() ? '#FFF' : '#000';\n  this.emit('update', this.color.toHexString());\n};\n\n/* =============================================================================\n  Events handlers\n============================================================================= */\nSimpleColorPicker.prototype._onSaturationMouseDown = function(e) {\n  this.choosing = true;\n  var sbOffset = this.$saturation.getBoundingClientRect();\n  var xPos = (e.type.indexOf('touch') === 0) ? e.touches[0].clientX : e.clientX;\n  var yPos = (e.type.indexOf('touch') === 0) ? e.touches[0].clientY : e.clientY;\n  this._moveSelectorTo(xPos - sbOffset.left, yPos - sbOffset.top);\n  this._updateColorFromPosition();\n  window.addEventListener('mouseup', this._onSaturationMouseUp);\n  window.addEventListener('touchend', this._onSaturationMouseUp);\n  window.addEventListener('mousemove', this._onSaturationMouseMove);\n  window.addEventListener('touchmove', this._onSaturationMouseMove);\n  e.preventDefault();\n};\n\nSimpleColorPicker.prototype._onSaturationMouseMove = function(e) {\n  var sbOffset = this.$saturation.getBoundingClientRect();\n  var xPos = (e.type.indexOf('touch') === 0) ? e.touches[0].clientX : e.clientX;\n  var yPos = (e.type.indexOf('touch') === 0) ? e.touches[0].clientY : e.clientY;\n  this._moveSelectorTo(xPos - sbOffset.left, yPos - sbOffset.top);\n  this._updateColorFromPosition();\n};\n\nSimpleColorPicker.prototype._onSaturationMouseUp = function() {\n  this.choosing = false;\n  window.removeEventListener('mouseup', this._onSaturationMouseUp);\n  window.removeEventListener('touchend', this._onSaturationMouseUp);\n  window.removeEventListener('mousemove', this._onSaturationMouseMove);\n  window.removeEventListener('touchmove', this._onSaturationMouseMove);\n};\n\nSimpleColorPicker.prototype._onHueMouseDown = function(e) {\n  this.choosing = true;\n  var hOffset = this.$hue.getBoundingClientRect();\n  var yPos = (e.type.indexOf('touch') === 0) ? e.touches[0].clientY : e.clientY;\n  this._moveHueTo(yPos - hOffset.top);\n  this._updateHueFromPosition();\n  window.addEventListener('mouseup', this._onHueMouseUp);\n  window.addEventListener('touchend', this._onHueMouseUp);\n  window.addEventListener('mousemove', this._onHueMouseMove);\n  window.addEventListener('touchmove', this._onHueMouseMove);\n  e.preventDefault();\n};\n\nSimpleColorPicker.prototype._onHueMouseMove = function(e) {\n  var hOffset = this.$hue.getBoundingClientRect();\n  var yPos = (e.type.indexOf('touch') === 0) ? e.touches[0].clientY : e.clientY;\n  this._moveHueTo(yPos - hOffset.top);\n  this._updateHueFromPosition();\n};\n\nSimpleColorPicker.prototype._onHueMouseUp = function() {\n  this.choosing = false;\n  window.removeEventListener('mouseup', this._onHueMouseUp);\n  window.removeEventListener('touchend', this._onHueMouseUp);\n  window.removeEventListener('mousemove', this._onHueMouseMove);\n  window.removeEventListener('touchmove', this._onHueMouseMove);\n};\n\nmodule.exports = SimpleColorPicker;\n"]},"metadata":{},"sourceType":"script"}