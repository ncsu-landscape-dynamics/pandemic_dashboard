{"ast":null,"code":"import * as Constants from '../constants';\nexport function isOfMetaType(type) {\n  return function (e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE && e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE && e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\nexport function isTrue() {\n  return true;\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-gl-draw/src/lib/common_selectors.js"],"names":["Constants","isOfMetaType","type","e","featureTarget","properties","meta","isShiftMousedown","originalEvent","shiftKey","button","isActiveFeature","active","activeStates","ACTIVE","FEATURE","isInactiveFeature","INACTIVE","noTarget","undefined","isFeature","isVertex","VERTEX","isShiftDown","isEscapeKey","keyCode","isEnterKey","isTrue"],"mappings":"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","sourcesContent":["import * as Constants from '../constants';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}