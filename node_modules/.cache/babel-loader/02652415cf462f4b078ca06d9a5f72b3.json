{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { getDeckInstance, addLayer, removeLayer, updateLayer, drawLayer } from './deck-utils';\n\nvar MapboxLayer = function () {\n  function MapboxLayer(props) {\n    _classCallCheck(this, MapboxLayer);\n\n    if (!props.id) {\n      throw new Error('Layer must have an unique id');\n    }\n\n    this.id = props.id;\n    this.type = 'custom';\n    this.renderingMode = props.renderingMode || '3d';\n    this.map = null;\n    this.deck = null;\n    this.props = props;\n  }\n\n  _createClass(MapboxLayer, [{\n    key: \"onAdd\",\n    value: function onAdd(map, gl) {\n      this.map = map;\n      this.deck = getDeckInstance({\n        map: map,\n        gl: gl,\n        deck: this.props.deck\n      });\n      addLayer(this.deck, this);\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {\n      removeLayer(this.deck, this);\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      Object.assign(this.props, props, {\n        id: this.id\n      });\n\n      if (this.deck) {\n        updateLayer(this.deck, this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(gl, matrix) {\n      drawLayer(this.deck, this.map, this);\n    }\n  }]);\n\n  return MapboxLayer;\n}();\n\nexport { MapboxLayer as default };","map":{"version":3,"sources":["../../src/mapbox-layer.js"],"names":["MapboxLayer","props","map","gl","getDeckInstance","deck","addLayer","removeLayer","Object","id","updateLayer","matrix","drawLayer"],"mappings":";;AAAA,SAAA,eAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,QAAA,cAAA;;IAEqBA,W;AAEnB,WAAA,WAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;;AACjB,QAAI,CAACC,KAAK,CAAV,EAAA,EAAe;AACb,YAAM,IAAA,KAAA,CAAN,8BAAM,CAAN;AACD;;AAED,SAAA,EAAA,GAAUA,KAAK,CAAf,EAAA;AACA,SAAA,IAAA,GAAA,QAAA;AACA,SAAA,aAAA,GAAqBA,KAAK,CAALA,aAAAA,IAArB,IAAA;AACA,SAAA,GAAA,GAAA,IAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACD;;;;0BAIKC,G,EAAKC,E,EAAI;AACb,WAAA,GAAA,GAAA,GAAA;AACA,WAAA,IAAA,GAAYC,eAAe,CAAC;AAACF,QAAAA,GAAG,EAAJ,GAAA;AAAMC,QAAAA,EAAE,EAAR,EAAA;AAAUE,QAAAA,IAAI,EAAE,KAAA,KAAA,CAAWA;AAA3B,OAAD,CAA3B;AACAC,MAAAA,QAAQ,CAAC,KAAD,IAAA,EAARA,IAAQ,CAARA;AACD;;;+BAEU;AACTC,MAAAA,WAAW,CAAC,KAAD,IAAA,EAAXA,IAAW,CAAXA;AACD;;;6BAEQN,K,EAAO;AAEdO,MAAAA,MAAM,CAANA,MAAAA,CAAc,KAAdA,KAAAA,EAAAA,KAAAA,EAAiC;AAACC,QAAAA,EAAE,EAAE,KAAKA;AAAV,OAAjCD;;AAEA,UAAI,KAAJ,IAAA,EAAe;AACbE,QAAAA,WAAW,CAAC,KAAD,IAAA,EAAXA,IAAW,CAAXA;AACD;AACF;;;2BAEMP,E,EAAIQ,M,EAAQ;AACjBC,MAAAA,SAAS,CAAC,KAAD,IAAA,EAAY,KAAZ,GAAA,EAATA,IAAS,CAATA;AACD;;;;;;SAtCkBZ,W","sourcesContent":["import {getDeckInstance, addLayer, removeLayer, updateLayer, drawLayer} from './deck-utils';\n\nexport default class MapboxLayer {\n  /* eslint-disable no-this-before-super */\n  constructor(props) {\n    if (!props.id) {\n      throw new Error('Layer must have an unique id');\n    }\n\n    this.id = props.id;\n    this.type = 'custom';\n    this.renderingMode = props.renderingMode || '3d';\n    this.map = null;\n    this.deck = null;\n    this.props = props;\n  }\n\n  /* Mapbox custom layer methods */\n\n  onAdd(map, gl) {\n    this.map = map;\n    this.deck = getDeckInstance({map, gl, deck: this.props.deck});\n    addLayer(this.deck, this);\n  }\n\n  onRemove() {\n    removeLayer(this.deck, this);\n  }\n\n  setProps(props) {\n    // id cannot be changed\n    Object.assign(this.props, props, {id: this.id});\n    // safe guard in case setProps is called before onAdd\n    if (this.deck) {\n      updateLayer(this.deck, this);\n    }\n  }\n\n  render(gl, matrix) {\n    drawLayer(this.deck, this.map, this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}