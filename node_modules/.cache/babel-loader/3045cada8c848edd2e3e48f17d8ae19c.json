{"ast":null,"code":"import React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport data from './pandemic_output.json';\nimport presence_data from './presence_pandemic.json';\nimport Tooltip from './components/tooltip';\nimport ReactDOM from 'react-dom';\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw'; // var draw;\n\nvar stops = [[0, 'rgba(45,69,132, 0.4)'], [0.1, 'rgba(77,30,129, 0.4)'], [0.2, 'rgba(109,41,126, 0.4)'], [0.3, 'rgba(141,52,123, 0.4)'], [0.4, 'rgba(173,63,120, 0.4)'], [0.5, 'rgba(205,74,118, 0.4)'], [0.6, 'rgba(210,103,103\t, 0.4)'], [0.7, 'rgba(216,132,89,0.7)'], [0.8, 'rgba(222,161,75, 0.4)'], [0.9, 'rgba(228,190,61, 0.4)'], [1, 'rgba(240,249,33, 0.4)']];\nconst options = [{\n  name: '1993',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T0',\n  stops: stops\n}, {\n  name: '1994',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T1',\n  stops: stops\n}, {\n  name: '1995',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T2',\n  stops: stops\n}, {\n  name: '1996',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T3',\n  stops: stops\n}, {\n  name: '1997',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T4',\n  stops: stops\n}, {\n  name: '1998',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T5',\n  stops: stops\n}, {\n  name: '1999',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T6',\n  stops: stops\n}, {\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T7',\n  stops: stops\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T8',\n  stops: stops\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T9',\n  stops: stops\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T10',\n  stops: stops\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T11',\n  stops: stops\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T12',\n  stops: stops\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T13',\n  stops: stops\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T14',\n  stops: stops\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T15',\n  stops: stops\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T16',\n  stops: stops\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T17',\n  stops: stops\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T18',\n  stops: stops\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T19',\n  stops: stops\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T20',\n  stops: stops\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T21',\n  stops: stops\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T22',\n  stops: stops\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T23',\n  stops: stops\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T24',\n  stops: stops\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T25',\n  propertyPresence: 'Presence 1993',\n  stops: stops\n}]; // const presence_options = [{\n//   name: '1993',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1994',\n//   description: 'Presence',\n//   property: 'Presence 1994'\n// }, {\n//   name: '1995',\n//   description: 'Presence',\n//   property: 'Presence 1995'\n// }, {\n//   name: '1996',\n//   description: 'Presence',\n//   property: 'Presence 1996'\n// }, {\n//   name: '1997',\n//   description: 'Presence',\n//   property: 'Presence 1997'\n// }, {\n//   name: '1998',\n//   description: 'Presence',\n//   property: 'Presence 1998'\n// }, {\n//   name: '1999',\n//   description: 'Presence',\n//   property: 'Presence 1999'\n// }, {\n//   name: '2000',\n//   description: 'Presence',\n//   property: 'Presence 2000'\n// }, {\n//   name: '2001',\n//   description: 'Presence',\n//   property: 'Presence 2001'\n// }, {\n//   name: '2002',\n//   description: 'Presence',\n//   property: 'Presence 2002'\n// }, {\n//   name: '2003',\n//   description: 'Presence',\n//   property: 'Presence 2003'\n// }, {\n//   name: '2004',\n//   description: 'Presence',\n//   property: 'Presence 2004'\n// }, {\n//   name: '2005',\n//   description: 'Presence',\n//   property: 'Presence 2005'\n// }, {\n//   name: '2006',\n//   description: 'Presence',\n//   property: 'Presence 2006'\n// }, {\n//   name: '2007',\n//   description: 'Presence',\n//   property: 'Presence 2007'\n// }, {\n//   name: '2008',\n//   description: 'Presence',\n//   property: 'Presence 2008'\n// }, {\n//   name: '2009',\n//   description: 'Presence',\n//   property: 'Presence 2009'\n// }, {\n//   name: '2010',\n//   description: 'Presence',\n//   property: 'Presence 2010'\n// }, {\n//   name: '2011',\n//   description: 'Presence',\n//   property: 'Presence 2011'\n// }, {\n//   name: '2012',\n//   description: 'Presence',\n//   property: 'Presence 2012'\n// }, {\n//   name: '2013',\n//   description: 'Presence',\n//   property: 'Presence 2013'\n// }, {\n//   name: '2014',\n//   description: 'Presence',\n//   property: 'Presence 2014'\n// }, {\n//   name: '2015',\n//   description: 'Presence',\n//   property: 'Presence 2015'\n// }, {\n//   name: '2016',\n//   description: 'Presence',\n//   property: 'Presence 2016'\n// }, {\n//   name: '2017',\n//   description: 'Presence',\n//   property: 'Presence 2017'\n// }, {\n//   name: '2018',\n//   description: 'Presence',\n//   property: 'Presence 2018'\n// }\n// ]\n// class App extends React.Component {\n//   mapRef = React.createRef();\n//   map;\n//   tooltipContainer;\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       active: options[0],\n//       fitBounds: undefined,\n//       center: [-0.109970527, 51.52916347],\n//       zoom: [11],\n//       // active: options_presence[0],\n//       // year: 1993,\n//       // data: null,\n//       hoveredFeature: null,\n//       viewport: {\n//         latitude: 40,\n//         longitude: -100,\n//         zoom: 3,\n//         bearing: 0,\n//         pitch: 0\n//       },\n//       // popupInfo: null\n//     };\n//     this.renderPopup = this.renderPopup.bind(this)\n//     };\n//   componentDidUpdate() {\n//     this.setFill();\n//   }\n//   componentDidMount() {\n//     this.tooltipContainer = document.createElement('div');\n//     this.map = new mapboxgl.Map({\n//       container: this.mapRef.current,\n//       style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax', // style: 'mapbox://styles/mapbox/dark-v10',\n//       center: [12, 26],\n//       zoom: 1.5,\n//     });\n//     this.map.on('load',  (e) => {\n//       this.map.addSource('countries', {\n//         type: 'geojson',\n//         data\n//       });\n//       this.map.addSource('presence_data', {\n//         type: 'geojson',\n//         presence_data\n//       });\n//       this.map.addLayer({\n//         id: 'countries',\n//         type: 'fill',\n//         source: 'countries'\n//       },'country-label'); \n//       this.map.addLayer({\n//         id: 'presence_data',\n//         interactive: true,\n//         type: \"symbol\",\n//         source: {\n//           \"type\": \"geojson\",\n//           \"data\": presence_data\n//         },\n//         layout: {\n//           'icon-image': \n//           ['concat', ['get', 'icon'], '-15'],\n//           'text-field': ['get', 'title'],\n//           'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n//           'text-offset': [0, 0.6],\n//           'text-anchor': 'top'\n//         }\n//       }); \n//       // this.\n//       this.setFill();\n//       console.log(presence_data.features);\n//       // const features = this.map.queryRenderedFeatures(e.point, {\n//       // pestMarker \n//       //   .setLngLat(e.lngLat)\n//       //   .setHTML('<b><u>Country Information' + '</b></u>' +\n//       //     '<ul>' +\n//       //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//       //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//       //     '</ul>')\n//       // .addTo(this.map);\n//       // // });\n//       // this.set\n//     });\n//     const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n//       offset: [-120, 0]\n//     }).setLngLat([0,0]).addTo(this.map);\n//     var popup = new mapboxgl.Popup({\n//       closeButton: false,\n//       closeOnClick: false\n//       });\n//     // var pestMarker = new mapboxgl.Marker({\n//     //   offset: [-120, 0]\n//     // }).setLngLat([0,0]).addTo(this.map);\n//     this.map.on('mouseenter', 'presence_data', (e) => {\n//       const presence_features = this.map.queryRenderedFeatures(e.point, {\n//     });\n//     console.log(presence_features)\n//       this.map.on('mouseenter', 'countries', (e) => {\n//         this.map.getCanvas().style.cursor =  'pointer';\n//       });\n//       this.map.on('click', 'countries', (e) => {\n//         const features = this.map.queryRenderedFeatures(e.point, {\n//       });\n//       const { name, description, stops, property } = this.state.active;\n//       const prob_intro = features[0].properties[property];\n//       this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n//       popup \n//       .setLngLat(e.lngLat)\n//       .setHTML('<b><u>Country Information' + '</b></u>' +\n//         '<ul>' +\n//         '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//         '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//         '</ul>')\n//     .addTo(this.map);\n//     });\n//     // presence_data.features.forEach(function(marker) {\n//     //   // create a HTML element for each feature\n//     //   var el = document.createElement('div');\n//     //   el.className = 'marker';\n//     //   // make a marker for each feature and add to the map\n//     //   var pestMarker = new mapboxgl.Marker(el)\n//     //     .setLngLat(marker.geometry.coordinates)\n//     //     .addTo(this.map);\n//     // });\n//     this.map.on('mouseleave', 'countries', (e) => {\n//       this.map.getCanvas().style.cursor =  '';\n//       popup.remove();\n//     });\n//   //   let marker;\n//   //   const { coordinates } = presence_data.this.state.active;\n//   //   if (this.map) {\n//   //     marker = <Marker coordinates={coordinates} map={this.map} />;\n//   })\n//   setFill() {\n//     const { property, stops } = this.state.active;\n//     this.map.setPaintProperty('countries', 'fill-color', {\n//       property,\n//       stops\n//     },\n//     )\n//     this.map.setPaintProperty('countries', 'fill-outline-color', {\n//       property,\n//       stops\n//     })\n//     // this.map.setTooltip('presence_data', '', {\n//     //   property,\n//     //   stops\n//     // })  ;\n//   }\n//   // set\n//   // render() {\n//   //   const {viewport} = this.state;\n//   //   return (\n//   //     <GeoJSONLayer\n//   //       data={presence_data}\n//   //       type=\"symbol\"\n//   //       anchor=\"bottom-right\"\n//   //       longitude={this.state.popupInfo.state.longitude}\n//   //       latitude={this.state.popupInfo.state.latitude}\n//   //       onClose={() => this.setState({popupInfo: null})}\n//   //       closeOnClick={true}\n//   //       symbolLayout={{\n//   //         \"text-field\": \"{title}\",\n//   //         \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n//   //         \"text-offset\": [0, 0.6],\n//   //         \"text-anchor\": \"top\"\n//   //       }}/>\n//   //   );\n//   // }\n//   render() {\n//     const { name, description, stops, property } = this.state.active;\n//     const renderLegendKeys = (stop, i) => {\n//       return (\n//         <div key={i} className='txt-s '>\n//           <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n//           <span >{`${stop[0].toLocaleString()}`}</span>\n//         </div>\n//       );\n//     }\n//     const renderOptions = (option, i) => {\n//       return (\n//         <label key={i} className=\"toggle-container  right  left px3 py3\">\n//           <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n//           <div  className=\"toggle grid txt-s color-white right   left toggle--active-white\">{option.name}</div>\n//         </label>\n//       );\n//     }\n//     return (\n//       <div>\n//         <div ref={this.mapRef} className=\"absolute top right left bottom align-middle grid\" />\n//         <label className=\"ctxt-bold color-white absolute mt6 ml12\" ><b>Select Year:</b></label>\n//         <div  className=\"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \">\n//           {options.map(renderOptions)}\n//         </div>\n//         <div  className=\" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \">\n//           <div className='mb6 color-white'>\n//             <h2 className=\"txt-bold txt-s block color-white\">{name}</h2>\n//             <p className='txt-s color-white'>{description}</p>\n//           </div>\n//           {stops.map(renderLegendKeys)}\n//         </div>\n//       </div>\n//       // <MapGL\n//       //   {...viewport}\n//       //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n//       //   mapboxApiAccessToken={TOKEN} >\n//       //   {markers}\n//       //   {this.renderPopup()}\n//       //   <div className=\"nav\" style={navStyle}>\n//       //     <NavigationControl/>\n//       //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n//       //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n//       //     </Marker>\n//       //     </div>\n//       //   </div>\n//       // </MapGL>\n//       );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/src/App.js"],"names":["React","mapboxgl","data","presence_data","Tooltip","ReactDOM","accessToken","MAPBOX_TOKEN","stops","options","name","description","property","propertyPresence"],"mappings":"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":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl'\nimport data from './pandemic_output.json'\nimport presence_data from './presence_pandemic.json'\nimport Tooltip from './components/tooltip'\nimport ReactDOM from 'react-dom'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n\n// var draw;\nvar stops =  [\n  [0, 'rgba(45,69,132, 0.4)'],\t\n  [0.1, 'rgba(77,30,129, 0.4)'],\t\n  [0.2, 'rgba(109,41,126, 0.4)'],\t\t\t\n  [0.3, 'rgba(141,52,123, 0.4)'], \n  [0.4, 'rgba(173,63,120, 0.4)'],\t\n  [0.5, 'rgba(205,74,118, 0.4)'], \n  [0.6, 'rgba(210,103,103\t, 0.4)'],\t\t\n  [0.7, 'rgba(216,132,89,0.7)'], \n  [0.8, 'rgba(222,161,75, 0.4)'],\t\n  [0.9, 'rgba(228,190,61, 0.4)'],\n  [1, 'rgba(240,249,33, 0.4)']\n]\n\nconst options = [{\n  name: '1993',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T0',\n  stops: stops\n}, {\n  name: '1994',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T1',\n  stops: stops\n}, {\n  name: '1995',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T2',\n  stops: stops\n}, {\n  name: '1996',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T3',\n  stops: stops\n}, {\n  name: '1997',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T4',\n  stops: stops\n}, {\n  name: '1998',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T5',\n  stops: stops\n}, {\n  name: '1999',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T6',\n  stops: stops\n}, {\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T7',\n  stops: stops\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T8',\n  stops: stops\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T9',\n  stops: stops\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T10',\n  stops: stops\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T11',\n  stops: stops\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T12',\n  stops: stops\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T13',\n  stops: stops\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T14',\n  stops: stops\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T15',\n  stops: stops\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T16',\n  stops: stops\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T17',\n  stops: stops\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T18',\n  stops: stops\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T19',\n  stops: stops\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T20',\n  stops: stops\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T21',\n  stops: stops\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T22',\n  stops: stops\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T23',\n  stops: stops\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T24',\n  stops: stops\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T25',\n  propertyPresence: 'Presence 1993',\n  stops: stops\n}\n]\n\n// const presence_options = [{\n//   name: '1993',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1994',\n//   description: 'Presence',\n//   property: 'Presence 1994'\n// }, {\n//   name: '1995',\n//   description: 'Presence',\n//   property: 'Presence 1995'\n// }, {\n//   name: '1996',\n//   description: 'Presence',\n//   property: 'Presence 1996'\n// }, {\n//   name: '1997',\n//   description: 'Presence',\n//   property: 'Presence 1997'\n// }, {\n//   name: '1998',\n//   description: 'Presence',\n//   property: 'Presence 1998'\n// }, {\n//   name: '1999',\n//   description: 'Presence',\n//   property: 'Presence 1999'\n// }, {\n//   name: '2000',\n//   description: 'Presence',\n//   property: 'Presence 2000'\n// }, {\n//   name: '2001',\n//   description: 'Presence',\n//   property: 'Presence 2001'\n// }, {\n//   name: '2002',\n//   description: 'Presence',\n//   property: 'Presence 2002'\n// }, {\n//   name: '2003',\n//   description: 'Presence',\n//   property: 'Presence 2003'\n// }, {\n//   name: '2004',\n//   description: 'Presence',\n//   property: 'Presence 2004'\n// }, {\n//   name: '2005',\n//   description: 'Presence',\n//   property: 'Presence 2005'\n// }, {\n//   name: '2006',\n//   description: 'Presence',\n//   property: 'Presence 2006'\n// }, {\n//   name: '2007',\n//   description: 'Presence',\n//   property: 'Presence 2007'\n// }, {\n//   name: '2008',\n//   description: 'Presence',\n//   property: 'Presence 2008'\n// }, {\n//   name: '2009',\n//   description: 'Presence',\n//   property: 'Presence 2009'\n// }, {\n//   name: '2010',\n//   description: 'Presence',\n//   property: 'Presence 2010'\n// }, {\n//   name: '2011',\n//   description: 'Presence',\n//   property: 'Presence 2011'\n// }, {\n//   name: '2012',\n//   description: 'Presence',\n//   property: 'Presence 2012'\n// }, {\n//   name: '2013',\n//   description: 'Presence',\n//   property: 'Presence 2013'\n// }, {\n//   name: '2014',\n//   description: 'Presence',\n//   property: 'Presence 2014'\n// }, {\n//   name: '2015',\n//   description: 'Presence',\n//   property: 'Presence 2015'\n// }, {\n//   name: '2016',\n//   description: 'Presence',\n//   property: 'Presence 2016'\n// }, {\n//   name: '2017',\n//   description: 'Presence',\n//   property: 'Presence 2017'\n// }, {\n//   name: '2018',\n//   description: 'Presence',\n//   property: 'Presence 2018'\n// }\n// ]\n\n\n// class App extends React.Component {\n//   mapRef = React.createRef();\n//   map;\n//   tooltipContainer;\n\n//   constructor(props: Props) {\n//     super(props);\n//     this.state = {\n//       active: options[0],\n//       fitBounds: undefined,\n//       center: [-0.109970527, 51.52916347],\n//       zoom: [11],\n//       // active: options_presence[0],\n//       // year: 1993,\n//       // data: null,\n//       hoveredFeature: null,\n//       viewport: {\n//         latitude: 40,\n//         longitude: -100,\n//         zoom: 3,\n//         bearing: 0,\n//         pitch: 0\n//       },\n//       // popupInfo: null\n//     };\n//     this.renderPopup = this.renderPopup.bind(this)\n//     };\n\n\n//   componentDidUpdate() {\n//     this.setFill();\n//   }\n\n//   componentDidMount() {\n//     this.tooltipContainer = document.createElement('div');\n  \n//     this.map = new mapboxgl.Map({\n//       container: this.mapRef.current,\n//       style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax', // style: 'mapbox://styles/mapbox/dark-v10',\n//       center: [12, 26],\n//       zoom: 1.5,\n//     });\n\n//     this.map.on('load',  (e) => {\n//       this.map.addSource('countries', {\n//         type: 'geojson',\n//         data\n//       });\n\n//       this.map.addSource('presence_data', {\n//         type: 'geojson',\n//         presence_data\n//       });\n\n//       this.map.addLayer({\n//         id: 'countries',\n//         type: 'fill',\n//         source: 'countries'\n//       },'country-label'); \n\n//       this.map.addLayer({\n//         id: 'presence_data',\n//         interactive: true,\n//         type: \"symbol\",\n//         source: {\n//           \"type\": \"geojson\",\n//           \"data\": presence_data\n//         },\n//         layout: {\n//           'icon-image': \n//           ['concat', ['get', 'icon'], '-15'],\n//           'text-field': ['get', 'title'],\n//           'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n//           'text-offset': [0, 0.6],\n//           'text-anchor': 'top'\n//         }\n//       }); \n//       // this.\n      \n//       this.setFill();\n\n//       console.log(presence_data.features);\n\n      \n//       // const features = this.map.queryRenderedFeatures(e.point, {\n\n//       // pestMarker \n//       //   .setLngLat(e.lngLat)\n//       //   .setHTML('<b><u>Country Information' + '</b></u>' +\n//       //     '<ul>' +\n//       //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//       //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//       //     '</ul>')\n//       // .addTo(this.map);\n//       // // });\n//       // this.set\n//     });\n\n   \n    \n\n    \n//     const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n//       offset: [-120, 0]\n//     }).setLngLat([0,0]).addTo(this.map);\n\n//     var popup = new mapboxgl.Popup({\n//       closeButton: false,\n//       closeOnClick: false\n//       });\n\n//     // var pestMarker = new mapboxgl.Marker({\n//     //   offset: [-120, 0]\n//     // }).setLngLat([0,0]).addTo(this.map);\n\n//     this.map.on('mouseenter', 'presence_data', (e) => {\n//       const presence_features = this.map.queryRenderedFeatures(e.point, {\n     \n//     });\n//     console.log(presence_features)\n\n//       this.map.on('mouseenter', 'countries', (e) => {\n//         this.map.getCanvas().style.cursor =  'pointer';\n//       });\n\n//       this.map.on('click', 'countries', (e) => {\n//         const features = this.map.queryRenderedFeatures(e.point, {\n       \n//       });\n\n//       const { name, description, stops, property } = this.state.active;\n\n//       const prob_intro = features[0].properties[property];\n\n//       this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n//       popup \n//       .setLngLat(e.lngLat)\n//       .setHTML('<b><u>Country Information' + '</b></u>' +\n//         '<ul>' +\n//         '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n//         '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n//         '</ul>')\n//     .addTo(this.map);\n//     });\n\n//     // presence_data.features.forEach(function(marker) {\n//     //   // create a HTML element for each feature\n//     //   var el = document.createElement('div');\n//     //   el.className = 'marker';\n    \n//     //   // make a marker for each feature and add to the map\n//     //   var pestMarker = new mapboxgl.Marker(el)\n//     //     .setLngLat(marker.geometry.coordinates)\n//     //     .addTo(this.map);\n//     // });\n\n//     this.map.on('mouseleave', 'countries', (e) => {\n//       this.map.getCanvas().style.cursor =  '';\n//       popup.remove();\n//     });\n\n//   //   let marker;\n//   //   const { coordinates } = presence_data.this.state.active;\n\n//   //   if (this.map) {\n//   //     marker = <Marker coordinates={coordinates} map={this.map} />;\n\n//   })\n\n\n//   setFill() {\n//     const { property, stops } = this.state.active;\n//     this.map.setPaintProperty('countries', 'fill-color', {\n//       property,\n//       stops\n//     },\n//     )\n//     this.map.setPaintProperty('countries', 'fill-outline-color', {\n//       property,\n//       stops\n//     })\n//     // this.map.setTooltip('presence_data', '', {\n//     //   property,\n//     //   stops\n//     // })  ;\n//   }\n\n//   // set\n\n//   // render() {\n//   //   const {viewport} = this.state;\n//   //   return (\n//   //     <GeoJSONLayer\n//   //       data={presence_data}\n//   //       type=\"symbol\"\n//   //       anchor=\"bottom-right\"\n//   //       longitude={this.state.popupInfo.state.longitude}\n//   //       latitude={this.state.popupInfo.state.latitude}\n//   //       onClose={() => this.setState({popupInfo: null})}\n//   //       closeOnClick={true}\n//   //       symbolLayout={{\n//   //         \"text-field\": \"{title}\",\n//   //         \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n//   //         \"text-offset\": [0, 0.6],\n//   //         \"text-anchor\": \"top\"\n//   //       }}/>\n//   //   );\n//   // }\n\n//   render() {\n\n    \n\n//     const { name, description, stops, property } = this.state.active;\n//     const renderLegendKeys = (stop, i) => {\n//       return (\n//         <div key={i} className='txt-s '>\n//           <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n//           <span >{`${stop[0].toLocaleString()}`}</span>\n//         </div>\n//       );\n//     }\n\n   \n//     const renderOptions = (option, i) => {\n//       return (\n//         <label key={i} className=\"toggle-container  right  left px3 py3\">\n//           <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n//           <div  className=\"toggle grid txt-s color-white right   left toggle--active-white\">{option.name}</div>\n//         </label>\n//       );\n//     }\n\n//     return (\n//       <div>\n//         <div ref={this.mapRef} className=\"absolute top right left bottom align-middle grid\" />\n//         <label className=\"ctxt-bold color-white absolute mt6 ml12\" ><b>Select Year:</b></label>\n//         <div  className=\"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \">\n//           {options.map(renderOptions)}\n//         </div>\n//         <div  className=\" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \">\n//           <div className='mb6 color-white'>\n//             <h2 className=\"txt-bold txt-s block color-white\">{name}</h2>\n//             <p className='txt-s color-white'>{description}</p>\n//           </div>\n//           {stops.map(renderLegendKeys)}\n//         </div>\n//       </div>\n    \n\n//       // <MapGL\n//       //   {...viewport}\n//       //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n//       //   mapboxApiAccessToken={TOKEN} >\n//       //   {markers}\n//       //   {this.renderPopup()}\n//       //   <div className=\"nav\" style={navStyle}>\n//       //     <NavigationControl/>\n//       //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n//       //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n//       //     </Marker>\n//       //     </div>\n//       //   </div>\n//       // </MapGL>\n\n//       );\n      \n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}