{"ast":null,"code":"import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants';\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n} // Sort in the order above, then sort polygons by area ascending.\n\n\nfunction sortFeatures(features) {\n  return features.map(feature => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n\n    return feature;\n  }).sort(comparator).map(feature => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/@mapbox/mapbox-gl-draw/src/lib/sort_features.js"],"names":["area","Constants","FEATURE_SORT_RANKS","Point","LineString","Polygon","comparator","a","b","score","geometry","type","geojsonTypes","POLYGON","sortFeatures","features","map","feature","FEATURE","property","sort"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,CADkB;AAEzBC,EAAAA,UAAU,EAAE,CAFa;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAA3B;;AAMA,SAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,QAAMC,KAAK,GAAGP,kBAAkB,CAACK,CAAC,CAACG,QAAF,CAAWC,IAAZ,CAAlB,GAAsCT,kBAAkB,CAACM,CAAC,CAACE,QAAF,CAAWC,IAAZ,CAAtE;;AAEA,MAAIF,KAAK,KAAK,CAAV,IAAeF,CAAC,CAACG,QAAF,CAAWC,IAAX,KAAoBV,SAAS,CAACW,YAAV,CAAuBC,OAA9D,EAAuE;AACrE,WAAON,CAAC,CAACP,IAAF,GAASQ,CAAC,CAACR,IAAlB;AACD;;AAED,SAAOS,KAAP;AACD,C,CAED;;;AACA,SAASK,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAOA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AAC/B,QAAIA,OAAO,CAACP,QAAR,CAAiBC,IAAjB,KAA0BV,SAAS,CAACW,YAAV,CAAuBC,OAArD,EAA8D;AAC5DI,MAAAA,OAAO,CAACjB,IAAR,GAAeA,IAAI,CAACU,QAAL,CAAc;AAC3BC,QAAAA,IAAI,EAAEV,SAAS,CAACW,YAAV,CAAuBM,OADF;AAE3BC,QAAAA,QAAQ,EAAE,EAFiB;AAG3BT,QAAAA,QAAQ,EAAEO,OAAO,CAACP;AAHS,OAAd,CAAf;AAKD;;AACD,WAAOO,OAAP;AACD,GATM,EASJG,IATI,CASCd,UATD,EASaU,GATb,CASkBC,OAAD,IAAa;AACnC,WAAOA,OAAO,CAACjB,IAAf;AACA,WAAOiB,OAAP;AACD,GAZM,CAAP;AAaD;;AAED,eAAeH,YAAf","sourcesContent":["import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n"]},"metadata":{},"sourceType":"module"}