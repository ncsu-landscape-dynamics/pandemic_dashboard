{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\nvar isnumeric = require('is-numeric');\n\nvar css = require('dom-css');\n\nmodule.exports = Range;\ninherits(Range, EventEmitter);\n\nfunction clamp(x, min, max) {\n  return Math.min(Math.max(x, min), max);\n}\n\nfunction Range(root, opts, theme, uuid) {\n  if (!(this instanceof Range)) return new Range(root, opts, theme, uuid);\n  var self = this;\n  var scaleValue, scaleValueInverse, logmin, logmax, logsign, panel, input, handle;\n\n  var container = require('./container')(root, opts.label);\n\n  require('./label')(container, opts.label, theme);\n\n  if (!!opts.step && !!opts.steps) {\n    throw new Error('Cannot specify both step and steps. Got step = ' + opts.step + ', steps = ', opts.steps);\n  }\n\n  setTimeout(function () {\n    panel = document.getElementById('control-panel-' + uuid);\n  });\n  input = container.appendChild(document.createElement('span'));\n  input.className = 'control-panel-interval-' + uuid;\n  handle = document.createElement('span');\n  handle.className = 'control-panel-interval-handle';\n  input.appendChild(handle); // Create scale functions for converting to/from the desired scale:\n\n  if (opts.scale === 'log') {\n    scaleValue = function (x) {\n      return logsign * Math.exp(Math.log(logmin) + (Math.log(logmax) - Math.log(logmin)) * x / 100);\n    };\n\n    scaleValueInverse = function (y) {\n      return (Math.log(y * logsign) - Math.log(logmin)) * 100 / (Math.log(logmax) - Math.log(logmin));\n    };\n  } else {\n    scaleValue = scaleValueInverse = function (x) {\n      return x;\n    };\n  }\n\n  if (!Array.isArray(opts.initial)) {\n    opts.initial = [];\n  }\n\n  if (opts.scale === 'log') {\n    // Get options or set defaults:\n    opts.max = isnumeric(opts.max) ? opts.max : 100;\n    opts.min = isnumeric(opts.min) ? opts.min : 0.1; // Check if all signs are valid:\n\n    if (opts.min * opts.max <= 0) {\n      throw new Error('Log range min/max must have the same sign and not equal zero. Got min = ' + opts.min + ', max = ' + opts.max);\n    } else {\n      // Pull these into separate variables so that opts can define the *slider* mapping\n      logmin = opts.min;\n      logmax = opts.max;\n      logsign = opts.min > 0 ? 1 : -1; // Got the sign so force these positive:\n\n      logmin = Math.abs(logmin);\n      logmax = Math.abs(logmax); // These are now simply 0-100 to which we map the log range:\n\n      opts.min = 0;\n      opts.max = 100; // Step is invalid for a log range:\n\n      if (isnumeric(opts.step)) {\n        throw new Error('Log may only use steps (integer number of steps), not a step value. Got step =' + opts.step);\n      } // Default step is simply 1 in linear slider space:\n\n\n      opts.step = 1;\n    }\n\n    opts.initial = [scaleValueInverse(isnumeric(opts.initial[0]) ? opts.initial[0] : scaleValue(opts.min + (opts.max - opts.min) * 0.25)), scaleValueInverse(isnumeric(opts.initial[1]) ? opts.initial[1] : scaleValue(opts.min + (opts.max - opts.min) * 0.75))];\n\n    if (scaleValue(opts.initial[0]) * scaleValue(opts.max) <= 0 || scaleValue(opts.initial[1]) * scaleValue(opts.max) <= 0) {\n      throw new Error('Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = [' + scaleValue(opts.initial[0]) + ', ' + scaleValue(opts.initial[1]) + ']');\n    }\n  } else {\n    // If linear, this is much simpler:\n    opts.max = isnumeric(opts.max) ? opts.max : 100;\n    opts.min = isnumeric(opts.min) ? opts.min : 0;\n    opts.step = isnumeric(opts.step) ? opts.step : (opts.max - opts.min) / 100;\n    opts.initial = [isnumeric(opts.initial[0]) ? opts.initial[0] : (opts.min + opts.max) * 0.25, isnumeric(opts.initial[1]) ? opts.initial[1] : (opts.min + opts.max) * 0.75];\n  } // If we got a number of steps, use that instead:\n\n\n  if (isnumeric(opts.steps)) {\n    opts.step = isnumeric(opts.steps) ? (opts.max - opts.min) / opts.steps : opts.step;\n  } // Quantize the initial value to the requested step:\n\n\n  opts.initial[0] = opts.min + opts.step * Math.round((opts.initial[0] - opts.min) / opts.step);\n  opts.initial[1] = opts.min + opts.step * Math.round((opts.initial[1] - opts.min) / opts.step);\n  var value = opts.initial;\n\n  function setHandleCSS() {\n    css(handle, {\n      left: (value[0] - opts.min) / (opts.max - opts.min) * 100 + '%',\n      right: 100 - (value[1] - opts.min) / (opts.max - opts.min) * 100 + '%'\n    });\n  } // Initialize CSS:\n\n\n  setHandleCSS(); // Display the values:\n\n  var lValue = require('./value')(container, scaleValue(opts.initial[0]), theme, '11%', true);\n\n  var rValue = require('./value')(container, scaleValue(opts.initial[1]), theme, '11%'); // An index to track what's being dragged:\n\n\n  var activeIndex = -1;\n\n  function mouseX(ev) {\n    // Get mouse position in page coords relative to the container:\n    return ev.pageX - input.getBoundingClientRect().left;\n  }\n\n  function setActiveValue(fraction) {\n    if (activeIndex === -1) {\n      return;\n    } // Get the position in the range [0, 1]:\n\n\n    var lofrac = (value[0] - opts.min) / (opts.max - opts.min);\n    var hifrac = (value[1] - opts.min) / (opts.max - opts.min); // Clip against the other bound:\n\n    if (activeIndex === 0) {\n      fraction = Math.min(hifrac, fraction);\n    } else {\n      fraction = Math.max(lofrac, fraction);\n    } // Compute and quantize the new value:\n\n\n    var newValue = opts.min + Math.round((opts.max - opts.min) * fraction / opts.step) * opts.step; // Update value, in linearized coords:\n\n    value[activeIndex] = newValue; // Update and send the event:\n\n    setHandleCSS();\n    input.oninput();\n  }\n\n  var mousemoveListener = function (ev) {\n    var fraction = clamp(mouseX(ev) / input.offsetWidth, 0, 1);\n    setActiveValue(fraction);\n  };\n\n  var mouseupListener = function (ev) {\n    panel.classList.remove('control-panel-interval-dragging');\n    var fraction = clamp(mouseX(ev) / input.offsetWidth, 0, 1);\n    setActiveValue(fraction);\n    document.removeEventListener('mousemove', mousemoveListener);\n    document.removeEventListener('mouseup', mouseupListener);\n    activeIndex = -1;\n  };\n\n  input.addEventListener('mousedown', function (ev) {\n    // Tweak control to make dragging experience a little nicer:\n    panel.classList.add('control-panel-interval-dragging'); // Get mouse position fraction:\n\n    var fraction = clamp(mouseX(ev) / input.offsetWidth, 0, 1); // Get the current fraction of position --> [0, 1]:\n\n    var lofrac = (value[0] - opts.min) / (opts.max - opts.min);\n    var hifrac = (value[1] - opts.min) / (opts.max - opts.min); // This is just for making decisions, so perturb it ever\n    // so slightly just in case the bounds are numerically equal:\n\n    lofrac -= Math.abs(opts.max - opts.min) * 1e-15;\n    hifrac += Math.abs(opts.max - opts.min) * 1e-15; // Figure out which is closer:\n\n    var lodiff = Math.abs(lofrac - fraction);\n    var hidiff = Math.abs(hifrac - fraction);\n    activeIndex = lodiff < hidiff ? 0 : 1; // Attach this to *document* so that we can still drag if the mouse\n    // passes outside the container:\n\n    document.addEventListener('mousemove', mousemoveListener);\n    document.addEventListener('mouseup', mouseupListener);\n  });\n  setTimeout(function () {\n    var scaledLValue = scaleValue(value[0]);\n    var scaledRValue = scaleValue(value[1]);\n    lValue.innerHTML = scaledLValue;\n    rValue.innerHTML = scaledRValue;\n    self.emit('initialized', [scaledLValue, scaledRValue]);\n  });\n\n  input.oninput = function () {\n    var scaledLValue = scaleValue(value[0]);\n    var scaledRValue = scaleValue(value[1]);\n    lValue.innerHTML = scaledLValue;\n    rValue.innerHTML = scaledRValue;\n    self.emit('input', [scaledLValue, scaledRValue]);\n  };\n}","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/control-panel/components/interval.js"],"names":["EventEmitter","require","inherits","isnumeric","css","module","exports","Range","clamp","x","min","max","Math","root","opts","theme","uuid","self","scaleValue","scaleValueInverse","logmin","logmax","logsign","panel","input","handle","container","label","step","steps","Error","setTimeout","document","getElementById","appendChild","createElement","className","scale","exp","log","y","Array","isArray","initial","abs","round","value","setHandleCSS","left","right","lValue","rValue","activeIndex","mouseX","ev","pageX","getBoundingClientRect","setActiveValue","fraction","lofrac","hifrac","newValue","oninput","mousemoveListener","offsetWidth","mouseupListener","classList","remove","removeEventListener","addEventListener","add","lodiff","hidiff","scaledLValue","scaledRValue","innerHTML","emit"],"mappings":"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","sourcesContent":["var EventEmitter = require('events').EventEmitter\nvar inherits = require('inherits')\nvar isnumeric = require('is-numeric')\nvar css = require('dom-css')\n\nmodule.exports = Range\ninherits(Range, EventEmitter)\n\nfunction clamp (x, min, max) {\n  return Math.min(Math.max(x, min), max)\n}\n\nfunction Range (root, opts, theme, uuid) {\n  if (!(this instanceof Range)) return new Range(root, opts, theme, uuid)\n  var self = this\n  var scaleValue, scaleValueInverse, logmin, logmax, logsign, panel, input, handle\n\n  var container = require('./container')(root, opts.label)\n  require('./label')(container, opts.label, theme)\n\n  if (!!opts.step && !!opts.steps) {\n    throw new Error('Cannot specify both step and steps. Got step = ' + opts.step + ', steps = ', opts.steps)\n  }\n\n  setTimeout(function () {\n    panel = document.getElementById('control-panel-' + uuid)\n  })\n\n  input = container.appendChild(document.createElement('span'))\n  input.className = 'control-panel-interval-' + uuid\n\n  handle = document.createElement('span')\n  handle.className = 'control-panel-interval-handle'\n  input.appendChild(handle)\n\n  // Create scale functions for converting to/from the desired scale:\n  if (opts.scale === 'log') {\n    scaleValue = function (x) {\n      return logsign * Math.exp(Math.log(logmin) + (Math.log(logmax) - Math.log(logmin)) * x / 100)\n    }\n    scaleValueInverse = function (y) {\n      return (Math.log(y * logsign) - Math.log(logmin)) * 100 / (Math.log(logmax) - Math.log(logmin))\n    }\n  } else {\n    scaleValue = scaleValueInverse = function (x) { return x }\n  }\n\n  if (!Array.isArray(opts.initial)) {\n    opts.initial = []\n  }\n\n  if (opts.scale === 'log') {\n    // Get options or set defaults:\n    opts.max = (isnumeric(opts.max)) ? opts.max : 100\n    opts.min = (isnumeric(opts.min)) ? opts.min : 0.1\n\n    // Check if all signs are valid:\n    if (opts.min * opts.max <= 0) {\n      throw new Error('Log range min/max must have the same sign and not equal zero. Got min = ' + opts.min + ', max = ' + opts.max)\n    } else {\n      // Pull these into separate variables so that opts can define the *slider* mapping\n      logmin = opts.min\n      logmax = opts.max\n      logsign = opts.min > 0 ? 1 : -1\n\n      // Got the sign so force these positive:\n      logmin = Math.abs(logmin)\n      logmax = Math.abs(logmax)\n\n      // These are now simply 0-100 to which we map the log range:\n      opts.min = 0\n      opts.max = 100\n\n      // Step is invalid for a log range:\n      if (isnumeric(opts.step)) {\n        throw new Error('Log may only use steps (integer number of steps), not a step value. Got step =' + opts.step)\n      }\n      // Default step is simply 1 in linear slider space:\n      opts.step = 1\n    }\n\n    opts.initial = [\n      scaleValueInverse(isnumeric(opts.initial[0]) ? opts.initial[0] : scaleValue(opts.min + (opts.max - opts.min) * 0.25)),\n      scaleValueInverse(isnumeric(opts.initial[1]) ? opts.initial[1] : scaleValue(opts.min + (opts.max - opts.min) * 0.75))\n    ]\n\n    if (scaleValue(opts.initial[0]) * scaleValue(opts.max) <= 0 || scaleValue(opts.initial[1]) * scaleValue(opts.max) <= 0) {\n      throw new Error('Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = [' + scaleValue(opts.initial[0]) + ', ' + scaleValue(opts.initial[1]) + ']')\n    }\n  } else {\n    // If linear, this is much simpler:\n    opts.max = (isnumeric(opts.max)) ? opts.max : 100\n    opts.min = (isnumeric(opts.min)) ? opts.min : 0\n    opts.step = (isnumeric(opts.step)) ? opts.step : (opts.max - opts.min) / 100\n\n    opts.initial = [\n      isnumeric(opts.initial[0]) ? opts.initial[0] : (opts.min + opts.max) * 0.25,\n      isnumeric(opts.initial[1]) ? opts.initial[1] : (opts.min + opts.max) * 0.75\n    ]\n  }\n\n  // If we got a number of steps, use that instead:\n  if (isnumeric(opts.steps)) {\n    opts.step = isnumeric(opts.steps) ? (opts.max - opts.min) / opts.steps : opts.step\n  }\n\n  // Quantize the initial value to the requested step:\n  opts.initial[0] = opts.min + opts.step * Math.round((opts.initial[0] - opts.min) / opts.step)\n  opts.initial[1] = opts.min + opts.step * Math.round((opts.initial[1] - opts.min) / opts.step)\n\n  var value = opts.initial\n\n  function setHandleCSS () {\n    css(handle, {\n      left: ((value[0] - opts.min) / (opts.max - opts.min) * 100) + '%',\n      right: (100 - (value[1] - opts.min) / (opts.max - opts.min) * 100) + '%'\n    })\n  }\n\n  // Initialize CSS:\n  setHandleCSS()\n\n  // Display the values:\n  var lValue = require('./value')(container, scaleValue(opts.initial[0]), theme, '11%', true)\n  var rValue = require('./value')(container, scaleValue(opts.initial[1]), theme, '11%')\n\n  // An index to track what's being dragged:\n  var activeIndex = -1\n\n  function mouseX (ev) {\n    // Get mouse position in page coords relative to the container:\n    return ev.pageX - input.getBoundingClientRect().left\n  }\n\n  function setActiveValue (fraction) {\n    if (activeIndex === -1) {\n      return\n    }\n\n    // Get the position in the range [0, 1]:\n    var lofrac = (value[0] - opts.min) / (opts.max - opts.min)\n    var hifrac = (value[1] - opts.min) / (opts.max - opts.min)\n\n    // Clip against the other bound:\n    if (activeIndex === 0) {\n      fraction = Math.min(hifrac, fraction)\n    } else {\n      fraction = Math.max(lofrac, fraction)\n    }\n\n    // Compute and quantize the new value:\n    var newValue = opts.min + Math.round((opts.max - opts.min) * fraction / opts.step) * opts.step\n\n    // Update value, in linearized coords:\n    value[activeIndex] = newValue\n\n    // Update and send the event:\n    setHandleCSS()\n    input.oninput()\n  }\n\n  var mousemoveListener = function (ev) {\n    var fraction = clamp(mouseX(ev) / input.offsetWidth, 0, 1)\n\n    setActiveValue(fraction)\n  }\n\n  var mouseupListener = function (ev) {\n    panel.classList.remove('control-panel-interval-dragging')\n    var fraction = clamp(mouseX(ev) / input.offsetWidth, 0, 1)\n\n    setActiveValue(fraction)\n\n    document.removeEventListener('mousemove', mousemoveListener)\n    document.removeEventListener('mouseup', mouseupListener)\n\n    activeIndex = -1\n  }\n\n  input.addEventListener('mousedown', function (ev) {\n    // Tweak control to make dragging experience a little nicer:\n    panel.classList.add('control-panel-interval-dragging')\n\n    // Get mouse position fraction:\n    var fraction = clamp(mouseX(ev) / input.offsetWidth, 0, 1)\n\n    // Get the current fraction of position --> [0, 1]:\n    var lofrac = (value[0] - opts.min) / (opts.max - opts.min)\n    var hifrac = (value[1] - opts.min) / (opts.max - opts.min)\n\n    // This is just for making decisions, so perturb it ever\n    // so slightly just in case the bounds are numerically equal:\n    lofrac -= Math.abs(opts.max - opts.min) * 1e-15\n    hifrac += Math.abs(opts.max - opts.min) * 1e-15\n\n    // Figure out which is closer:\n    var lodiff = Math.abs(lofrac - fraction)\n    var hidiff = Math.abs(hifrac - fraction)\n\n    activeIndex = lodiff < hidiff ? 0 : 1\n\n    // Attach this to *document* so that we can still drag if the mouse\n    // passes outside the container:\n    document.addEventListener('mousemove', mousemoveListener)\n    document.addEventListener('mouseup', mouseupListener)\n  })\n\n  setTimeout(function () {\n    var scaledLValue = scaleValue(value[0])\n    var scaledRValue = scaleValue(value[1])\n    lValue.innerHTML = scaledLValue\n    rValue.innerHTML = scaledRValue\n    self.emit('initialized', [scaledLValue, scaledRValue])\n  })\n\n  input.oninput = function () {\n    var scaledLValue = scaleValue(value[0])\n    var scaledRValue = scaleValue(value[1])\n    lValue.innerHTML = scaledLValue\n    rValue.innerHTML = scaledRValue\n    self.emit('input', [scaledLValue, scaledRValue])\n  }\n}\n"]},"metadata":{},"sourceType":"script"}