{"ast":null,"code":"import { getBinaryImageMetadata } from '../category-api/binary-image-api';\nexport function isBinaryImage(arrayBuffer, mimeType) {\n  var metadata = getBinaryImageMetadata(arrayBuffer);\n\n  if (mimeType) {\n    return Boolean(metadata) && metadata.mimeType === mimeType;\n  }\n\n  return Boolean(metadata);\n}\nexport function getBinaryImageMIMEType(arrayBuffer) {\n  var metadata = getBinaryImageMetadata(arrayBuffer);\n  return metadata ? metadata.mimeType : null;\n}\nexport function getBinaryImageSize(arrayBuffer) {\n  var mimeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var metadata = getBinaryImageMetadata(arrayBuffer);\n\n  if (metadata) {\n    return {\n      width: metadata.width,\n      height: metadata.height\n    };\n  }\n\n  mimeType = mimeType || metadata && metadata.mimeType || 'unknown';\n  throw new Error(\"invalid image data for type: \".concat(mimeType));\n}","map":{"version":3,"sources":["../../../../src/lib/deprecated/binary-image-api-deprecated.js"],"names":["metadata","getBinaryImageMetadata","Boolean","mimeType","width","height"],"mappings":"AAAA,SAAA,sBAAA,QAAA,kCAAA;AAGA,OAAO,SAAA,aAAA,CAAA,WAAA,EAAA,QAAA,EAA8C;AACnD,MAAMA,QAAQ,GAAGC,sBAAsB,CAAvC,WAAuC,CAAvC;;AACA,MAAA,QAAA,EAAc;AACZ,WAAOC,OAAO,CAAPA,QAAO,CAAPA,IAAqBF,QAAQ,CAARA,QAAAA,KAA5B,QAAA;AACD;;AAED,SAAOE,OAAO,CAAd,QAAc,CAAd;AACD;AAGD,OAAO,SAAA,sBAAA,CAAA,WAAA,EAA6C;AAClD,MAAMF,QAAQ,GAAGC,sBAAsB,CAAvC,WAAuC,CAAvC;AACA,SAAOD,QAAQ,GAAGA,QAAQ,CAAX,QAAA,GAAf,IAAA;AACD;AAED,OAAO,SAAA,kBAAA,CAAA,WAAA,EAA0D;AAAA,MAAjBG,QAAiB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;AAC/D,MAAMH,QAAQ,GAAGC,sBAAsB,CAAvC,WAAuC,CAAvC;;AAEA,MAAA,QAAA,EAAc;AACZ,WAAO;AACLG,MAAAA,KAAK,EAAEJ,QAAQ,CADV,KAAA;AAELK,MAAAA,MAAM,EAAEL,QAAQ,CAACK;AAFZ,KAAP;AAID;;AAEDF,EAAAA,QAAQ,GAAGA,QAAQ,IAAKH,QAAQ,IAAIA,QAAQ,CAAjCG,QAAAA,IAAXA,SAAAA;AACA,QAAM,IAAA,KAAA,CAAA,gCAAA,MAAA,CAAN,QAAM,CAAA,CAAN;AACD","sourcesContent":["import {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Supported image types are PNG, JPEG, GIF and BMP.\nexport function isBinaryImage(arrayBuffer, mimeType) {\n  const metadata = getBinaryImageMetadata(arrayBuffer);\n  if (mimeType) {\n    return Boolean(metadata) && metadata.mimeType === mimeType;\n  }\n  // return true if any known type\n  return Boolean(metadata);\n}\n\n// Sniffs the contents of a file to attempt to deduce the image type\nexport function getBinaryImageMIMEType(arrayBuffer) {\n  const metadata = getBinaryImageMetadata(arrayBuffer);\n  return metadata ? metadata.mimeType : null;\n}\n\nexport function getBinaryImageSize(arrayBuffer, mimeType = null) {\n  const metadata = getBinaryImageMetadata(arrayBuffer);\n\n  if (metadata) {\n    return {\n      width: metadata.width,\n      height: metadata.height\n    };\n  }\n\n  mimeType = mimeType || (metadata && metadata.mimeType) || 'unknown';\n  throw new Error(`invalid image data for type: ${mimeType}`);\n}\n"]},"metadata":{},"sourceType":"module"}