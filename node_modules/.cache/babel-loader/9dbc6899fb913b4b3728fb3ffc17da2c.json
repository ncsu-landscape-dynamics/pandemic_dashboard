{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport distance from '@turf/distance';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction iconRuler() {\n  return new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"12\\\" viewBox=\\\"0 0 22 12\\\" fill=\\\"#505050\\\">\\n    <path fill-rule=\\\"evenodd\\\" fill=\\\"none\\\" d=\\\"M-1-6h24v24H-1z\\\"/>\\n    <path d=\\\"M20 0H2C.9 0 0 .9 0 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm0 10H2V2h2v4h2V2h2v4h2V2h2v4h2V2h2v4h2V2h2v8z\\\"/>\\n</svg>\", 'image/svg+xml').firstChild;\n}\n\nvar LAYER_LINE = 'controls-layer-line';\nvar LAYER_SYMBOL = 'controls-layer-symbol';\nvar SOURCE_LINE = 'controls-source-line';\nvar SOURCE_SYMBOL = 'controls-source-symbol';\nvar MAIN_COLOR = '#263238';\nvar HALO_COLOR = '#fff';\n\nfunction geoLineString() {\n  var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'LineString',\n      coordinates: coordinates\n    }\n  };\n}\n\nfunction geoPoint() {\n  var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return {\n    type: 'FeatureCollection',\n    features: coordinates.map(function (c, i) {\n      return {\n        type: 'Feature',\n        properties: {\n          text: labels[i]\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: c\n        }\n      };\n    })\n  };\n}\n\nfunction defaultLabelFormat(number) {\n  if (number < 1) {\n    return \"\".concat((number * 1000).toFixed(), \" m\");\n  }\n\n  return \"\".concat(number.toFixed(2), \" km\");\n}\n/**\n * Fires map `ruler.on` and `ruler.off`events at the beginning and at the end of measuring.\n * @param {Object} options\n * @param {String} [options.units='kilometers'] - Any units [@turf/distance](https://github.com/Turfjs/turf/tree/master/packages/turf-distance) supports\n * @param {Function} [options.labelFormat] - Accepts number and returns label.\n * Can be used to convert value to any measuring units\n * @param {Array} [options.font=['Roboto Medium']] - Array of fonts.\n * @param {String} [options.mainColor='#263238'] - Color of ruler lines.\n * @param {String} [options.secondaryColor='#fff'] - Color of halo and inner marker background.\n * @param {String} [options.fontSize='12'] - Label font size\n * @param {String} [options.fontHalo='1'] - Label font halo\n */\n\n\nvar RulerControl = /*#__PURE__*/function () {\n  function RulerControl() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, RulerControl);\n\n    this.isMeasuring = false;\n    this.markers = [];\n    this.coordinates = [];\n    this.labels = [];\n    this.units = options.units || 'kilometers';\n    this.font = options.font || ['Roboto Medium'];\n    this.fontSize = options.fontSize || 12;\n    this.fontHalo = options.fontHalo || 1;\n    this.labelFormat = options.labelFormat || defaultLabelFormat;\n    this.mainColor = options.mainColor || MAIN_COLOR;\n    this.secondaryColor = options.secondaryColor || HALO_COLOR;\n    this.mapClickListener = this.mapClickListener.bind(this);\n    this.styleLoadListener = this.styleLoadListener.bind(this);\n  }\n\n  _createClass(RulerControl, [{\n    key: \"insertControls\",\n    value: function insertControls() {\n      this.container = document.createElement('div');\n      this.container.classList.add('mapboxgl-ctrl');\n      this.container.classList.add('mapboxgl-ctrl-group');\n      this.container.classList.add('mapboxgl-ctrl-ruler');\n      this.button = document.createElement('button');\n      this.button.setAttribute('type', 'button');\n      this.button.appendChild(iconRuler());\n      this.container.appendChild(this.button);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.map.addSource(SOURCE_LINE, {\n        type: 'geojson',\n        data: geoLineString(this.coordinates)\n      });\n      this.map.addSource(SOURCE_SYMBOL, {\n        type: 'geojson',\n        data: geoPoint(this.coordinates, this.labels)\n      });\n      this.map.addLayer({\n        id: LAYER_LINE,\n        type: 'line',\n        source: SOURCE_LINE,\n        paint: {\n          'line-color': this.mainColor,\n          'line-width': 2\n        }\n      });\n      this.map.addLayer({\n        id: LAYER_SYMBOL,\n        type: 'symbol',\n        source: SOURCE_SYMBOL,\n        layout: {\n          'text-field': '{text}',\n          'text-font': this.font,\n          'text-anchor': 'top',\n          'text-size': this.fontSize,\n          'text-offset': [0, 0.8]\n        },\n        paint: {\n          'text-color': this.mainColor,\n          'text-halo-color': this.secondaryColor,\n          'text-halo-width': this.fontHalo\n        }\n      });\n    }\n  }, {\n    key: \"measuringOn\",\n    value: function measuringOn() {\n      this.isMeasuring = true;\n      this.markers = [];\n      this.coordinates = [];\n      this.labels = [];\n      this.map.getCanvas().style.cursor = 'crosshair';\n      this.button.classList.add('-active');\n      this.draw();\n      this.map.on('click', this.mapClickListener);\n      this.map.on('style.load', this.styleLoadListener);\n      this.map.fire('ruler.on');\n    }\n  }, {\n    key: \"measuringOff\",\n    value: function measuringOff() {\n      this.isMeasuring = false;\n      this.map.getCanvas().style.cursor = '';\n      this.button.classList.remove('-active'); // remove layers, sources and event listeners\n\n      this.map.removeLayer(LAYER_LINE);\n      this.map.removeLayer(LAYER_SYMBOL);\n      this.map.removeSource(SOURCE_LINE);\n      this.map.removeSource(SOURCE_SYMBOL);\n      this.markers.forEach(function (m) {\n        return m.remove();\n      });\n      this.map.off('click', this.mapClickListener);\n      this.map.off('style.load', this.styleLoadListener);\n      this.map.fire('ruler.off');\n    }\n  }, {\n    key: \"mapClickListener\",\n    value: function mapClickListener(event) {\n      var _this = this;\n\n      var markerNode = document.createElement('div');\n      markerNode.style.width = '12px';\n      markerNode.style.height = '12px';\n      markerNode.style.borderRadius = '50%';\n      markerNode.style.background = this.secondaryColor;\n      markerNode.style.boxSizing = 'border-box';\n      markerNode.style.border = \"2px solid \".concat(this.mainColor);\n      var marker = new mapboxgl.Marker({\n        element: markerNode,\n        draggable: true\n      }).setLngLat(event.lngLat).addTo(this.map);\n      this.coordinates.push([event.lngLat.lng, event.lngLat.lat]);\n      this.labels = this.coordinatesToLabels();\n      this.map.getSource(SOURCE_LINE).setData(geoLineString(this.coordinates));\n      this.map.getSource(SOURCE_SYMBOL).setData(geoPoint(this.coordinates, this.labels));\n      this.markers.push(marker);\n      marker.on('drag', function () {\n        var index = _this.markers.indexOf(marker);\n\n        var lngLat = marker.getLngLat();\n        _this.coordinates[index] = [lngLat.lng, lngLat.lat];\n        _this.labels = _this.coordinatesToLabels();\n\n        _this.map.getSource(SOURCE_LINE).setData(geoLineString(_this.coordinates));\n\n        _this.map.getSource(SOURCE_SYMBOL).setData(geoPoint(_this.coordinates, _this.labels));\n      });\n    }\n  }, {\n    key: \"coordinatesToLabels\",\n    value: function coordinatesToLabels() {\n      var coordinates = this.coordinates,\n          units = this.units,\n          labelFormat = this.labelFormat;\n      var sum = 0;\n      return coordinates.map(function (coordinate, index) {\n        if (index === 0) return labelFormat(0);\n        sum += distance(coordinates[index - 1], coordinates[index], {\n          units: units\n        });\n        return labelFormat(sum);\n      });\n    }\n  }, {\n    key: \"styleLoadListener\",\n    value: function styleLoadListener() {\n      this.draw();\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd(map) {\n      var _this2 = this;\n\n      this.map = map;\n      this.insertControls();\n      this.button.addEventListener('click', function () {\n        if (_this2.isMeasuring) {\n          _this2.measuringOff();\n        } else {\n          _this2.measuringOn();\n        }\n      });\n      return this.container;\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {\n      if (this.isMeasuring) {\n        this.measuringOff();\n      }\n\n      this.map.off('click', this.mapClickListener);\n      this.container.parentNode.removeChild(this.container);\n      this.map = undefined;\n    }\n  }]);\n\n  return RulerControl;\n}();\n\nexport default RulerControl;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/node_modules/mapbox-gl-controls/lib/ruler.js"],"names":["mapboxgl","distance","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","iconRuler","DOMParser","parseFromString","firstChild","LAYER_LINE","LAYER_SYMBOL","SOURCE_LINE","SOURCE_SYMBOL","MAIN_COLOR","HALO_COLOR","geoLineString","coordinates","arguments","undefined","type","properties","geometry","geoPoint","labels","features","map","c","text","defaultLabelFormat","number","concat","toFixed","RulerControl","options","isMeasuring","markers","units","font","fontSize","fontHalo","labelFormat","mainColor","secondaryColor","mapClickListener","bind","styleLoadListener","value","insertControls","container","document","createElement","classList","add","button","setAttribute","appendChild","draw","addSource","data","addLayer","id","source","paint","layout","measuringOn","getCanvas","style","cursor","on","fire","measuringOff","remove","removeLayer","removeSource","forEach","m","off","event","_this","markerNode","width","height","borderRadius","background","boxSizing","border","marker","Marker","element","draggable","setLngLat","lngLat","addTo","push","lng","lat","coordinatesToLabels","getSource","setData","index","indexOf","getLngLat","sum","coordinate","onAdd","_this2","addEventListener","onRemove","parentNode","removeChild"],"mappings":"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","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport distance from '@turf/distance';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction iconRuler() {\n  return (new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"22\\\" height=\\\"12\\\" viewBox=\\\"0 0 22 12\\\" fill=\\\"#505050\\\">\\n    <path fill-rule=\\\"evenodd\\\" fill=\\\"none\\\" d=\\\"M-1-6h24v24H-1z\\\"/>\\n    <path d=\\\"M20 0H2C.9 0 0 .9 0 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm0 10H2V2h2v4h2V2h2v4h2V2h2v4h2V2h2v4h2V2h2v8z\\\"/>\\n</svg>\", 'image/svg+xml')).firstChild;\n}\n\nvar LAYER_LINE = 'controls-layer-line';\nvar LAYER_SYMBOL = 'controls-layer-symbol';\nvar SOURCE_LINE = 'controls-source-line';\nvar SOURCE_SYMBOL = 'controls-source-symbol';\nvar MAIN_COLOR = '#263238';\nvar HALO_COLOR = '#fff';\n\nfunction geoLineString() {\n  var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'LineString',\n      coordinates: coordinates\n    }\n  };\n}\n\nfunction geoPoint() {\n  var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return {\n    type: 'FeatureCollection',\n    features: coordinates.map(function (c, i) {\n      return {\n        type: 'Feature',\n        properties: {\n          text: labels[i]\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: c\n        }\n      };\n    })\n  };\n}\n\nfunction defaultLabelFormat(number) {\n  if (number < 1) {\n    return \"\".concat((number * 1000).toFixed(), \" m\");\n  }\n\n  return \"\".concat(number.toFixed(2), \" km\");\n}\n/**\n * Fires map `ruler.on` and `ruler.off`events at the beginning and at the end of measuring.\n * @param {Object} options\n * @param {String} [options.units='kilometers'] - Any units [@turf/distance](https://github.com/Turfjs/turf/tree/master/packages/turf-distance) supports\n * @param {Function} [options.labelFormat] - Accepts number and returns label.\n * Can be used to convert value to any measuring units\n * @param {Array} [options.font=['Roboto Medium']] - Array of fonts.\n * @param {String} [options.mainColor='#263238'] - Color of ruler lines.\n * @param {String} [options.secondaryColor='#fff'] - Color of halo and inner marker background.\n * @param {String} [options.fontSize='12'] - Label font size\n * @param {String} [options.fontHalo='1'] - Label font halo\n */\n\n\nvar RulerControl = /*#__PURE__*/function () {\n  function RulerControl() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, RulerControl);\n\n    this.isMeasuring = false;\n    this.markers = [];\n    this.coordinates = [];\n    this.labels = [];\n    this.units = options.units || 'kilometers';\n    this.font = options.font || ['Roboto Medium'];\n    this.fontSize = options.fontSize || 12;\n    this.fontHalo = options.fontHalo || 1;\n    this.labelFormat = options.labelFormat || defaultLabelFormat;\n    this.mainColor = options.mainColor || MAIN_COLOR;\n    this.secondaryColor = options.secondaryColor || HALO_COLOR;\n    this.mapClickListener = this.mapClickListener.bind(this);\n    this.styleLoadListener = this.styleLoadListener.bind(this);\n  }\n\n  _createClass(RulerControl, [{\n    key: \"insertControls\",\n    value: function insertControls() {\n      this.container = document.createElement('div');\n      this.container.classList.add('mapboxgl-ctrl');\n      this.container.classList.add('mapboxgl-ctrl-group');\n      this.container.classList.add('mapboxgl-ctrl-ruler');\n      this.button = document.createElement('button');\n      this.button.setAttribute('type', 'button');\n      this.button.appendChild(iconRuler());\n      this.container.appendChild(this.button);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.map.addSource(SOURCE_LINE, {\n        type: 'geojson',\n        data: geoLineString(this.coordinates)\n      });\n      this.map.addSource(SOURCE_SYMBOL, {\n        type: 'geojson',\n        data: geoPoint(this.coordinates, this.labels)\n      });\n      this.map.addLayer({\n        id: LAYER_LINE,\n        type: 'line',\n        source: SOURCE_LINE,\n        paint: {\n          'line-color': this.mainColor,\n          'line-width': 2\n        }\n      });\n      this.map.addLayer({\n        id: LAYER_SYMBOL,\n        type: 'symbol',\n        source: SOURCE_SYMBOL,\n        layout: {\n          'text-field': '{text}',\n          'text-font': this.font,\n          'text-anchor': 'top',\n          'text-size': this.fontSize,\n          'text-offset': [0, 0.8]\n        },\n        paint: {\n          'text-color': this.mainColor,\n          'text-halo-color': this.secondaryColor,\n          'text-halo-width': this.fontHalo\n        }\n      });\n    }\n  }, {\n    key: \"measuringOn\",\n    value: function measuringOn() {\n      this.isMeasuring = true;\n      this.markers = [];\n      this.coordinates = [];\n      this.labels = [];\n      this.map.getCanvas().style.cursor = 'crosshair';\n      this.button.classList.add('-active');\n      this.draw();\n      this.map.on('click', this.mapClickListener);\n      this.map.on('style.load', this.styleLoadListener);\n      this.map.fire('ruler.on');\n    }\n  }, {\n    key: \"measuringOff\",\n    value: function measuringOff() {\n      this.isMeasuring = false;\n      this.map.getCanvas().style.cursor = '';\n      this.button.classList.remove('-active'); // remove layers, sources and event listeners\n\n      this.map.removeLayer(LAYER_LINE);\n      this.map.removeLayer(LAYER_SYMBOL);\n      this.map.removeSource(SOURCE_LINE);\n      this.map.removeSource(SOURCE_SYMBOL);\n      this.markers.forEach(function (m) {\n        return m.remove();\n      });\n      this.map.off('click', this.mapClickListener);\n      this.map.off('style.load', this.styleLoadListener);\n      this.map.fire('ruler.off');\n    }\n  }, {\n    key: \"mapClickListener\",\n    value: function mapClickListener(event) {\n      var _this = this;\n\n      var markerNode = document.createElement('div');\n      markerNode.style.width = '12px';\n      markerNode.style.height = '12px';\n      markerNode.style.borderRadius = '50%';\n      markerNode.style.background = this.secondaryColor;\n      markerNode.style.boxSizing = 'border-box';\n      markerNode.style.border = \"2px solid \".concat(this.mainColor);\n      var marker = new mapboxgl.Marker({\n        element: markerNode,\n        draggable: true\n      }).setLngLat(event.lngLat).addTo(this.map);\n      this.coordinates.push([event.lngLat.lng, event.lngLat.lat]);\n      this.labels = this.coordinatesToLabels();\n      this.map.getSource(SOURCE_LINE).setData(geoLineString(this.coordinates));\n      this.map.getSource(SOURCE_SYMBOL).setData(geoPoint(this.coordinates, this.labels));\n      this.markers.push(marker);\n      marker.on('drag', function () {\n        var index = _this.markers.indexOf(marker);\n\n        var lngLat = marker.getLngLat();\n        _this.coordinates[index] = [lngLat.lng, lngLat.lat];\n        _this.labels = _this.coordinatesToLabels();\n\n        _this.map.getSource(SOURCE_LINE).setData(geoLineString(_this.coordinates));\n\n        _this.map.getSource(SOURCE_SYMBOL).setData(geoPoint(_this.coordinates, _this.labels));\n      });\n    }\n  }, {\n    key: \"coordinatesToLabels\",\n    value: function coordinatesToLabels() {\n      var coordinates = this.coordinates,\n          units = this.units,\n          labelFormat = this.labelFormat;\n      var sum = 0;\n      return coordinates.map(function (coordinate, index) {\n        if (index === 0) return labelFormat(0);\n        sum += distance(coordinates[index - 1], coordinates[index], {\n          units: units\n        });\n        return labelFormat(sum);\n      });\n    }\n  }, {\n    key: \"styleLoadListener\",\n    value: function styleLoadListener() {\n      this.draw();\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd(map) {\n      var _this2 = this;\n\n      this.map = map;\n      this.insertControls();\n      this.button.addEventListener('click', function () {\n        if (_this2.isMeasuring) {\n          _this2.measuringOff();\n        } else {\n          _this2.measuringOn();\n        }\n      });\n      return this.container;\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {\n      if (this.isMeasuring) {\n        this.measuringOff();\n      }\n\n      this.map.off('click', this.mapClickListener);\n      this.container.parentNode.removeChild(this.container);\n      this.map = undefined;\n    }\n  }]);\n\n  return RulerControl;\n}();\n\nexport default RulerControl;\n"]},"metadata":{},"sourceType":"module"}