{"ast":null,"code":"var _jsxFileName = \"/Users/garrettmillar/pandemic_dashboard/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport data from './pandemic_output.json';\nimport presence_data from './presence_pandemic.json';\nimport Tooltip from './components/tooltip';\nimport ReactDOM from 'react-dom';\nimport MapGL, { Marker, Popup, NavigationControl, GeoJSONLayer, MapboxDraw } from 'mapbox-gl';\nimport turf from 'turf-jsts';\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\nconst TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\nvar draw;\nvar stops = [[0, 'rgba(45,69,132, 0.4)'], [0.1, 'rgba(77,30,129, 0.4)'], [0.2, 'rgba(109,41,126, 0.4)'], [0.3, 'rgba(141,52,123, 0.4)'], [0.4, 'rgba(173,63,120, 0.4)'], [0.5, 'rgba(205,74,118, 0.4)'], [0.6, 'rgba(210,103,103\t, 0.4)'], [0.7, 'rgba(216,132,89,0.7)'], [0.8, 'rgba(222,161,75, 0.4)'], [0.9, 'rgba(228,190,61, 0.4)'], [1, 'rgba(240,249,33, 0.4)']];\nconst options = [{\n  name: '1993',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T0',\n  stops: stops\n}, {\n  name: '1994',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T1',\n  stops: stops\n}, {\n  name: '1995',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T2',\n  stops: stops\n}, {\n  name: '1996',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T3',\n  stops: stops\n}, {\n  name: '1997',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T4',\n  stops: stops\n}, {\n  name: '1998',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T5',\n  stops: stops\n}, {\n  name: '1999',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T6',\n  stops: stops\n}, {\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T7',\n  stops: stops\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T8',\n  stops: stops\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T9',\n  stops: stops\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T10',\n  stops: stops\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T11',\n  stops: stops\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T12',\n  stops: stops\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T13',\n  stops: stops\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T14',\n  stops: stops\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T15',\n  stops: stops\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T16',\n  stops: stops\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T17',\n  stops: stops\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T18',\n  stops: stops\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T19',\n  stops: stops\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T20',\n  stops: stops\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T21',\n  stops: stops\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T22',\n  stops: stops\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T23',\n  stops: stops\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T24',\n  stops: stops\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T25',\n  stops: stops\n}]; // const options_presence = [{\n//   name: '1993',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1994',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1995',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1996',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1997',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1998',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1999',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2000',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2001',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2002',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2003',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2004',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2005',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2006',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2007',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2008',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2009',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2010',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2011',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2012',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2013',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2014',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2015',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2016',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2017',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2018',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }\n// ]\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nclass App extends React.Component {\n  setTooltip(features) {\n    if (features.length) {\n      ReactDOM.render(React.createElement(Tooltip, {\n        features\n      }), this.tooltipContainer);\n    } else {\n      ReactDOM.unmountComponentAtNode(this.tooltipContainer);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.state = {\n      active: options[0],\n      // active: options_presence[0],\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 2.8,\n        bearing: 0,\n        pitch: 0,\n        width: 500,\n        height: 500\n      },\n      popupInfo: null\n    };\n    this.renderPopup = this.renderPopup.bind(this);\n  }\n\n  renderPopup() {\n    return this.state.popupInfo && /*#__PURE__*/React.createElement(Popup, {\n      tipSize: 5,\n      anchor: \"bottom-right\",\n      longitude: this.state.popupInfo.state.longitude,\n      latitude: this.state.popupInfo.state.latitude,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      closeOnClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.tooltipContainer = document.createElement('div'); // }\n    // });\n\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax',\n      // style: 'mapbox://styles/mapbox/dark-v10',\n      center: [12, 26],\n      zoom: 1.5\n    });\n    this.map.on('load', e => {\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n      this.map.addSource('presence_data', {\n        type: 'geojson',\n        presence_data\n      });\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'country-label');\n      this.map.addLayer({\n        id: 'presence_data',\n        type: 'symbol',\n        source: 'presence_data',\n        layout: {\n          'icon-image': ['concat', ['get', 'icon'], '-15'],\n          'text-field': ['get', 'title'],\n          'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n          'text-offset': [0, 0.6],\n          'text-anchor': 'top'\n        }\n      });\n      this.setFill(); // const features = this.map.queryRenderedFeatures(e.point, {\n      // pestMarker \n      //   .setLngLat(e.lngLat)\n      //   .setHTML('<b><u>Country Information' + '</b></u>' +\n      //     '<ul>' +\n      //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n      //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n      //     '</ul>')\n      // .addTo(this.map);\n      // // });\n      // this.set\n    });\n    this.map = this.drawPolygon.bind(this);\n    this.createArea = this.createArea.bind(this);\n    this.updateArea = this.updateArea.bind(this);\n    this.showPolygonData = this.showPolygonData.bind(this);\n    this.polygonDataCalc = this.polygonDataCalc.bind(this);\n    draw = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        polygon: true,\n        trash: true\n      }\n    });\n    this.map.addControl(draw);\n    this.map.on('draw.create', this.createArea);\n    this.map.on('draw.delete', this.deleteArea);\n    this.map.on('draw.update', this.updateArea);\n    const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n      offset: [-120, 0]\n    }).setLngLat([0, 0]).addTo(this.map);\n    var popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n    var draw = new mapboxgl.MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n        polygon: true,\n        trash: true\n      }\n    });\n    var pestMarker = new mapboxgl.Marker({\n      offset: [-120, 0]\n    }).setLngLat([0, 0]).addTo(this.map);\n    this.map.on('mouseenter', 'countries', e => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('click', 'countries', e => {\n      const features = this.map.queryRenderedFeatures(e.point, {});\n      const {\n        name,\n        description,\n        stops,\n        property\n      } = this.state.active;\n      const prob_intro = features[0].properties[property];\n      this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n      popup.setLngLat(e.lngLat).setHTML('<b><u>Country Information' + '</b></u>' + '<ul>' + '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' + '<li><b>Introduction Probability: </b>' + prob_intro + '</li>' + '</ul>').addTo(this.map);\n    });\n    this.map.on('mouseleave', 'countries', e => {\n      this.map.getCanvas().style.cursor = '';\n      popup.remove();\n    });\n  }\n\n  drawPolygon(points) {\n    this.map.addLayer({\n      'id': 'maine',\n      'type': 'fill',\n      'source': {\n        'type': 'geojson',\n        'data': {\n          'type': 'Feature',\n          'geometry': {\n            'type': 'Polygon',\n            'coordinates': points\n          }\n        }\n      },\n      'layout': {},\n      'paint': {\n        'fill-color': '#088',\n        'fill-opacity': 0.3\n      }\n    });\n  }\n\n  createArea(e) {\n    let data = draw.getAll();\n    const polygonData = data.features[0].geometry.coordinates;\n    this.drawPolygon(polygonData);\n    this.polygonDataCalc(data);\n  }\n\n  polygonDataCalc(data) {\n    let area = turf.area(data);\n    let centroid = turf.centroid(data);\n    let rounded_area = Math.round(area * 100) / 100;\n    this.polygonDiv.innerHTML = '<p><strong>Area: ' + rounded_area + ' square meter</strong></p><h4>Centroid: <br />' + centroid.geometry.coordinates + '</h4>';\n  }\n\n  deleteArea(e) {\n    let data = draw.getAll();\n    this.map.removeLayer('maine').removeSource('maine');\n  }\n\n  updateArea(e) {\n    let data = draw.getAll();\n    this.map.removeLayer('maine').removeSource('maine');\n    const polygonData = data.features[0].geometry.coordinates;\n    this.drawPolygon(polygonData);\n    this.polygonDataCalc(data);\n  }\n\n  setFill() {\n    const {\n      property,\n      stops\n    } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    });\n    this.map.setPaintProperty('countries', 'fill-outline-color', {\n      property,\n      stops\n    }); // this.map.setTooltip('presence_data', '', {\n    //   property,\n    //   stops\n    // })  ;\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return /*#__PURE__*/React.createElement(GeoJSONLayer, {\n      data: presence_data,\n      type: \"symbol\",\n      anchor: \"bottom-right\",\n      longitude: this.state.popupInfo.state.longitude,\n      latitude: this.state.popupInfo.state.latitude,\n      onClose: () => this.setState({\n        popupInfo: null\n      }),\n      closeOnClick: true,\n      symbolLayout: {\n        \"text-field\": \"{title}\",\n        \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n        \"text-offset\": [0, 0.6],\n        \"text-anchor\": \"top\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const {\n      name,\n      description,\n      stops,\n      property\n    } = this.state.active;\n\n    const renderLegendKeys = (stop, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: \"txt-s \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \" round-full w12 h12 inline-block \",\n        style: {\n          backgroundColor: stop[1]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }\n      }, `${stop[0].toLocaleString()}`));\n    };\n\n    const renderOptions = (option, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        key: i,\n        className: \"toggle-container  right  left px3 py3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: () => this.setState({\n          active: options[i]\n        }),\n        checked: option.property === property,\n        name: \"toggle\",\n        type: \"radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle grid txt-s color-white right   left toggle--active-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }\n      }, option.name));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.mapRef,\n      className: \"absolute top right left bottom align-middle grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"ctxt-bold color-white absolute mt6 ml12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 69\n      }\n    }, \"Select Year:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }\n    }, options.map(renderOptions)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb6 color-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"txt-bold txt-s block color-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"txt-s color-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 13\n      }\n    }, description)), stops.map(renderLegendKeys))) // <MapGL\n    //   {...viewport}\n    //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n    //   mapboxApiAccessToken={TOKEN} >\n    //   {markers}\n    //   {this.renderPopup()}\n    //   <div className=\"nav\" style={navStyle}>\n    //     <NavigationControl/>\n    //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n    //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n    //     </Marker>\n    //     </div>\n    //   </div>\n    // </MapGL>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garrettmillar/pandemic_dashboard/src/App.js"],"names":["React","mapboxgl","data","presence_data","Tooltip","ReactDOM","MapGL","Marker","Popup","NavigationControl","GeoJSONLayer","MapboxDraw","turf","accessToken","TOKEN","draw","stops","options","name","description","property","navStyle","position","top","left","padding","App","Component","setTooltip","features","length","render","createElement","tooltipContainer","unmountComponentAtNode","constructor","props","mapRef","createRef","state","active","viewport","latitude","longitude","zoom","bearing","pitch","width","height","popupInfo","renderPopup","bind","setState","componentDidUpdate","setFill","componentDidMount","document","map","Map","container","current","style","center","on","e","addSource","type","addLayer","id","source","layout","drawPolygon","createArea","updateArea","showPolygonData","polygonDataCalc","displayControlsDefault","controls","polygon","trash","addControl","deleteArea","tooltip","offset","setLngLat","addTo","popup","closeButton","closeOnClick","pestMarker","getCanvas","cursor","queryRenderedFeatures","point","prob_intro","properties","lngLat","setHTML","remove","points","getAll","polygonData","geometry","coordinates","area","centroid","rounded_area","Math","round","polygonDiv","innerHTML","removeLayer","removeSource","setPaintProperty","renderLegendKeys","stop","i","backgroundColor","toLocaleString","renderOptions","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl'\nimport data from './pandemic_output.json'\nimport presence_data from './presence_pandemic.json'\nimport Tooltip from './components/tooltip'\nimport ReactDOM from 'react-dom'\nimport MapGL, {Marker, Popup, NavigationControl, GeoJSONLayer, MapboxDraw} from  'mapbox-gl'\nimport turf from 'turf-jsts'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\nconst TOKEN = 'pk.eyJ1IjoiZ2NtaWxsYXIiLCJhIjoiY2pvcDhrbGl4MDFvaTNrczR0d2hxcjdnNSJ9.JYgBw6y2pEq_AEAOCaoQpw';\n\nvar draw;\n\nvar stops =  [\n  [0, 'rgba(45,69,132, 0.4)'],\t\n  [0.1, 'rgba(77,30,129, 0.4)'],\t\n  [0.2, 'rgba(109,41,126, 0.4)'],\t\t\t\n  [0.3, 'rgba(141,52,123, 0.4)'], \n  [0.4, 'rgba(173,63,120, 0.4)'],\t\n  [0.5, 'rgba(205,74,118, 0.4)'], \n  [0.6, 'rgba(210,103,103\t, 0.4)'],\t\t\n  [0.7, 'rgba(216,132,89,0.7)'], \n  [0.8, 'rgba(222,161,75, 0.4)'],\t\n  [0.9, 'rgba(228,190,61, 0.4)'],\n  [1, 'rgba(240,249,33, 0.4)']\n]\n\nconst options = [{\n  name: '1993',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T0',\n  stops: stops\n}, {\n  name: '1994',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T1',\n  stops: stops\n}, {\n  name: '1995',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T2',\n  stops: stops\n}, {\n  name: '1996',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T3',\n  stops: stops\n}, {\n  name: '1997',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T4',\n  stops: stops\n}, {\n  name: '1998',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T5',\n  stops: stops\n}, {\n  name: '1999',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T6',\n  stops: stops\n}, {\n  name: '2000',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T7',\n  stops: stops\n}, {\n  name: '2001',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T8',\n  stops: stops\n}, {\n  name: '2002',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T9',\n  stops: stops\n}, {\n  name: '2003',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T10',\n  stops: stops\n}, {\n  name: '2004',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T11',\n  stops: stops\n}, {\n  name: '2005',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T12',\n  stops: stops\n}, {\n  name: '2006',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T13',\n  stops: stops\n}, {\n  name: '2007',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T14',\n  stops: stops\n}, {\n  name: '2008',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T15',\n  stops: stops\n}, {\n  name: '2009',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T16',\n  stops: stops\n}, {\n  name: '2010',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T17',\n  stops: stops\n}, {\n  name: '2011',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T18',\n  stops: stops\n}, {\n  name: '2012',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T19',\n  stops: stops\n}, {\n  name: '2013',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T20',\n  stops: stops\n}, {\n  name: '2014',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T21',\n  stops: stops\n}, {\n  name: '2015',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T22',\n  stops: stops\n}, {\n  name: '2016',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T23',\n  stops: stops\n}, {\n  name: '2017',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T24',\n  stops: stops\n}, {\n  name: '2018',\n  description: 'Introduction Probability',\n  property: 'Probability of introduction T25',\n  stops: stops\n}\n]\n\n// const options_presence = [{\n//   name: '1993',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1994',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1995',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1996',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1997',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1998',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '1999',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2000',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2001',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2002',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2003',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2004',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2005',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2006',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2007',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2008',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2009',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2010',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2011',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2012',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2013',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2014',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2015',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2016',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2017',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }, {\n//   name: '2018',\n//   description: 'Presence',\n//   property: 'Presence 1993'\n// }\n// ]\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nclass App extends React.Component {\n  mapRef = React.createRef();\n  map;\n  tooltipContainer;\n\n  \n\n  setTooltip(features) {\n    if (features.length) {\n      ReactDOM.render(\n        React.createElement(\n          Tooltip, {\n            features\n          }\n        ),\n        this.tooltipContainer\n      );\n    } else {\n      ReactDOM.unmountComponentAtNode(this.tooltipContainer);\n    }\n  }\n\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      active: options[0],\n      // active: options_presence[0],\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 2.8,\n        bearing: 0,\n        pitch: 0,\n        width: 500,\n        height: 500,\n      },\n      popupInfo: null\n    };\n    this.renderPopup = this.renderPopup.bind(this)\n    };\n\nrenderPopup(){\n    return this.state.popupInfo && (\n      <Popup tipSize={5}\n        anchor=\"bottom-right\"\n        longitude={this.state.popupInfo.state.longitude}\n        latitude={this.state.popupInfo.state.latitude}\n        onClose={() => this.setState({popupInfo: null})}\n        closeOnClick={true}>\n        <p>{}</p>\n      </Popup>\n    )\n  }\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.tooltipContainer = document.createElement('div');\n   \n\n   \n      // }\n    // });\n    \n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/gcmillar/ckc13n1qe3rgx1ilchl8u3xax', // style: 'mapbox://styles/mapbox/dark-v10',\n      center: [12, 26],\n      zoom: 1.5,\n    });\n\n    this.map.on('load',  (e) => {\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      this.map.addSource('presence_data', {\n        type: 'geojson',\n        presence_data\n      });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      },'country-label'); \n\n      this.map.addLayer({\n        id: 'presence_data',\n        type: 'symbol',\n        source: 'presence_data',\n        layout: {\n          'icon-image': \n          ['concat', ['get', 'icon'], '-15'],\n          'text-field': ['get', 'title'],\n          'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n          'text-offset': [0, 0.6],\n          'text-anchor': 'top'\n        }\n      }); \n      \n\n      this.setFill();\n      // const features = this.map.queryRenderedFeatures(e.point, {\n\n      // pestMarker \n      //   .setLngLat(e.lngLat)\n      //   .setHTML('<b><u>Country Information' + '</b></u>' +\n      //     '<ul>' +\n      //     '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n      //     '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n      //     '</ul>')\n      // .addTo(this.map);\n      // // });\n      // this.set\n    });\n\n    this.map = this.drawPolygon.bind(this);\n    this.createArea = this.createArea.bind(this);\n    this.updateArea = this.updateArea.bind(this);\n    this.showPolygonData = this.showPolygonData.bind(this);\n    this.polygonDataCalc = this.polygonDataCalc.bind(this);\n\n    draw = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: {\n          polygon: true,\n          trash: true\n      }\n    });\n\n    this.map.addControl(draw);\n    this.map.on('draw.create', this.createArea);\n    this.map.on('draw.delete', this.deleteArea);\n    this.map.on('draw.update', this.updateArea);\n    \n    const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\n      offset: [-120, 0]\n    }).setLngLat([0,0]).addTo(this.map);\n\n    var popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n      });\n\n      var draw = new mapboxgl.MapboxDraw({\n        displayControlsDefault: false,\n        controls: {\n            polygon: true,\n            trash: true\n        }\n      });\n\n    var pestMarker = new mapboxgl.Marker({\n      offset: [-120, 0]\n    }).setLngLat([0,0]).addTo(this.map);\n\n\n      this.map.on('mouseenter', 'countries', (e) => {\n        this.map.getCanvas().style.cursor =  'pointer';\n      });\n\n      this.map.on('click', 'countries', (e) => {\n        const features = this.map.queryRenderedFeatures(e.point, {\n       \n      });\n\n      const { name, description, stops, property } = this.state.active;\n\n      const prob_intro = features[0].properties[property];\n\n      this.map.getCanvas().style.cursor = features.length ? 'pointer' : '';\n      popup \n      .setLngLat(e.lngLat)\n      .setHTML('<b><u>Country Information' + '</b></u>' +\n        '<ul>' +\n        '<li><b>Name: </b>' + features[0].properties[\"NAME\"] + '</li>' +\n        '<li><b>Introduction Probability: </b>' + prob_intro  + '</li>' +\n        '</ul>')\n    .addTo(this.map);\n    });\n\n    this.map.on('mouseleave', 'countries', (e) => {\n      this.map.getCanvas().style.cursor =  '';\n      popup.remove();\n    });\n\n  }\n\n  drawPolygon(points) {\n    this.map.addLayer({\n        'id': 'maine',\n        'type': 'fill',\n        'source': {\n            'type': 'geojson',\n            'data': {\n                'type': 'Feature',\n                'geometry': {\n                    'type': 'Polygon',\n                    'coordinates': points\n                }\n            }\n        },\n        'layout': {},\n        'paint': {\n            'fill-color': '#088',\n            'fill-opacity': 0.3\n        }\n    });\n}\n\n createArea(e) {\n      let data = draw.getAll();\n      const polygonData = data.features[0].geometry.coordinates;\n      this.drawPolygon(polygonData);\n      this.polygonDataCalc(data);\n}\n\npolygonDataCalc(data){\n    let area = turf.area(data);\n    let centroid = turf.centroid(data);\n    let rounded_area = Math.round(area*100)/100;\n    this.polygonDiv.innerHTML = '<p><strong>Area: ' + rounded_area + ' square meter</strong></p><h4>Centroid: <br />'+\n        centroid.geometry.coordinates+'</h4>';\n}\n\ndeleteArea(e) {\n     let data = draw.getAll();\n     this.map.removeLayer('maine').removeSource('maine');\n}\nupdateArea(e) {\n      let data = draw.getAll();\n      this.map.removeLayer('maine').removeSource('maine');\n      const polygonData = data.features[0].geometry.coordinates;\n      this.drawPolygon(polygonData);\n      this.polygonDataCalc(data);\n}\n\n\n\n  setFill() {\n    const { property, stops } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    },\n    )\n    this.map.setPaintProperty('countries', 'fill-outline-color', {\n      property,\n      stops\n    })\n    // this.map.setTooltip('presence_data', '', {\n    //   property,\n    //   stops\n    // })  ;\n  }\n\n  render() {\n    const {viewport} = this.state;\n    return (\n      <GeoJSONLayer\n        data={presence_data}\n        type=\"symbol\"\n        anchor=\"bottom-right\"\n        longitude={this.state.popupInfo.state.longitude}\n        latitude={this.state.popupInfo.state.latitude}\n        onClose={() => this.setState({popupInfo: null})}\n        closeOnClick={true}\n        symbolLayout={{\n          \"text-field\": \"{title}\",\n          \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n          \"text-offset\": [0, 0.6],\n          \"text-anchor\": \"top\"\n        }}/>\n    );\n  }\n\n  render() {\n    const { name, description, stops, property } = this.state.active;\n    const renderLegendKeys = (stop, i) => {\n      return (\n        <div key={i} className='txt-s '>\n          <span className=' round-full w12 h12 inline-block ' style={{ backgroundColor: stop[1] }} />\n          <span >{`${stop[0].toLocaleString()}`}</span>\n        </div>\n      );\n    }\n\n   \n    const renderOptions = (option, i) => {\n      return (\n        <label key={i} className=\"toggle-container  right  left px3 py3\">\n          <input  onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n          <div  className=\"toggle grid txt-s color-white right   left toggle--active-white\">{option.name}</div>\n        </label>\n      );\n    }\n\n    return (\n      <div>\n        <div ref={this.mapRef} className=\"absolute top right left bottom align-middle grid\" />\n        <label className=\"ctxt-bold color-white absolute mt6 ml12\" ><b>Select Year:</b></label>\n        <div  className=\"toggle-group grid ctxt-bold color-white absolute mt36 ml12 border border--2 border--white bg-transparent  shadow-darken10  absolute  \">\n          {options.map(renderOptions)}\n        </div>\n        <div  className=\" bg-transparent color-white absolute bottom right mr12 mb24 py12 px12 border--white round border border--2 round shadow-darken10 z1 \">\n          <div className='mb6 color-white'>\n            <h2 className=\"txt-bold txt-s block color-white\">{name}</h2>\n            <p className='txt-s color-white'>{description}</p>\n          </div>\n          {stops.map(renderLegendKeys)}\n        </div>\n      </div>\n    \n\n      // <MapGL\n      //   {...viewport}\n      //   mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      //   mapboxApiAccessToken={TOKEN} >\n      //   {markers}\n      //   {this.renderPopup()}\n      //   <div className=\"nav\" style={navStyle}>\n      //     <NavigationControl/>\n      //     <Marker longitude={} latitude={} offsetTop={} offsetLeft={}>\n      //       <Pin onClick={() => this.setState({popupInfo: popupInfo})}/>\n      //     </Marker>\n      //     </div>\n      //   </div>\n      // </MapGL>\n\n      );\n      \n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}