CHIPS_CEUS <- read.table("CEUS_final_stats_data.txt", header = TRUE, row.names=NULL, sep="|")
CHIPS_CEUS$direction <- NA
CHIPS_CEUS$direction[which(CHIPS_CEUS$participant %in% c(1, 3, 4, 10, 11, 12))] <- "waal_til"
CHIPS_CEUS$direction[which(CHIPS_CEUS$participant %in% c(2, 5, 6, 7, 8, 9))] <- "til_waal"
############################################################
CHIPS_waal_til <- subset(CHIPS_CEUS, direction=="waal_til")
CHIPS_til_waal <- subset(CHIPS_CEUS, direction=="til_waal")
# CHIPS_CEUS <-subset(CHIPS_CEUS, lc_type!="")
# # colnames(CHIPS_CEUS)
# viewshed_stats_dir1 <- read.table("all_sorted.csv", header = TRUE, row.names=NULL, sep=",")
# viewshed_stats_dir2 <- read.table("all2_sorted.csv", header = TRUE, row.names=NULL, sep=",")
# read in GRASS viewshed results  - both directions (read in as separate files for each viewpoint spacing)
# 20m viewpoint spacing
viewshed_20m_dir1 <- read.table("/Users/garrettmillar/Downloads/results/all_20m_dir1.txt", header = TRUE, row.names=NULL, sep=",")
viewshed_20m_dir2 <- read.table("/Users/garrettmillar/Downloads/results/all_20m_dir2.txt", header = TRUE, row.names=NULL, sep=",")
# 50m viewpoint spacing
viewshed_50m_dir1 <- read.table("/Users/garrettmillar/Downloads/results/all_50m_dir1.txt", header = TRUE, row.names=NULL, sep=",")
viewshed_50m_dir2 <- read.table("/Users/garrettmillar/Downloads/results/all_50m_dir2.txt", header = TRUE, row.names=NULL, sep=",")
# 100m viewpoint spacing
viewshed_100m_dir1 <- read.table("/Users/garrettmillar/Downloads/results/all_100m_dir1.txt", header = TRUE, row.names=NULL, sep=",")
viewshed_100m_dir2 <- read.table("/Users/garrettmillar/Downloads/results/all_100m_dir2.txt", header = TRUE, row.names=NULL, sep=",")
# ordering view data by viewpoint ID
viewshed_20m_dir1 <- viewshed_20m_dir1[order(viewshed_20m_dir1$viewpoint_id),]
viewshed_20m_dir2 <- viewshed_20m_dir2[order(viewshed_20m_dir2$viewpoint_id),]
viewshed_50m_dir2 <- viewshed_50m_dir2[order(viewshed_50m_dir2$viewpoint_id),]
viewshed_50m_dir1 <- viewshed_50m_dir1[order(viewshed_50m_dir1$viewpoint_id),]
viewshed_100m_dir1 <- viewshed_100m_dir1[order(viewshed_100m_dir1$viewpoint_id),]
viewshed_100m_dir2 <- viewshed_100m_dir2[order(viewshed_100m_dir2$viewpoint_id),]
# then inserting proper distance and direction delineations into each variable name for statistical distinctions later on
names(viewshed_20m_dir1) <- paste0(names(viewshed_20m_dir1), "_20m")
names(viewshed_20m_dir2) <- paste0(names(viewshed_20m_dir2), "_20m")
names(viewshed_50m_dir1) <- paste0(names(viewshed_50m_dir1), "_50m")
names(viewshed_50m_dir2) <- paste0(names(viewshed_50m_dir2), "_50m")
names(viewshed_100m_dir1) <- paste0(names(viewshed_100m_dir1), "_100m")
names(viewshed_100m_dir2) <- paste0(names(viewshed_100m_dir2), "_100m")
# cleaning more encompassing dataframes before joining with viewshed results
drops <- c('east','north','height','cat','lon.1','lat.1')
CHIPS_waal_til <- CHIPS_waal_til[ , !(names(CHIPS_waal_til) %in% drops)]
CHIPS_til_waal <- CHIPS_til_waal[ , !(names(CHIPS_til_waal) %in% drops)]
# a specified joining process first carried out to avoid potential conflicts of overlap
stats_20m_dir1 <- join(CHIPS_waal_til, viewshed_20m_dir1, by = "viewpoint_id_20m")
stats_20m_dir2 <- join(CHIPS_til_waal, viewshed_20m_dir2, by = "viewpoint_id_20m")
stats_50m_dir1 <- join(CHIPS_waal_til, viewshed_50m_dir1, by = "viewpoint_id_50m")
stats_50m_dir2 <- join(CHIPS_til_waal, viewshed_50m_dir2, by = "viewpoint_id_50m")
stats_100m_dir1 <- join(CHIPS_waal_til, viewshed_100m_dir1, by = "viewpoint_id_100m")
stats_100m_dir2 <- join(CHIPS_til_waal, viewshed_100m_dir2, by = "viewpoint_id_100m")
# final round of cleaning (repetitive lat lons) - such a dirty, dirty, dataset you are ;)
drops <- c('lon_20m', 'lat_20m', 'lon_50m', 'lat_50m', 'lon_100m', 'lat_100m')
stats_20m_dir1 <- stats_20m_dir1[ , !(names(stats_20m_dir1) %in% drops)]
stats_20m_dir2 <- stats_20m_dir2[ , !(names(stats_20m_dir2) %in% drops)]
stats_50m_dir1 <- stats_50m_dir1[ , !(names(stats_50m_dir1) %in% drops)]
stats_50m_dir2 <- stats_50m_dir2[ , !(names(stats_50m_dir2) %in% drops)]
stats_100m_dir1 <- stats_100m_dir1[ , !(names(stats_100m_dir1) %in% drops)]
stats_100m_dir2 <- stats_100m_dir2[ , !(names(stats_100m_dir2) %in% drops)]
# then join all
final_stats_dir1 <- do.call("cbind", list(stats_20m_dir1, stats_50m_dir1[, 28:35],
stats_100m_dir1[, 28:35]))
final_stats_dir2 <- do.call("cbind", list(stats_20m_dir2, stats_50m_dir2[, 28:35],
stats_100m_dir2[, 28:35]))
# export
write.csv(final_stats_dir1, file = "/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir1.csv",
col.names = TRUE, row.names = FALSE)
write.csv(final_stats_dir2, file = "/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir2.csv",
col.names = TRUE, row.names = FALSE)
# join both directions
final_stats_all_dirs <- do.call("rbind", list(final_stats_dir1, final_stats_dir2))
# "numberfying" direction column for easier import into GRASS
final_stats_all_dirs$direction <- gsub("til_waal",  1, final_stats_all_dirs$direction)
final_stats_all_dirs$direction <- gsub("waal_til", 2, final_stats_all_dirs$direction)
final_stats_all_dirs$direction <- as.numeric(as.character(final_stats_all_dirs$direction))
unique(final_stats_all_dirs$direction)
# @ same for land use
unique(final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Developed",  1, final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Natural", 2, final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Recreation", 3, final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Water", 4, final_stats_all_dirs$lc_type)
unique(final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- as.numeric(as.character(final_stats_all_dirs$lc_type))
# @ same for roads
unique(final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- gsub("small_roads",  1, final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- gsub("med_roads", 2, final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- gsub("large_roads", 3, final_stats_all_dirs$road_type)
unique(final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- as.numeric(as.character(final_stats_all_dirs$road_type))
# ensuring numeric coords
final_stats_all_dirs$lat <- as.numeric(final_stats_all_dirs$lat)
final_stats_all_dirs$lon <- as.numeric(final_stats_all_dirs$lon)
# final_stats_all_dirs <- as.numeric(as.character(final_stats_all_dirs))
# final_stats_all_dirs$direction <- as.numeric(as.character(final_stats_all_dirs$direction))
write.table(final_stats_all_dirs, row.names = F, quote = F,
col.names = F,
sep = "|",
dec = ".",
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs.txt")
# Exporting to GeoJSON
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
crs(final_stats_all_dirs_lonlat) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
final_stats_all_dirs_lonlat@proj4string
proj4string(final_stats_all_dirs_lonlat) <- spTransform("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
# Exporting to GeoJSON
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
proj4string(final_stats_all_dirs_lonlat) <- CRS("+init=epsg:28992")
proj4string(final_stats_all_dirs_lonlat) <- spTransform("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
proj4string(final_stats_all_dirs_lonlat)
CRS(final_stats_all_dirs_lonlat) <- spTransform("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
spTransform(final_stats_all_dirs_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
# Exporting to GeoJSON
writeOGR(final_stats_all_dirs_lonlat, "/Users/garrettmillar/Desktop/CEUS/High-Importance/",
layer="final_stats_all_dirs_lonlat", driver="GeoJSON")
# Exporting to GeoJSON
writeOGR(final_stats_all_dirs_lonlat, "/Users/garrettmillar/Desktop/CEUS/High-Importance",
layer="final_stats_all_dirs_lonlat", driver="GeoJSON")
# Exporting to GeoJSON
writeOGR(final_stats_all_dirs_lonlat,
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat.json",
layer="final_stats_all_dirs_lonlat", driver="GeoJSON")
# "numberfying" direction column for easier import into GRASS
final_stats_dir1$direction <- gsub("til_waal",  1, final_stats_dir1$direction)
final_stats_dir1$direction <- gsub("waal_til", 2, final_stats_dir1$direction)
final_stats_dir1$direction <- as.numeric(as.character(final_stats_dir1$direction))
unique(final_stats_dir1$direction)
# @ same for land use
unique(final_stats_dir1$lc_type)
final_stats_dir1$lc_type <- gsub("Developed",  1, final_stats_dir1$lc_type)
final_stats_dir1$lc_type <- gsub("Natural", 2, final_stats_dir1$lc_type)
final_stats_dir1$lc_type <- gsub("Recreation", 3, final_stats_dir1$lc_type)
final_stats_dir1$lc_type <- gsub("Water", 4, final_stats_dir1$lc_type)
unique(final_stats_dir1$lc_type)
final_stats_dir1$lc_type <- as.numeric(as.character(final_stats_dir1$lc_type))
# @ same for roads
unique(final_stats_dir1$road_type)
final_stats_dir1$road_type <- gsub("small_roads",  1, final_stats_dir1$road_type)
final_stats_dir1$road_type <- gsub("med_roads", 2, final_stats_dir1$road_type)
final_stats_dir1$road_type <- gsub("large_roads", 3, final_stats_dir1$road_type)
unique(final_stats_dir1$road_type)
final_stats_dir1$road_type <- as.numeric(as.character(final_stats_dir1$road_type))
# ensuring numeric coords
final_stats_dir1$lat <- as.numeric(final_stats_dir1$lat)
final_stats_dir1$lon <- as.numeric(final_stats_dir1$lon)
# final_stats_dir1 <- as.numeric(as.character(final_stats_dir1))
# final_stats_dir1$direction <- as.numeric(as.character(final_stats_dir1$direction))
write.table(final_stats_dir1, row.names = F, quote = F,
col.names = F,
sep = "|",
dec = ".",
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir1.txt")
# ~~~~~~~~~ Exporting to GeoJSON ~~~~~~~~~
final_stats_dir1_lonlat <- final_stats_dir1
coordinates(final_stats_dir1_lonlat) <- ~ lon + lat
proj4string(final_stats_dir1_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
spTransform(final_stats_dir1_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
# Exporting
writeOGR(final_stats_dir1_lonlat,
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir1_lonlat.json",
layer="final_stats_dir1_lonlat", driver="GeoJSON")
# "numberfying" direction column for easier import into GRASS
final_stats_dir2$direction <- gsub("til_waal",  1, final_stats_dir2$direction)
final_stats_dir2$direction <- gsub("waal_til", 2, final_stats_dir2$direction)
final_stats_dir2$direction <- as.numeric(as.character(final_stats_dir2$direction))
unique(final_stats_dir2$direction)
# @ same for land use
unique(final_stats_dir2$lc_type)
final_stats_dir2$lc_type <- gsub("Developed",  1, final_stats_dir2$lc_type)
final_stats_dir2$lc_type <- gsub("Natural", 2, final_stats_dir2$lc_type)
final_stats_dir2$lc_type <- gsub("Recreation", 3, final_stats_dir2$lc_type)
final_stats_dir2$lc_type <- gsub("Water", 4, final_stats_dir2$lc_type)
unique(final_stats_dir2$lc_type)
final_stats_dir2$lc_type <- as.numeric(as.character(final_stats_dir2$lc_type))
# @ same for roads
unique(final_stats_dir2$road_type)
final_stats_dir2$road_type <- gsub("small_roads",  1, final_stats_dir2$road_type)
final_stats_dir2$road_type <- gsub("med_roads", 2, final_stats_dir2$road_type)
final_stats_dir2$road_type <- gsub("large_roads", 3, final_stats_dir2$road_type)
unique(final_stats_dir2$road_type)
final_stats_dir2$road_type <- as.numeric(as.character(final_stats_dir2$road_type))
# ensuring numeric coords
final_stats_dir2$lat <- as.numeric(final_stats_dir2$lat)
final_stats_dir2$lon <- as.numeric(final_stats_dir2$lon)
# final_stats_dir2 <- as.numeric(as.character(final_stats_dir2))
# final_stats_dir2$direction <- as.numeric(as.character(final_stats_dir2$direction))
write.table(final_stats_dir2, row.names = F, quote = F,
col.names = F,
sep = "|",
dec = ".",
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir2.txt")
# ~~~~~~~~~ Exporting to GeoJSON ~~~~~~~~~
final_stats_dir2_lonlat <- final_stats_dir2
coordinates(final_stats_dir2_lonlat) <- ~ lon + lat
proj4string(final_stats_dir2_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
spTransform(final_stats_dir2_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
# Exporting
writeOGR(final_stats_dir2_lonlat,
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir2_lonlat.json",
layer="final_stats_dir2_lonlat", driver="GeoJSON")
# join both directions
final_stats_all_dirs <- do.call("rbind", list(final_stats_dir1, final_stats_dir2))
# "numberfying" direction column for easier import into GRASS
final_stats_all_dirs$direction <- gsub("til_waal",  1, final_stats_all_dirs$direction)
final_stats_all_dirs$direction <- gsub("waal_til", 2, final_stats_all_dirs$direction)
final_stats_all_dirs$direction <- as.numeric(as.character(final_stats_all_dirs$direction))
unique(final_stats_all_dirs$direction)
# @ same for land use
unique(final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Developed",  1, final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Natural", 2, final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Recreation", 3, final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- gsub("Water", 4, final_stats_all_dirs$lc_type)
unique(final_stats_all_dirs$lc_type)
final_stats_all_dirs$lc_type <- as.numeric(as.character(final_stats_all_dirs$lc_type))
# @ same for roads
unique(final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- gsub("small_roads",  1, final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- gsub("med_roads", 2, final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- gsub("large_roads", 3, final_stats_all_dirs$road_type)
unique(final_stats_all_dirs$road_type)
final_stats_all_dirs$road_type <- as.numeric(as.character(final_stats_all_dirs$road_type))
# ensuring numeric coords
final_stats_all_dirs$lat <- as.numeric(final_stats_all_dirs$lat)
final_stats_all_dirs$lon <- as.numeric(final_stats_all_dirs$lon)
# final_stats_all_dirs <- as.numeric(as.character(final_stats_all_dirs))
# final_stats_all_dirs$direction <- as.numeric(as.character(final_stats_all_dirs$direction))
write.table(final_stats_all_dirs, row.names = F, quote = F,
col.names = F,
sep = "|",
dec = ".",
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs.txt")
# ~~~~~~~~~ Exporting to GeoJSON ~~~~~~~~~
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
proj4string(final_stats_all_dirs_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
spTransform(final_stats_all_dirs_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
# Exporting
writeOGR(final_stats_all_dirs_lonlat,
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat.json",
layer="final_stats_all_dirs_lonlat", driver="GeoJSON")
# ~~~~~~~~~ Exporting to GeoJSON ~~~~~~~~~
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
proj4string(final_stats_all_dirs_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
spTransform(final_stats_all_dirs_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
# Exporting
writeOGR(final_stats_all_dirs_lonlat,
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat.geojson",
layer="final_stats_all_dirs_lonlat", driver="GeoJSON")
writeOGR(obj=final_stats_all_dirs_lonlat,
dsn="/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat",
layer="final_stats_all_dirs_lonlat", driver="ESRI Shapefile") #
final_stats_all_dirs
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
final_stats_all_dirs_lonlat$lon <-final_stats_all_dirs_lonlat@coords[,1]
final_stats_all_dirs_lonlat$x <-final_stats_all_dirs_lonlat@coords[,1]
final_stats_all_dirs_lonlat$y <-final_stats_all_dirs_lonlat@coords[,2]
proj4string(final_stats_all_dirs_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
spTransform(final_stats_all_dirs_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
final_stats_all_dirs_lonlat
View(final_stats_all_dirs_lonlat)
writeOGR(obj=final_stats_all_dirs_lonlat,
dsn="/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat",
layer="final_stats_all_dirs_lonlat", driver="ESRI Shapefile") #
writeOGR(obj=final_stats_all_dirs_lonlat,
dsn="/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat",
layer="final_stats_all_dirs_lonlat", driver="ESRI Shapefile") #
# ~~~~~~~~~ Exporting to GeoJSON ~~~~~~~~~
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
proj4string(final_stats_all_dirs_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
spTransform(final_stats_all_dirs_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
final_stats_all_dirs_lonlat$x <-final_stats_all_dirs_lonlat@coords[,1]
final_stats_all_dirs_lonlat$y <-final_stats_all_dirs_lonlat@coords[,2]
# Exporting
writeOGR(final_stats_all_dirs_lonlat,
"/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat.geojson",
layer="final_stats_all_dirs_lonlat", driver="GeoJSON")
writeOGR(obj=final_stats_all_dirs_lonlat,
dsn="/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat",
layer="final_stats_all_dirs_lonlat", driver="ESRI Shapefile") #
# ~~~~~~~~~ Exporting to GeoJSON ~~~~~~~~~
final_stats_all_dirs_lonlat <- final_stats_all_dirs
coordinates(final_stats_all_dirs_lonlat) <- ~ lon + lat
proj4string(final_stats_all_dirs_lonlat) <- CRS("+init=epsg:28992")
## Transforming coordinates to UTM
final_stats_all_dirs_lonlat <- spTransform(final_stats_all_dirs_lonlat,"+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0")
final_stats_all_dirs_lonlat$x <-final_stats_all_dirs_lonlat@coords[,1]
final_stats_all_dirs_lonlat$y <-final_stats_all_dirs_lonlat@coords[,2]
final_stats_all_dirs_lonlat@coords[,1]
writeOGR(obj=final_stats_all_dirs_lonlat,
dsn="/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_all_dirs_lonlat",
layer="final_stats_all_dirs_lonlat", driver="ESRI Shapefile") #
options(digits = 8)
if (!require(rgdal)) {install.packages("rgdal"); library(rgdal)}
if (!require(dplyr)) {install.packages("dplyr"); library(dplyr)}
if (!require(tidyr)) {install.packages("tidyr"); library(tidyr)}
if (!require(sp)) {install.packages("sp"); library(sp)}
if (!require(raster)) {install.packages("raster"); library(raster)}
if (!require(rgeos)) {install.packages("rgeos"); library(rgeos)}
if (!require(rgbif)) {install.packages("rgbif"); library(rgbif)}
if (!require(viridis)) {install.packages("viridis"); library(viridis)}
if (!require(gridExtra)) {install.packages("gridExtra"); library(gridExtra)}
if (!require(R.matlab)) {install.packages("R.matlab"); library(R.matlab)}
if (!require(plyr)) {install.packages("plyr"); library(plyr)}
if (!require(data.table)) {install.packages("data.table"); library(data.table)}
if (!require(maptools)) {install.packages("maptools"); library(maptools)}
if (!require(spatstat)) {install.packages("spatstat"); library(spatstat)}
if (!require(rasterVis)) {install.packages("rasterVis"); library(rasterVis)}
if (!require(leaflet)) {install.packages("leaflet"); library(leaflet)}
if (!require(RColorBrewer)) {install.packages("RColorBrewer"); library(RColorBrewer)}
if (!require(scales)) {install.packages("scales"); library(scales)}
if (!require(ggplot2)) {install.packages("ggplot2"); library(ggplot2)}
if (!require(broom)) {install.packages("broom"); library(broom)}
if (!require(knitr)) {install.packages("knitr"); library(knitr)}
if (!require(lme4)) {install.packages("lme4"); library(lme4)}
if (!require(nlme)) {install.packages("nlme"); library(nlme)}
if (!require(Hmisc)) {install.packages("Hmisc"); library(Hmisc)}
if (!require(maptools)) {install.packages("maptools"); library(maptools)}
if (!require(spdep)) {install.packages("spdep"); library(spdep)}
if (!require(leaflet)) {install.packages("leaflet"); library(leaflet)}
if (!require(RColorBrewer)) {install.packages("RColorBrewer"); library(RColorBrewer)}
if (!require(readxl)) {install.packages("readxl"); library(readxl)}
if (!require(readr)) {install.packages("readxl"); library(readr)}
if (!require(ncf)) {install.packages("ncf"); library(ncf)}
if (!require(plotly)) {install.packages("plotly"); library(plotly)}
if (!require(psych)) {install.packages("psych"); library(psych)}
if (!require(fastDummies)) {install.packages("fastDummies"); library(fastDummies)}
setwd("/Volumes/gmillar_SSD/CHIPS/CEUS/data")
CHIPS_CEUS <- read.table("CEUS_final_stats_data.txt", header = TRUE, row.names=NULL, sep="|")
View(CHIPS_CEUS)
CHIPS_CEUS$direction <- NA
CHIPS_CEUS$direction[which(CHIPS_CEUS$participant %in% c(1, 3, 4, 10, 11, 12))] <- "waal_til"
CHIPS_CEUS$direction[which(CHIPS_CEUS$participant %in% c(2, 5, 6, 7, 8, 9))] <- "til_waal"
############################################################
CHIPS_waal_til <- subset(CHIPS_CEUS, direction=="waal_til")
CHIPS_til_waal <- subset(CHIPS_CEUS, direction=="til_waal")
# 20m viewpoint spacing
viewshed_20m_dir1 <- read.table("/Users/garrettmillar/Downloads/results/all_20m_dir1.txt", header = TRUE, row.names=NULL, sep=",")
viewshed_20m_dir2 <- read.table("/Users/garrettmillar/Downloads/results/all_20m_dir2.txt", header = TRUE, row.names=NULL, sep=",")
# 50m viewpoint spacing
viewshed_50m_dir1 <- read.table("/Users/garrettmillar/Downloads/results/all_50m_dir1.txt", header = TRUE, row.names=NULL, sep=",")
viewshed_50m_dir2 <- read.table("/Users/garrettmillar/Downloads/results/all_50m_dir2.txt", header = TRUE, row.names=NULL, sep=",")
# 100m viewpoint spacing
viewshed_100m_dir1 <- read.table("/Users/garrettmillar/Downloads/results/all_100m_dir1.txt", header = TRUE, row.names=NULL, sep=",")
viewshed_100m_dir2 <- read.table("/Users/garrettmillar/Downloads/results/all_100m_dir2.txt", header = TRUE, row.names=NULL, sep=",")
# ordering view data by viewpoint ID
viewshed_20m_dir1 <- viewshed_20m_dir1[order(viewshed_20m_dir1$viewpoint_id),]
viewshed_20m_dir2 <- viewshed_20m_dir2[order(viewshed_20m_dir2$viewpoint_id),]
viewshed_50m_dir2 <- viewshed_50m_dir2[order(viewshed_50m_dir2$viewpoint_id),]
viewshed_50m_dir1 <- viewshed_50m_dir1[order(viewshed_50m_dir1$viewpoint_id),]
viewshed_100m_dir1 <- viewshed_100m_dir1[order(viewshed_100m_dir1$viewpoint_id),]
viewshed_100m_dir2 <- viewshed_100m_dir2[order(viewshed_100m_dir2$viewpoint_id),]
names(viewshed_20m_dir1) <- paste0(names(viewshed_20m_dir1), "_20m")
names(viewshed_20m_dir2) <- paste0(names(viewshed_20m_dir2), "_20m")
names(viewshed_50m_dir1) <- paste0(names(viewshed_50m_dir1), "_50m")
names(viewshed_50m_dir2) <- paste0(names(viewshed_50m_dir2), "_50m")
names(viewshed_100m_dir1) <- paste0(names(viewshed_100m_dir1), "_100m")
names(viewshed_100m_dir2) <- paste0(names(viewshed_100m_dir2), "_100m")
# cleaning more encompassing dataframes before joining with viewshed results
drops <- c('east','north','height','cat','lon.1','lat.1')
CHIPS_waal_til <- CHIPS_waal_til[ , !(names(CHIPS_waal_til) %in% drops)]
CHIPS_til_waal <- CHIPS_til_waal[ , !(names(CHIPS_til_waal) %in% drops)]
# a specified joining process first carried out to avoid potential conflicts of overlap
stats_20m_dir1 <- join(CHIPS_waal_til, viewshed_20m_dir1, by = "viewpoint_id_20m")
stats_20m_dir2 <- join(CHIPS_til_waal, viewshed_20m_dir2, by = "viewpoint_id_20m")
stats_50m_dir1 <- join(CHIPS_waal_til, viewshed_50m_dir1, by = "viewpoint_id_50m")
stats_50m_dir2 <- join(CHIPS_til_waal, viewshed_50m_dir2, by = "viewpoint_id_50m")
stats_100m_dir1 <- join(CHIPS_waal_til, viewshed_100m_dir1, by = "viewpoint_id_100m")
stats_100m_dir2 <- join(CHIPS_til_waal, viewshed_100m_dir2, by = "viewpoint_id_100m")
drops <- c('lon_20m', 'lat_20m', 'lon_50m', 'lat_50m', 'lon_100m', 'lat_100m')
stats_20m_dir1 <- stats_20m_dir1[ , !(names(stats_20m_dir1) %in% drops)]
stats_20m_dir2 <- stats_20m_dir2[ , !(names(stats_20m_dir2) %in% drops)]
stats_50m_dir1 <- stats_50m_dir1[ , !(names(stats_50m_dir1) %in% drops)]
stats_50m_dir2 <- stats_50m_dir2[ , !(names(stats_50m_dir2) %in% drops)]
stats_100m_dir1 <- stats_100m_dir1[ , !(names(stats_100m_dir1) %in% drops)]
stats_100m_dir2 <- stats_100m_dir2[ , !(names(stats_100m_dir2) %in% drops)]
# then join all
final_stats_dir1 <- do.call("cbind", list(stats_20m_dir1, stats_50m_dir1[, 28:35],
stats_100m_dir1[, 28:35]))
final_stats_dir2 <- do.call("cbind", list(stats_20m_dir2, stats_50m_dir2[, 28:35],
stats_100m_dir2[, 28:35]))
# export
write.csv(final_stats_dir1, file = "/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir1.csv",
col.names = TRUE, row.names = FALSE)
write.csv(final_stats_dir2, file = "/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir2.csv",
col.names = TRUE, row.names = FALSE)
stats_20m_dir1
View(stats_50m_dir1)
# then join all
final_stats_dir1 <- do.call("cbind", list(stats_20m_dir1, stats_50m_dir1[, 29:36],
stats_100m_dir1[, 29:36]))
final_stats_dir2 <- do.call("cbind", list(stats_20m_dir2, stats_50m_dir2[, 29:36],
stats_100m_dir2[, 29:36]))
# export
write.csv(final_stats_dir1, file = "/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir1.csv",
col.names = TRUE, row.names = FALSE)
write.csv(final_stats_dir2, file = "/Users/garrettmillar/Desktop/CEUS/High-Importance/final_stats_dir2.csv",
col.names = TRUE, row.names = FALSE)
array_combine(range(date("Y"), 1993), range(date("Y"), 2008));
seq(as.array("1993"),as.array("2008"), by = "years")
seq(as.Date("2014/09/04"), by = "day", length.out = 5)
seq(as.Date("2014"), by = "year", length.out = 5)
d1 <- as.Date(paste0("1993"), "%Y%")
d1
as.Date("1993")
lubridate::ymd()
lubridate
library(lubridate)
dim(as.array(letters))
dim(as.array(1993))
seq(as.Date("2011-12-30"), as.Date("2012-01-04"), by="days")
seq(as.Date("1993"), as.Date("2008"), by="days")
seq(as.Date("2011-12-30"), as.Date("2012-01-04"), by="years")
seq(as.Date("1993-12-30"), as.Date("2012-01-04"), by="years")
knitr::opts_chunk$set(echo = TRUE)
require(geojsonio)
require(plyr)
po1 <- readOGR('/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson', stringsAsFactors = F)
require(gdal)
po1 <- readOGR('/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson', stringsAsFactors = F)
setwd("/Users/garrettmillar/pandemic_dashboard/")
dsn <- "pandemic_output.geojson"
po1 = readOGR(dsn)
require(rgdal)
setwd("/Users/garrettmillar/pandemic_dashboard/")
dsn <- "pandemic_output.geojson"
po1 = readOGR(dsn)
po1 <- readOGR(dsn, stringsAsFactors = F)
pname <- as.character(po1$NAME)
podf <- ldply(.data=c(1:length(pname)), .fun=function(X){
X.df <- data.frame(name=rep(pname[X], 27), prob=t(data.frame(po1[which(po1$NAME==pname[X]),
c('Probability.of.introduction.T0',
'Probability.of.introduction.T1',
'Probability.of.introduction.T2',
'Probability.of.introduction.T3',
'Probability.of.introduction.T4',
'Probability.of.introduction.T5',
'Probability.of.introduction.T6',
'Probability.of.introduction.T7',
'Probability.of.introduction.T8',
'Probability.of.introduction.T9',
'Probability.of.introduction.T10',
'Probability.of.introduction.T11',
'Probability.of.introduction.T12',
'Probability.of.introduction.T13',
'Probability.of.introduction.T14',
'Probability.of.introduction.T15',
'Probability.of.introduction.T16',
'Probability.of.introduction.T17',
'Probability.of.introduction.T18',
'Probability.of.introduction.T19',
'Probability.of.introduction.T20',
'Probability.of.introduction.T21',
'Probability.of.introduction.T22',
'Probability.of.introduction.T23',
'Probability.of.introduction.T24',
'Probability.of.introduction.T25',
'Probability.of.introduction.T26')], row.names=NULL
)
),
year=c('1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000','2001', '2002', '2003', '2004', '2005',
'2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018',
'2019'), row.names=NULL
)
}, .progress='text')
geojsonio::geojson_write(podf, file = "Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson")
podf
View(podf)
downloader::download(url = "https://raw.githubusercontent.com/ncsu-landscape-dynamics/pandemic_dashboard/master/pandemic_output.geojson", destfile = "/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson")
require(downloader)
install.packages(downloader)
po1 = FROM_GeoJson(url_file_string = dsn)
setwd("/Users/garrettmillar/pandemic_dashboard/")
library(geojsonR)
install.packages(geojsonR)
install.packages("geojsonio")
install.packages("geojsonio")
install.packages("geojsonio")
knitr::opts_chunk$set(echo = TRUE)
library("geojsonio")
library("sp")
file <- system.file("pandemic_output.geojson", package = "geojsonio")
out <- geojson_read(file, what = "sp")
file <- system.file("/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson", package = "geojsonio")
out <- geojson_read(file, what = "sp")
system.file("/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson", package = "geojsonio")
library("geojsonio")
library(geojsonio)
file <- system.file("/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson", package = "geojsonio")
out <- geojson_read(file, what = "sp")
require(geojsonio)
require(plyr)
require(rgdal)
library(geojsonio)
setwd("/Users/garrettmillar/pandemic_dashboard/")
dsn <- "pandemic_output.geojson"
library("sp")
file <- system.file("/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson", package = "geojsonio")
out <- geojson_read(file)
out <- geojson_read(file)
out <- geojson_read("/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson")
# po1 <- readOGR(dsn, stringsAsFactors = F)
out <- as.character(out$NAME)
out
out <- geojson_read("/Users/garrettmillar/pandemic_dashboard/pandemic_output.geojson", stringsAsFactors = F)
